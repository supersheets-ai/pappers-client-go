/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ScoringFinancierDetailsScore type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScoringFinancierDetailsScore{}

// ScoringFinancierDetailsScore Détails du score financier.
type ScoringFinancierDetailsScore struct {
	ScoreEbitCa *float32 `json:"score_ebit_ca,omitempty"`
	ScoreFondsDeRoulement *float32 `json:"score_fonds_de_roulement,omitempty"`
	ScoreTresorerieNette *float32 `json:"score_tresorerie_nette,omitempty"`
	ScoreDettesFiscalesVa *float32 `json:"score_dettes_fiscales_va,omitempty"`
	ScoreCashFlow *float32 `json:"score_cash_flow,omitempty"`
	ScoreDettesFiscalesCa *float32 `json:"score_dettes_fiscales_ca,omitempty"`
	ScoreChargesFinancieresNettes *float32 `json:"score_charges_financieres_nettes,omitempty"`
}

// NewScoringFinancierDetailsScore instantiates a new ScoringFinancierDetailsScore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScoringFinancierDetailsScore() *ScoringFinancierDetailsScore {
	this := ScoringFinancierDetailsScore{}
	return &this
}

// NewScoringFinancierDetailsScoreWithDefaults instantiates a new ScoringFinancierDetailsScore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScoringFinancierDetailsScoreWithDefaults() *ScoringFinancierDetailsScore {
	this := ScoringFinancierDetailsScore{}
	return &this
}

// GetScoreEbitCa returns the ScoreEbitCa field value if set, zero value otherwise.
func (o *ScoringFinancierDetailsScore) GetScoreEbitCa() float32 {
	if o == nil || IsNil(o.ScoreEbitCa) {
		var ret float32
		return ret
	}
	return *o.ScoreEbitCa
}

// GetScoreEbitCaOk returns a tuple with the ScoreEbitCa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoringFinancierDetailsScore) GetScoreEbitCaOk() (*float32, bool) {
	if o == nil || IsNil(o.ScoreEbitCa) {
		return nil, false
	}
	return o.ScoreEbitCa, true
}

// HasScoreEbitCa returns a boolean if a field has been set.
func (o *ScoringFinancierDetailsScore) HasScoreEbitCa() bool {
	if o != nil && !IsNil(o.ScoreEbitCa) {
		return true
	}

	return false
}

// SetScoreEbitCa gets a reference to the given float32 and assigns it to the ScoreEbitCa field.
func (o *ScoringFinancierDetailsScore) SetScoreEbitCa(v float32) {
	o.ScoreEbitCa = &v
}

// GetScoreFondsDeRoulement returns the ScoreFondsDeRoulement field value if set, zero value otherwise.
func (o *ScoringFinancierDetailsScore) GetScoreFondsDeRoulement() float32 {
	if o == nil || IsNil(o.ScoreFondsDeRoulement) {
		var ret float32
		return ret
	}
	return *o.ScoreFondsDeRoulement
}

// GetScoreFondsDeRoulementOk returns a tuple with the ScoreFondsDeRoulement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoringFinancierDetailsScore) GetScoreFondsDeRoulementOk() (*float32, bool) {
	if o == nil || IsNil(o.ScoreFondsDeRoulement) {
		return nil, false
	}
	return o.ScoreFondsDeRoulement, true
}

// HasScoreFondsDeRoulement returns a boolean if a field has been set.
func (o *ScoringFinancierDetailsScore) HasScoreFondsDeRoulement() bool {
	if o != nil && !IsNil(o.ScoreFondsDeRoulement) {
		return true
	}

	return false
}

// SetScoreFondsDeRoulement gets a reference to the given float32 and assigns it to the ScoreFondsDeRoulement field.
func (o *ScoringFinancierDetailsScore) SetScoreFondsDeRoulement(v float32) {
	o.ScoreFondsDeRoulement = &v
}

// GetScoreTresorerieNette returns the ScoreTresorerieNette field value if set, zero value otherwise.
func (o *ScoringFinancierDetailsScore) GetScoreTresorerieNette() float32 {
	if o == nil || IsNil(o.ScoreTresorerieNette) {
		var ret float32
		return ret
	}
	return *o.ScoreTresorerieNette
}

// GetScoreTresorerieNetteOk returns a tuple with the ScoreTresorerieNette field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoringFinancierDetailsScore) GetScoreTresorerieNetteOk() (*float32, bool) {
	if o == nil || IsNil(o.ScoreTresorerieNette) {
		return nil, false
	}
	return o.ScoreTresorerieNette, true
}

// HasScoreTresorerieNette returns a boolean if a field has been set.
func (o *ScoringFinancierDetailsScore) HasScoreTresorerieNette() bool {
	if o != nil && !IsNil(o.ScoreTresorerieNette) {
		return true
	}

	return false
}

// SetScoreTresorerieNette gets a reference to the given float32 and assigns it to the ScoreTresorerieNette field.
func (o *ScoringFinancierDetailsScore) SetScoreTresorerieNette(v float32) {
	o.ScoreTresorerieNette = &v
}

// GetScoreDettesFiscalesVa returns the ScoreDettesFiscalesVa field value if set, zero value otherwise.
func (o *ScoringFinancierDetailsScore) GetScoreDettesFiscalesVa() float32 {
	if o == nil || IsNil(o.ScoreDettesFiscalesVa) {
		var ret float32
		return ret
	}
	return *o.ScoreDettesFiscalesVa
}

// GetScoreDettesFiscalesVaOk returns a tuple with the ScoreDettesFiscalesVa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoringFinancierDetailsScore) GetScoreDettesFiscalesVaOk() (*float32, bool) {
	if o == nil || IsNil(o.ScoreDettesFiscalesVa) {
		return nil, false
	}
	return o.ScoreDettesFiscalesVa, true
}

// HasScoreDettesFiscalesVa returns a boolean if a field has been set.
func (o *ScoringFinancierDetailsScore) HasScoreDettesFiscalesVa() bool {
	if o != nil && !IsNil(o.ScoreDettesFiscalesVa) {
		return true
	}

	return false
}

// SetScoreDettesFiscalesVa gets a reference to the given float32 and assigns it to the ScoreDettesFiscalesVa field.
func (o *ScoringFinancierDetailsScore) SetScoreDettesFiscalesVa(v float32) {
	o.ScoreDettesFiscalesVa = &v
}

// GetScoreCashFlow returns the ScoreCashFlow field value if set, zero value otherwise.
func (o *ScoringFinancierDetailsScore) GetScoreCashFlow() float32 {
	if o == nil || IsNil(o.ScoreCashFlow) {
		var ret float32
		return ret
	}
	return *o.ScoreCashFlow
}

// GetScoreCashFlowOk returns a tuple with the ScoreCashFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoringFinancierDetailsScore) GetScoreCashFlowOk() (*float32, bool) {
	if o == nil || IsNil(o.ScoreCashFlow) {
		return nil, false
	}
	return o.ScoreCashFlow, true
}

// HasScoreCashFlow returns a boolean if a field has been set.
func (o *ScoringFinancierDetailsScore) HasScoreCashFlow() bool {
	if o != nil && !IsNil(o.ScoreCashFlow) {
		return true
	}

	return false
}

// SetScoreCashFlow gets a reference to the given float32 and assigns it to the ScoreCashFlow field.
func (o *ScoringFinancierDetailsScore) SetScoreCashFlow(v float32) {
	o.ScoreCashFlow = &v
}

// GetScoreDettesFiscalesCa returns the ScoreDettesFiscalesCa field value if set, zero value otherwise.
func (o *ScoringFinancierDetailsScore) GetScoreDettesFiscalesCa() float32 {
	if o == nil || IsNil(o.ScoreDettesFiscalesCa) {
		var ret float32
		return ret
	}
	return *o.ScoreDettesFiscalesCa
}

// GetScoreDettesFiscalesCaOk returns a tuple with the ScoreDettesFiscalesCa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoringFinancierDetailsScore) GetScoreDettesFiscalesCaOk() (*float32, bool) {
	if o == nil || IsNil(o.ScoreDettesFiscalesCa) {
		return nil, false
	}
	return o.ScoreDettesFiscalesCa, true
}

// HasScoreDettesFiscalesCa returns a boolean if a field has been set.
func (o *ScoringFinancierDetailsScore) HasScoreDettesFiscalesCa() bool {
	if o != nil && !IsNil(o.ScoreDettesFiscalesCa) {
		return true
	}

	return false
}

// SetScoreDettesFiscalesCa gets a reference to the given float32 and assigns it to the ScoreDettesFiscalesCa field.
func (o *ScoringFinancierDetailsScore) SetScoreDettesFiscalesCa(v float32) {
	o.ScoreDettesFiscalesCa = &v
}

// GetScoreChargesFinancieresNettes returns the ScoreChargesFinancieresNettes field value if set, zero value otherwise.
func (o *ScoringFinancierDetailsScore) GetScoreChargesFinancieresNettes() float32 {
	if o == nil || IsNil(o.ScoreChargesFinancieresNettes) {
		var ret float32
		return ret
	}
	return *o.ScoreChargesFinancieresNettes
}

// GetScoreChargesFinancieresNettesOk returns a tuple with the ScoreChargesFinancieresNettes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScoringFinancierDetailsScore) GetScoreChargesFinancieresNettesOk() (*float32, bool) {
	if o == nil || IsNil(o.ScoreChargesFinancieresNettes) {
		return nil, false
	}
	return o.ScoreChargesFinancieresNettes, true
}

// HasScoreChargesFinancieresNettes returns a boolean if a field has been set.
func (o *ScoringFinancierDetailsScore) HasScoreChargesFinancieresNettes() bool {
	if o != nil && !IsNil(o.ScoreChargesFinancieresNettes) {
		return true
	}

	return false
}

// SetScoreChargesFinancieresNettes gets a reference to the given float32 and assigns it to the ScoreChargesFinancieresNettes field.
func (o *ScoringFinancierDetailsScore) SetScoreChargesFinancieresNettes(v float32) {
	o.ScoreChargesFinancieresNettes = &v
}

func (o ScoringFinancierDetailsScore) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScoringFinancierDetailsScore) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScoreEbitCa) {
		toSerialize["score_ebit_ca"] = o.ScoreEbitCa
	}
	if !IsNil(o.ScoreFondsDeRoulement) {
		toSerialize["score_fonds_de_roulement"] = o.ScoreFondsDeRoulement
	}
	if !IsNil(o.ScoreTresorerieNette) {
		toSerialize["score_tresorerie_nette"] = o.ScoreTresorerieNette
	}
	if !IsNil(o.ScoreDettesFiscalesVa) {
		toSerialize["score_dettes_fiscales_va"] = o.ScoreDettesFiscalesVa
	}
	if !IsNil(o.ScoreCashFlow) {
		toSerialize["score_cash_flow"] = o.ScoreCashFlow
	}
	if !IsNil(o.ScoreDettesFiscalesCa) {
		toSerialize["score_dettes_fiscales_ca"] = o.ScoreDettesFiscalesCa
	}
	if !IsNil(o.ScoreChargesFinancieresNettes) {
		toSerialize["score_charges_financieres_nettes"] = o.ScoreChargesFinancieresNettes
	}
	return toSerialize, nil
}

type NullableScoringFinancierDetailsScore struct {
	value *ScoringFinancierDetailsScore
	isSet bool
}

func (v NullableScoringFinancierDetailsScore) Get() *ScoringFinancierDetailsScore {
	return v.value
}

func (v *NullableScoringFinancierDetailsScore) Set(val *ScoringFinancierDetailsScore) {
	v.value = val
	v.isSet = true
}

func (v NullableScoringFinancierDetailsScore) IsSet() bool {
	return v.isSet
}

func (v *NullableScoringFinancierDetailsScore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScoringFinancierDetailsScore(val *ScoringFinancierDetailsScore) *NullableScoringFinancierDetailsScore {
	return &NullableScoringFinancierDetailsScore{value: val, isSet: true}
}

func (v NullableScoringFinancierDetailsScore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScoringFinancierDetailsScore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


