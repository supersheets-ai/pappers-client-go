/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EntrepriseFicheAllOfBeneficiairesEffectifs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntrepriseFicheAllOfBeneficiairesEffectifs{}

// EntrepriseFicheAllOfBeneficiairesEffectifs struct for EntrepriseFicheAllOfBeneficiairesEffectifs
type EntrepriseFicheAllOfBeneficiairesEffectifs struct {
	// Date de génération des bénéficiaires effectifs, au format AAAA-MM-JJ.
	DateGreffe *string `json:"date_greffe,omitempty"`
	// Type du bénéficiaire effectif
	Type *string `json:"type,omitempty"`
	// Nom du bénéficiaire effectif.
	Nom *string `json:"nom,omitempty"`
	// Nom d'usage du bénéficiaire effectif.
	NomUsage *string `json:"nom_usage,omitempty"`
	// Prénoms du bénéficiaire effectif.
	Prenom *string `json:"prenom,omitempty"`
	// Prénom usuel du bénéficiaire effectif.
	PrenomUsuel *string `json:"prenom_usuel,omitempty"`
	Pseudonyme *string `json:"pseudonyme,omitempty"`
	// Sexe du bénéficiaire si personne physique. F pour féminin, M pour masculin.
	Sexe *string `json:"sexe,omitempty"`
	// Mois et année de naissance du bénéficiaire effectif, au format MM/AAAA.
	DateDeNaissanceFormatee *string `json:"date_de_naissance_formatee,omitempty"`
	// Date de naissance complète du bénéficiaire effectif, au format JJ/MM/AAAA.
	DateDeNaissanceCompleteFormatee *string `json:"date_de_naissance_complete_formatee,omitempty"`
	// Nationalité du bénéficiaire effectif.
	Nationalite *string `json:"nationalite,omitempty"`
	// Code de la nationalité du bénéficiaire effectif.
	CodeNationalite *string `json:"code_nationalite,omitempty"`
	// Ville de naissance du bénéficiaire effectif.
	VilleDeNaissance *string `json:"ville_de_naissance,omitempty"`
	// Pays de naissance du bénéficiaire effectif.
	PaysDeNaissance *string `json:"pays_de_naissance,omitempty"`
	// Code du pays de naissance du bénéficiaire effectif.
	CodePaysDeNaissance *string `json:"code_pays_de_naissance,omitempty"`
	// Première ligne de l'adresse du bénéficiaire effectif.
	AdresseLigne1 *string `json:"adresse_ligne_1,omitempty"`
	// Deuxième ligne de l'adresse du bénéficiaire effectif.
	AdresseLigne2 *string `json:"adresse_ligne_2,omitempty"`
	// Troisième ligne de l'adresse du bénéficiaire effectif.
	AdresseLigne3 *string `json:"adresse_ligne_3,omitempty"`
	// Code postal du bénéficiaire effectif.
	CodePostal *string `json:"code_postal,omitempty"`
	// Ville du bénéficiaire effectif.
	Ville *string `json:"ville,omitempty"`
	// Pays du bénéficiaire effectif.
	Pays *string `json:"pays,omitempty"`
	// Code du pays du bénéficiaire effectif.
	CodePays *string `json:"code_pays,omitempty"`
	// Parts détenues par le bénéficiaire effectif, en pourcentage des parts totales.
	PourcentageParts *float32 `json:"pourcentage_parts,omitempty"`
	// Parts détenues de façon directe par le bénéficiaire effectif, en pourcentage des parts totales.
	PourcentagePartsDirectes *float32 `json:"pourcentage_parts_directes,omitempty"`
	// Parts détenues de façon indirecte par le bénéficiaire effectif, en pourcentage des parts totales.
	PourcentagePartsIndirectes *float32 `json:"pourcentage_parts_indirectes,omitempty"`
	// Parts dont le bénéficiaire effectif a vocation à devenir titulaire par l'effet d'un acte juridique, en pourcentage des parts totales.
	PourcentagePartsVocationTitulaire *float32 `json:"pourcentage_parts_vocation_titulaire,omitempty"`
	DetailsPartsDirectes *EntrepriseFicheAllOfDetailsPartsDirectes `json:"details_parts_directes,omitempty"`
	DetailsPartsIndirectes *EntrepriseFicheAllOfDetailsPartsIndirectes `json:"details_parts_indirectes,omitempty"`
	DetailsPartsVocationTitulaire *EntrepriseFicheAllOfDetailsPartsVocationTitulaire `json:"details_parts_vocation_titulaire,omitempty"`
	// Droits de vote détenus par le bénéficiaire effectif, en pourcentage des droits de vote totaux.
	PourcentageVotes *float32 `json:"pourcentage_votes,omitempty"`
	// Droits de vote détenus de façon directe par le bénéficiaire effectif, en pourcentage des droits de vote totaux.
	PourcentageVotesDirects *float32 `json:"pourcentage_votes_directs,omitempty"`
	// Droits de vote détenus de façon indirecte par le bénéficiaire effectif, en pourcentage des droits de vote totaux.
	PourcentageVotesIndirect *float32 `json:"pourcentage_votes_indirect,omitempty"`
	DetailsVotesDirects *EntrepriseFicheAllOfDetailsVotesDirects `json:"details_votes_directs,omitempty"`
	DetailsVotesIndirects *EntrepriseFicheAllOfDetailsVotesIndirects `json:"details_votes_indirects,omitempty"`
	DetailsSocieteDeGestion *EntrepriseFicheAllOfDetailsSocieteDeGestion `json:"details_societe_de_gestion,omitempty"`
	// Vaut vrai pour les moyens de contrôle sur les organes d'administration, de gestion, de direction ou de surveillance de la personne morale autre que le pouvoir de nommer ou de révoquer la majorité des membres.
	DetentionPouvoirDecisionAg *bool `json:"detention_pouvoir_decision_ag,omitempty"`
	// Vaut vrai si le moyen de contrôle est le pouvoir de nommer ou de révoquer la majorité des membres des organes d'administration, de gestion, de direction ou de surveillance de la personne morale.
	DetentionPouvoirNomMembreConseilAdministration *bool `json:"detention_pouvoir_nom_membre_conseil_administration,omitempty"`
	// Vaut vrai s'il existe d'autres moyens de contrôle.
	DetentionAutresMoyensControle *bool `json:"detention_autres_moyens_controle,omitempty"`
	// Vaut vrai dans le cas où le bénéficiaire effectif a été défini comme le représentant légal par défaut.
	BeneficiaireRepresentantLegal *bool `json:"beneficiaire_representant_legal,omitempty"`
	// Vaut vrai dans le cas où le bénéficiaire effectif est le représentant légal du placement collectif (cas où le placement collectif n'a pas délégué sa gestion à une société de gestion).
	RepresentantLegalPlacementSansGestionDelegation *bool `json:"representant_legal_placement_sans_gestion_delegation,omitempty"`
	PersonnePolitiquementExposee *PersonnePolitiquementExposee `json:"personne_politiquement_exposee,omitempty"`
	// Vaut vrai si le bénéficiaire effectif est actuellement sous sanction. Uniquement présent si demandé dans les champs supplémentaires.
	SanctionsEnCours *bool `json:"sanctions_en_cours,omitempty"`
	// Liste des sanctions du bénéficiaire effectif. Uniquement présent si demandé dans les champs supplémentaires.
	Sanctions []Sanction `json:"sanctions,omitempty"`
}

// NewEntrepriseFicheAllOfBeneficiairesEffectifs instantiates a new EntrepriseFicheAllOfBeneficiairesEffectifs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntrepriseFicheAllOfBeneficiairesEffectifs() *EntrepriseFicheAllOfBeneficiairesEffectifs {
	this := EntrepriseFicheAllOfBeneficiairesEffectifs{}
	return &this
}

// NewEntrepriseFicheAllOfBeneficiairesEffectifsWithDefaults instantiates a new EntrepriseFicheAllOfBeneficiairesEffectifs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntrepriseFicheAllOfBeneficiairesEffectifsWithDefaults() *EntrepriseFicheAllOfBeneficiairesEffectifs {
	this := EntrepriseFicheAllOfBeneficiairesEffectifs{}
	return &this
}

// GetDateGreffe returns the DateGreffe field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDateGreffe() string {
	if o == nil || IsNil(o.DateGreffe) {
		var ret string
		return ret
	}
	return *o.DateGreffe
}

// GetDateGreffeOk returns a tuple with the DateGreffe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDateGreffeOk() (*string, bool) {
	if o == nil || IsNil(o.DateGreffe) {
		return nil, false
	}
	return o.DateGreffe, true
}

// HasDateGreffe returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasDateGreffe() bool {
	if o != nil && !IsNil(o.DateGreffe) {
		return true
	}

	return false
}

// SetDateGreffe gets a reference to the given string and assigns it to the DateGreffe field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetDateGreffe(v string) {
	o.DateGreffe = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetType(v string) {
	o.Type = &v
}

// GetNom returns the Nom field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetNom() string {
	if o == nil || IsNil(o.Nom) {
		var ret string
		return ret
	}
	return *o.Nom
}

// GetNomOk returns a tuple with the Nom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetNomOk() (*string, bool) {
	if o == nil || IsNil(o.Nom) {
		return nil, false
	}
	return o.Nom, true
}

// HasNom returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasNom() bool {
	if o != nil && !IsNil(o.Nom) {
		return true
	}

	return false
}

// SetNom gets a reference to the given string and assigns it to the Nom field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetNom(v string) {
	o.Nom = &v
}

// GetNomUsage returns the NomUsage field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetNomUsage() string {
	if o == nil || IsNil(o.NomUsage) {
		var ret string
		return ret
	}
	return *o.NomUsage
}

// GetNomUsageOk returns a tuple with the NomUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetNomUsageOk() (*string, bool) {
	if o == nil || IsNil(o.NomUsage) {
		return nil, false
	}
	return o.NomUsage, true
}

// HasNomUsage returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasNomUsage() bool {
	if o != nil && !IsNil(o.NomUsage) {
		return true
	}

	return false
}

// SetNomUsage gets a reference to the given string and assigns it to the NomUsage field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetNomUsage(v string) {
	o.NomUsage = &v
}

// GetPrenom returns the Prenom field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPrenom() string {
	if o == nil || IsNil(o.Prenom) {
		var ret string
		return ret
	}
	return *o.Prenom
}

// GetPrenomOk returns a tuple with the Prenom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPrenomOk() (*string, bool) {
	if o == nil || IsNil(o.Prenom) {
		return nil, false
	}
	return o.Prenom, true
}

// HasPrenom returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasPrenom() bool {
	if o != nil && !IsNil(o.Prenom) {
		return true
	}

	return false
}

// SetPrenom gets a reference to the given string and assigns it to the Prenom field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetPrenom(v string) {
	o.Prenom = &v
}

// GetPrenomUsuel returns the PrenomUsuel field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPrenomUsuel() string {
	if o == nil || IsNil(o.PrenomUsuel) {
		var ret string
		return ret
	}
	return *o.PrenomUsuel
}

// GetPrenomUsuelOk returns a tuple with the PrenomUsuel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPrenomUsuelOk() (*string, bool) {
	if o == nil || IsNil(o.PrenomUsuel) {
		return nil, false
	}
	return o.PrenomUsuel, true
}

// HasPrenomUsuel returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasPrenomUsuel() bool {
	if o != nil && !IsNil(o.PrenomUsuel) {
		return true
	}

	return false
}

// SetPrenomUsuel gets a reference to the given string and assigns it to the PrenomUsuel field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetPrenomUsuel(v string) {
	o.PrenomUsuel = &v
}

// GetPseudonyme returns the Pseudonyme field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPseudonyme() string {
	if o == nil || IsNil(o.Pseudonyme) {
		var ret string
		return ret
	}
	return *o.Pseudonyme
}

// GetPseudonymeOk returns a tuple with the Pseudonyme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPseudonymeOk() (*string, bool) {
	if o == nil || IsNil(o.Pseudonyme) {
		return nil, false
	}
	return o.Pseudonyme, true
}

// HasPseudonyme returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasPseudonyme() bool {
	if o != nil && !IsNil(o.Pseudonyme) {
		return true
	}

	return false
}

// SetPseudonyme gets a reference to the given string and assigns it to the Pseudonyme field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetPseudonyme(v string) {
	o.Pseudonyme = &v
}

// GetSexe returns the Sexe field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetSexe() string {
	if o == nil || IsNil(o.Sexe) {
		var ret string
		return ret
	}
	return *o.Sexe
}

// GetSexeOk returns a tuple with the Sexe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetSexeOk() (*string, bool) {
	if o == nil || IsNil(o.Sexe) {
		return nil, false
	}
	return o.Sexe, true
}

// HasSexe returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasSexe() bool {
	if o != nil && !IsNil(o.Sexe) {
		return true
	}

	return false
}

// SetSexe gets a reference to the given string and assigns it to the Sexe field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetSexe(v string) {
	o.Sexe = &v
}

// GetDateDeNaissanceFormatee returns the DateDeNaissanceFormatee field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDateDeNaissanceFormatee() string {
	if o == nil || IsNil(o.DateDeNaissanceFormatee) {
		var ret string
		return ret
	}
	return *o.DateDeNaissanceFormatee
}

// GetDateDeNaissanceFormateeOk returns a tuple with the DateDeNaissanceFormatee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDateDeNaissanceFormateeOk() (*string, bool) {
	if o == nil || IsNil(o.DateDeNaissanceFormatee) {
		return nil, false
	}
	return o.DateDeNaissanceFormatee, true
}

// HasDateDeNaissanceFormatee returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasDateDeNaissanceFormatee() bool {
	if o != nil && !IsNil(o.DateDeNaissanceFormatee) {
		return true
	}

	return false
}

// SetDateDeNaissanceFormatee gets a reference to the given string and assigns it to the DateDeNaissanceFormatee field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetDateDeNaissanceFormatee(v string) {
	o.DateDeNaissanceFormatee = &v
}

// GetDateDeNaissanceCompleteFormatee returns the DateDeNaissanceCompleteFormatee field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDateDeNaissanceCompleteFormatee() string {
	if o == nil || IsNil(o.DateDeNaissanceCompleteFormatee) {
		var ret string
		return ret
	}
	return *o.DateDeNaissanceCompleteFormatee
}

// GetDateDeNaissanceCompleteFormateeOk returns a tuple with the DateDeNaissanceCompleteFormatee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDateDeNaissanceCompleteFormateeOk() (*string, bool) {
	if o == nil || IsNil(o.DateDeNaissanceCompleteFormatee) {
		return nil, false
	}
	return o.DateDeNaissanceCompleteFormatee, true
}

// HasDateDeNaissanceCompleteFormatee returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasDateDeNaissanceCompleteFormatee() bool {
	if o != nil && !IsNil(o.DateDeNaissanceCompleteFormatee) {
		return true
	}

	return false
}

// SetDateDeNaissanceCompleteFormatee gets a reference to the given string and assigns it to the DateDeNaissanceCompleteFormatee field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetDateDeNaissanceCompleteFormatee(v string) {
	o.DateDeNaissanceCompleteFormatee = &v
}

// GetNationalite returns the Nationalite field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetNationalite() string {
	if o == nil || IsNil(o.Nationalite) {
		var ret string
		return ret
	}
	return *o.Nationalite
}

// GetNationaliteOk returns a tuple with the Nationalite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetNationaliteOk() (*string, bool) {
	if o == nil || IsNil(o.Nationalite) {
		return nil, false
	}
	return o.Nationalite, true
}

// HasNationalite returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasNationalite() bool {
	if o != nil && !IsNil(o.Nationalite) {
		return true
	}

	return false
}

// SetNationalite gets a reference to the given string and assigns it to the Nationalite field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetNationalite(v string) {
	o.Nationalite = &v
}

// GetCodeNationalite returns the CodeNationalite field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetCodeNationalite() string {
	if o == nil || IsNil(o.CodeNationalite) {
		var ret string
		return ret
	}
	return *o.CodeNationalite
}

// GetCodeNationaliteOk returns a tuple with the CodeNationalite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetCodeNationaliteOk() (*string, bool) {
	if o == nil || IsNil(o.CodeNationalite) {
		return nil, false
	}
	return o.CodeNationalite, true
}

// HasCodeNationalite returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasCodeNationalite() bool {
	if o != nil && !IsNil(o.CodeNationalite) {
		return true
	}

	return false
}

// SetCodeNationalite gets a reference to the given string and assigns it to the CodeNationalite field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetCodeNationalite(v string) {
	o.CodeNationalite = &v
}

// GetVilleDeNaissance returns the VilleDeNaissance field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetVilleDeNaissance() string {
	if o == nil || IsNil(o.VilleDeNaissance) {
		var ret string
		return ret
	}
	return *o.VilleDeNaissance
}

// GetVilleDeNaissanceOk returns a tuple with the VilleDeNaissance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetVilleDeNaissanceOk() (*string, bool) {
	if o == nil || IsNil(o.VilleDeNaissance) {
		return nil, false
	}
	return o.VilleDeNaissance, true
}

// HasVilleDeNaissance returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasVilleDeNaissance() bool {
	if o != nil && !IsNil(o.VilleDeNaissance) {
		return true
	}

	return false
}

// SetVilleDeNaissance gets a reference to the given string and assigns it to the VilleDeNaissance field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetVilleDeNaissance(v string) {
	o.VilleDeNaissance = &v
}

// GetPaysDeNaissance returns the PaysDeNaissance field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPaysDeNaissance() string {
	if o == nil || IsNil(o.PaysDeNaissance) {
		var ret string
		return ret
	}
	return *o.PaysDeNaissance
}

// GetPaysDeNaissanceOk returns a tuple with the PaysDeNaissance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPaysDeNaissanceOk() (*string, bool) {
	if o == nil || IsNil(o.PaysDeNaissance) {
		return nil, false
	}
	return o.PaysDeNaissance, true
}

// HasPaysDeNaissance returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasPaysDeNaissance() bool {
	if o != nil && !IsNil(o.PaysDeNaissance) {
		return true
	}

	return false
}

// SetPaysDeNaissance gets a reference to the given string and assigns it to the PaysDeNaissance field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetPaysDeNaissance(v string) {
	o.PaysDeNaissance = &v
}

// GetCodePaysDeNaissance returns the CodePaysDeNaissance field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetCodePaysDeNaissance() string {
	if o == nil || IsNil(o.CodePaysDeNaissance) {
		var ret string
		return ret
	}
	return *o.CodePaysDeNaissance
}

// GetCodePaysDeNaissanceOk returns a tuple with the CodePaysDeNaissance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetCodePaysDeNaissanceOk() (*string, bool) {
	if o == nil || IsNil(o.CodePaysDeNaissance) {
		return nil, false
	}
	return o.CodePaysDeNaissance, true
}

// HasCodePaysDeNaissance returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasCodePaysDeNaissance() bool {
	if o != nil && !IsNil(o.CodePaysDeNaissance) {
		return true
	}

	return false
}

// SetCodePaysDeNaissance gets a reference to the given string and assigns it to the CodePaysDeNaissance field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetCodePaysDeNaissance(v string) {
	o.CodePaysDeNaissance = &v
}

// GetAdresseLigne1 returns the AdresseLigne1 field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetAdresseLigne1() string {
	if o == nil || IsNil(o.AdresseLigne1) {
		var ret string
		return ret
	}
	return *o.AdresseLigne1
}

// GetAdresseLigne1Ok returns a tuple with the AdresseLigne1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetAdresseLigne1Ok() (*string, bool) {
	if o == nil || IsNil(o.AdresseLigne1) {
		return nil, false
	}
	return o.AdresseLigne1, true
}

// HasAdresseLigne1 returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasAdresseLigne1() bool {
	if o != nil && !IsNil(o.AdresseLigne1) {
		return true
	}

	return false
}

// SetAdresseLigne1 gets a reference to the given string and assigns it to the AdresseLigne1 field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetAdresseLigne1(v string) {
	o.AdresseLigne1 = &v
}

// GetAdresseLigne2 returns the AdresseLigne2 field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetAdresseLigne2() string {
	if o == nil || IsNil(o.AdresseLigne2) {
		var ret string
		return ret
	}
	return *o.AdresseLigne2
}

// GetAdresseLigne2Ok returns a tuple with the AdresseLigne2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetAdresseLigne2Ok() (*string, bool) {
	if o == nil || IsNil(o.AdresseLigne2) {
		return nil, false
	}
	return o.AdresseLigne2, true
}

// HasAdresseLigne2 returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasAdresseLigne2() bool {
	if o != nil && !IsNil(o.AdresseLigne2) {
		return true
	}

	return false
}

// SetAdresseLigne2 gets a reference to the given string and assigns it to the AdresseLigne2 field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetAdresseLigne2(v string) {
	o.AdresseLigne2 = &v
}

// GetAdresseLigne3 returns the AdresseLigne3 field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetAdresseLigne3() string {
	if o == nil || IsNil(o.AdresseLigne3) {
		var ret string
		return ret
	}
	return *o.AdresseLigne3
}

// GetAdresseLigne3Ok returns a tuple with the AdresseLigne3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetAdresseLigne3Ok() (*string, bool) {
	if o == nil || IsNil(o.AdresseLigne3) {
		return nil, false
	}
	return o.AdresseLigne3, true
}

// HasAdresseLigne3 returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasAdresseLigne3() bool {
	if o != nil && !IsNil(o.AdresseLigne3) {
		return true
	}

	return false
}

// SetAdresseLigne3 gets a reference to the given string and assigns it to the AdresseLigne3 field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetAdresseLigne3(v string) {
	o.AdresseLigne3 = &v
}

// GetCodePostal returns the CodePostal field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetCodePostal() string {
	if o == nil || IsNil(o.CodePostal) {
		var ret string
		return ret
	}
	return *o.CodePostal
}

// GetCodePostalOk returns a tuple with the CodePostal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetCodePostalOk() (*string, bool) {
	if o == nil || IsNil(o.CodePostal) {
		return nil, false
	}
	return o.CodePostal, true
}

// HasCodePostal returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasCodePostal() bool {
	if o != nil && !IsNil(o.CodePostal) {
		return true
	}

	return false
}

// SetCodePostal gets a reference to the given string and assigns it to the CodePostal field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetCodePostal(v string) {
	o.CodePostal = &v
}

// GetVille returns the Ville field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetVille() string {
	if o == nil || IsNil(o.Ville) {
		var ret string
		return ret
	}
	return *o.Ville
}

// GetVilleOk returns a tuple with the Ville field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetVilleOk() (*string, bool) {
	if o == nil || IsNil(o.Ville) {
		return nil, false
	}
	return o.Ville, true
}

// HasVille returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasVille() bool {
	if o != nil && !IsNil(o.Ville) {
		return true
	}

	return false
}

// SetVille gets a reference to the given string and assigns it to the Ville field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetVille(v string) {
	o.Ville = &v
}

// GetPays returns the Pays field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPays() string {
	if o == nil || IsNil(o.Pays) {
		var ret string
		return ret
	}
	return *o.Pays
}

// GetPaysOk returns a tuple with the Pays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPaysOk() (*string, bool) {
	if o == nil || IsNil(o.Pays) {
		return nil, false
	}
	return o.Pays, true
}

// HasPays returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasPays() bool {
	if o != nil && !IsNil(o.Pays) {
		return true
	}

	return false
}

// SetPays gets a reference to the given string and assigns it to the Pays field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetPays(v string) {
	o.Pays = &v
}

// GetCodePays returns the CodePays field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetCodePays() string {
	if o == nil || IsNil(o.CodePays) {
		var ret string
		return ret
	}
	return *o.CodePays
}

// GetCodePaysOk returns a tuple with the CodePays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetCodePaysOk() (*string, bool) {
	if o == nil || IsNil(o.CodePays) {
		return nil, false
	}
	return o.CodePays, true
}

// HasCodePays returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasCodePays() bool {
	if o != nil && !IsNil(o.CodePays) {
		return true
	}

	return false
}

// SetCodePays gets a reference to the given string and assigns it to the CodePays field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetCodePays(v string) {
	o.CodePays = &v
}

// GetPourcentageParts returns the PourcentageParts field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPourcentageParts() float32 {
	if o == nil || IsNil(o.PourcentageParts) {
		var ret float32
		return ret
	}
	return *o.PourcentageParts
}

// GetPourcentagePartsOk returns a tuple with the PourcentageParts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPourcentagePartsOk() (*float32, bool) {
	if o == nil || IsNil(o.PourcentageParts) {
		return nil, false
	}
	return o.PourcentageParts, true
}

// HasPourcentageParts returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasPourcentageParts() bool {
	if o != nil && !IsNil(o.PourcentageParts) {
		return true
	}

	return false
}

// SetPourcentageParts gets a reference to the given float32 and assigns it to the PourcentageParts field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetPourcentageParts(v float32) {
	o.PourcentageParts = &v
}

// GetPourcentagePartsDirectes returns the PourcentagePartsDirectes field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPourcentagePartsDirectes() float32 {
	if o == nil || IsNil(o.PourcentagePartsDirectes) {
		var ret float32
		return ret
	}
	return *o.PourcentagePartsDirectes
}

// GetPourcentagePartsDirectesOk returns a tuple with the PourcentagePartsDirectes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPourcentagePartsDirectesOk() (*float32, bool) {
	if o == nil || IsNil(o.PourcentagePartsDirectes) {
		return nil, false
	}
	return o.PourcentagePartsDirectes, true
}

// HasPourcentagePartsDirectes returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasPourcentagePartsDirectes() bool {
	if o != nil && !IsNil(o.PourcentagePartsDirectes) {
		return true
	}

	return false
}

// SetPourcentagePartsDirectes gets a reference to the given float32 and assigns it to the PourcentagePartsDirectes field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetPourcentagePartsDirectes(v float32) {
	o.PourcentagePartsDirectes = &v
}

// GetPourcentagePartsIndirectes returns the PourcentagePartsIndirectes field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPourcentagePartsIndirectes() float32 {
	if o == nil || IsNil(o.PourcentagePartsIndirectes) {
		var ret float32
		return ret
	}
	return *o.PourcentagePartsIndirectes
}

// GetPourcentagePartsIndirectesOk returns a tuple with the PourcentagePartsIndirectes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPourcentagePartsIndirectesOk() (*float32, bool) {
	if o == nil || IsNil(o.PourcentagePartsIndirectes) {
		return nil, false
	}
	return o.PourcentagePartsIndirectes, true
}

// HasPourcentagePartsIndirectes returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasPourcentagePartsIndirectes() bool {
	if o != nil && !IsNil(o.PourcentagePartsIndirectes) {
		return true
	}

	return false
}

// SetPourcentagePartsIndirectes gets a reference to the given float32 and assigns it to the PourcentagePartsIndirectes field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetPourcentagePartsIndirectes(v float32) {
	o.PourcentagePartsIndirectes = &v
}

// GetPourcentagePartsVocationTitulaire returns the PourcentagePartsVocationTitulaire field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPourcentagePartsVocationTitulaire() float32 {
	if o == nil || IsNil(o.PourcentagePartsVocationTitulaire) {
		var ret float32
		return ret
	}
	return *o.PourcentagePartsVocationTitulaire
}

// GetPourcentagePartsVocationTitulaireOk returns a tuple with the PourcentagePartsVocationTitulaire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPourcentagePartsVocationTitulaireOk() (*float32, bool) {
	if o == nil || IsNil(o.PourcentagePartsVocationTitulaire) {
		return nil, false
	}
	return o.PourcentagePartsVocationTitulaire, true
}

// HasPourcentagePartsVocationTitulaire returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasPourcentagePartsVocationTitulaire() bool {
	if o != nil && !IsNil(o.PourcentagePartsVocationTitulaire) {
		return true
	}

	return false
}

// SetPourcentagePartsVocationTitulaire gets a reference to the given float32 and assigns it to the PourcentagePartsVocationTitulaire field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetPourcentagePartsVocationTitulaire(v float32) {
	o.PourcentagePartsVocationTitulaire = &v
}

// GetDetailsPartsDirectes returns the DetailsPartsDirectes field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetailsPartsDirectes() EntrepriseFicheAllOfDetailsPartsDirectes {
	if o == nil || IsNil(o.DetailsPartsDirectes) {
		var ret EntrepriseFicheAllOfDetailsPartsDirectes
		return ret
	}
	return *o.DetailsPartsDirectes
}

// GetDetailsPartsDirectesOk returns a tuple with the DetailsPartsDirectes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetailsPartsDirectesOk() (*EntrepriseFicheAllOfDetailsPartsDirectes, bool) {
	if o == nil || IsNil(o.DetailsPartsDirectes) {
		return nil, false
	}
	return o.DetailsPartsDirectes, true
}

// HasDetailsPartsDirectes returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasDetailsPartsDirectes() bool {
	if o != nil && !IsNil(o.DetailsPartsDirectes) {
		return true
	}

	return false
}

// SetDetailsPartsDirectes gets a reference to the given EntrepriseFicheAllOfDetailsPartsDirectes and assigns it to the DetailsPartsDirectes field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetDetailsPartsDirectes(v EntrepriseFicheAllOfDetailsPartsDirectes) {
	o.DetailsPartsDirectes = &v
}

// GetDetailsPartsIndirectes returns the DetailsPartsIndirectes field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetailsPartsIndirectes() EntrepriseFicheAllOfDetailsPartsIndirectes {
	if o == nil || IsNil(o.DetailsPartsIndirectes) {
		var ret EntrepriseFicheAllOfDetailsPartsIndirectes
		return ret
	}
	return *o.DetailsPartsIndirectes
}

// GetDetailsPartsIndirectesOk returns a tuple with the DetailsPartsIndirectes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetailsPartsIndirectesOk() (*EntrepriseFicheAllOfDetailsPartsIndirectes, bool) {
	if o == nil || IsNil(o.DetailsPartsIndirectes) {
		return nil, false
	}
	return o.DetailsPartsIndirectes, true
}

// HasDetailsPartsIndirectes returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasDetailsPartsIndirectes() bool {
	if o != nil && !IsNil(o.DetailsPartsIndirectes) {
		return true
	}

	return false
}

// SetDetailsPartsIndirectes gets a reference to the given EntrepriseFicheAllOfDetailsPartsIndirectes and assigns it to the DetailsPartsIndirectes field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetDetailsPartsIndirectes(v EntrepriseFicheAllOfDetailsPartsIndirectes) {
	o.DetailsPartsIndirectes = &v
}

// GetDetailsPartsVocationTitulaire returns the DetailsPartsVocationTitulaire field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetailsPartsVocationTitulaire() EntrepriseFicheAllOfDetailsPartsVocationTitulaire {
	if o == nil || IsNil(o.DetailsPartsVocationTitulaire) {
		var ret EntrepriseFicheAllOfDetailsPartsVocationTitulaire
		return ret
	}
	return *o.DetailsPartsVocationTitulaire
}

// GetDetailsPartsVocationTitulaireOk returns a tuple with the DetailsPartsVocationTitulaire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetailsPartsVocationTitulaireOk() (*EntrepriseFicheAllOfDetailsPartsVocationTitulaire, bool) {
	if o == nil || IsNil(o.DetailsPartsVocationTitulaire) {
		return nil, false
	}
	return o.DetailsPartsVocationTitulaire, true
}

// HasDetailsPartsVocationTitulaire returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasDetailsPartsVocationTitulaire() bool {
	if o != nil && !IsNil(o.DetailsPartsVocationTitulaire) {
		return true
	}

	return false
}

// SetDetailsPartsVocationTitulaire gets a reference to the given EntrepriseFicheAllOfDetailsPartsVocationTitulaire and assigns it to the DetailsPartsVocationTitulaire field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetDetailsPartsVocationTitulaire(v EntrepriseFicheAllOfDetailsPartsVocationTitulaire) {
	o.DetailsPartsVocationTitulaire = &v
}

// GetPourcentageVotes returns the PourcentageVotes field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPourcentageVotes() float32 {
	if o == nil || IsNil(o.PourcentageVotes) {
		var ret float32
		return ret
	}
	return *o.PourcentageVotes
}

// GetPourcentageVotesOk returns a tuple with the PourcentageVotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPourcentageVotesOk() (*float32, bool) {
	if o == nil || IsNil(o.PourcentageVotes) {
		return nil, false
	}
	return o.PourcentageVotes, true
}

// HasPourcentageVotes returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasPourcentageVotes() bool {
	if o != nil && !IsNil(o.PourcentageVotes) {
		return true
	}

	return false
}

// SetPourcentageVotes gets a reference to the given float32 and assigns it to the PourcentageVotes field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetPourcentageVotes(v float32) {
	o.PourcentageVotes = &v
}

// GetPourcentageVotesDirects returns the PourcentageVotesDirects field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPourcentageVotesDirects() float32 {
	if o == nil || IsNil(o.PourcentageVotesDirects) {
		var ret float32
		return ret
	}
	return *o.PourcentageVotesDirects
}

// GetPourcentageVotesDirectsOk returns a tuple with the PourcentageVotesDirects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPourcentageVotesDirectsOk() (*float32, bool) {
	if o == nil || IsNil(o.PourcentageVotesDirects) {
		return nil, false
	}
	return o.PourcentageVotesDirects, true
}

// HasPourcentageVotesDirects returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasPourcentageVotesDirects() bool {
	if o != nil && !IsNil(o.PourcentageVotesDirects) {
		return true
	}

	return false
}

// SetPourcentageVotesDirects gets a reference to the given float32 and assigns it to the PourcentageVotesDirects field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetPourcentageVotesDirects(v float32) {
	o.PourcentageVotesDirects = &v
}

// GetPourcentageVotesIndirect returns the PourcentageVotesIndirect field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPourcentageVotesIndirect() float32 {
	if o == nil || IsNil(o.PourcentageVotesIndirect) {
		var ret float32
		return ret
	}
	return *o.PourcentageVotesIndirect
}

// GetPourcentageVotesIndirectOk returns a tuple with the PourcentageVotesIndirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPourcentageVotesIndirectOk() (*float32, bool) {
	if o == nil || IsNil(o.PourcentageVotesIndirect) {
		return nil, false
	}
	return o.PourcentageVotesIndirect, true
}

// HasPourcentageVotesIndirect returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasPourcentageVotesIndirect() bool {
	if o != nil && !IsNil(o.PourcentageVotesIndirect) {
		return true
	}

	return false
}

// SetPourcentageVotesIndirect gets a reference to the given float32 and assigns it to the PourcentageVotesIndirect field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetPourcentageVotesIndirect(v float32) {
	o.PourcentageVotesIndirect = &v
}

// GetDetailsVotesDirects returns the DetailsVotesDirects field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetailsVotesDirects() EntrepriseFicheAllOfDetailsVotesDirects {
	if o == nil || IsNil(o.DetailsVotesDirects) {
		var ret EntrepriseFicheAllOfDetailsVotesDirects
		return ret
	}
	return *o.DetailsVotesDirects
}

// GetDetailsVotesDirectsOk returns a tuple with the DetailsVotesDirects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetailsVotesDirectsOk() (*EntrepriseFicheAllOfDetailsVotesDirects, bool) {
	if o == nil || IsNil(o.DetailsVotesDirects) {
		return nil, false
	}
	return o.DetailsVotesDirects, true
}

// HasDetailsVotesDirects returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasDetailsVotesDirects() bool {
	if o != nil && !IsNil(o.DetailsVotesDirects) {
		return true
	}

	return false
}

// SetDetailsVotesDirects gets a reference to the given EntrepriseFicheAllOfDetailsVotesDirects and assigns it to the DetailsVotesDirects field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetDetailsVotesDirects(v EntrepriseFicheAllOfDetailsVotesDirects) {
	o.DetailsVotesDirects = &v
}

// GetDetailsVotesIndirects returns the DetailsVotesIndirects field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetailsVotesIndirects() EntrepriseFicheAllOfDetailsVotesIndirects {
	if o == nil || IsNil(o.DetailsVotesIndirects) {
		var ret EntrepriseFicheAllOfDetailsVotesIndirects
		return ret
	}
	return *o.DetailsVotesIndirects
}

// GetDetailsVotesIndirectsOk returns a tuple with the DetailsVotesIndirects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetailsVotesIndirectsOk() (*EntrepriseFicheAllOfDetailsVotesIndirects, bool) {
	if o == nil || IsNil(o.DetailsVotesIndirects) {
		return nil, false
	}
	return o.DetailsVotesIndirects, true
}

// HasDetailsVotesIndirects returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasDetailsVotesIndirects() bool {
	if o != nil && !IsNil(o.DetailsVotesIndirects) {
		return true
	}

	return false
}

// SetDetailsVotesIndirects gets a reference to the given EntrepriseFicheAllOfDetailsVotesIndirects and assigns it to the DetailsVotesIndirects field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetDetailsVotesIndirects(v EntrepriseFicheAllOfDetailsVotesIndirects) {
	o.DetailsVotesIndirects = &v
}

// GetDetailsSocieteDeGestion returns the DetailsSocieteDeGestion field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetailsSocieteDeGestion() EntrepriseFicheAllOfDetailsSocieteDeGestion {
	if o == nil || IsNil(o.DetailsSocieteDeGestion) {
		var ret EntrepriseFicheAllOfDetailsSocieteDeGestion
		return ret
	}
	return *o.DetailsSocieteDeGestion
}

// GetDetailsSocieteDeGestionOk returns a tuple with the DetailsSocieteDeGestion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetailsSocieteDeGestionOk() (*EntrepriseFicheAllOfDetailsSocieteDeGestion, bool) {
	if o == nil || IsNil(o.DetailsSocieteDeGestion) {
		return nil, false
	}
	return o.DetailsSocieteDeGestion, true
}

// HasDetailsSocieteDeGestion returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasDetailsSocieteDeGestion() bool {
	if o != nil && !IsNil(o.DetailsSocieteDeGestion) {
		return true
	}

	return false
}

// SetDetailsSocieteDeGestion gets a reference to the given EntrepriseFicheAllOfDetailsSocieteDeGestion and assigns it to the DetailsSocieteDeGestion field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetDetailsSocieteDeGestion(v EntrepriseFicheAllOfDetailsSocieteDeGestion) {
	o.DetailsSocieteDeGestion = &v
}

// GetDetentionPouvoirDecisionAg returns the DetentionPouvoirDecisionAg field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetentionPouvoirDecisionAg() bool {
	if o == nil || IsNil(o.DetentionPouvoirDecisionAg) {
		var ret bool
		return ret
	}
	return *o.DetentionPouvoirDecisionAg
}

// GetDetentionPouvoirDecisionAgOk returns a tuple with the DetentionPouvoirDecisionAg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetentionPouvoirDecisionAgOk() (*bool, bool) {
	if o == nil || IsNil(o.DetentionPouvoirDecisionAg) {
		return nil, false
	}
	return o.DetentionPouvoirDecisionAg, true
}

// HasDetentionPouvoirDecisionAg returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasDetentionPouvoirDecisionAg() bool {
	if o != nil && !IsNil(o.DetentionPouvoirDecisionAg) {
		return true
	}

	return false
}

// SetDetentionPouvoirDecisionAg gets a reference to the given bool and assigns it to the DetentionPouvoirDecisionAg field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetDetentionPouvoirDecisionAg(v bool) {
	o.DetentionPouvoirDecisionAg = &v
}

// GetDetentionPouvoirNomMembreConseilAdministration returns the DetentionPouvoirNomMembreConseilAdministration field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetentionPouvoirNomMembreConseilAdministration() bool {
	if o == nil || IsNil(o.DetentionPouvoirNomMembreConseilAdministration) {
		var ret bool
		return ret
	}
	return *o.DetentionPouvoirNomMembreConseilAdministration
}

// GetDetentionPouvoirNomMembreConseilAdministrationOk returns a tuple with the DetentionPouvoirNomMembreConseilAdministration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetentionPouvoirNomMembreConseilAdministrationOk() (*bool, bool) {
	if o == nil || IsNil(o.DetentionPouvoirNomMembreConseilAdministration) {
		return nil, false
	}
	return o.DetentionPouvoirNomMembreConseilAdministration, true
}

// HasDetentionPouvoirNomMembreConseilAdministration returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasDetentionPouvoirNomMembreConseilAdministration() bool {
	if o != nil && !IsNil(o.DetentionPouvoirNomMembreConseilAdministration) {
		return true
	}

	return false
}

// SetDetentionPouvoirNomMembreConseilAdministration gets a reference to the given bool and assigns it to the DetentionPouvoirNomMembreConseilAdministration field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetDetentionPouvoirNomMembreConseilAdministration(v bool) {
	o.DetentionPouvoirNomMembreConseilAdministration = &v
}

// GetDetentionAutresMoyensControle returns the DetentionAutresMoyensControle field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetentionAutresMoyensControle() bool {
	if o == nil || IsNil(o.DetentionAutresMoyensControle) {
		var ret bool
		return ret
	}
	return *o.DetentionAutresMoyensControle
}

// GetDetentionAutresMoyensControleOk returns a tuple with the DetentionAutresMoyensControle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetDetentionAutresMoyensControleOk() (*bool, bool) {
	if o == nil || IsNil(o.DetentionAutresMoyensControle) {
		return nil, false
	}
	return o.DetentionAutresMoyensControle, true
}

// HasDetentionAutresMoyensControle returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasDetentionAutresMoyensControle() bool {
	if o != nil && !IsNil(o.DetentionAutresMoyensControle) {
		return true
	}

	return false
}

// SetDetentionAutresMoyensControle gets a reference to the given bool and assigns it to the DetentionAutresMoyensControle field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetDetentionAutresMoyensControle(v bool) {
	o.DetentionAutresMoyensControle = &v
}

// GetBeneficiaireRepresentantLegal returns the BeneficiaireRepresentantLegal field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetBeneficiaireRepresentantLegal() bool {
	if o == nil || IsNil(o.BeneficiaireRepresentantLegal) {
		var ret bool
		return ret
	}
	return *o.BeneficiaireRepresentantLegal
}

// GetBeneficiaireRepresentantLegalOk returns a tuple with the BeneficiaireRepresentantLegal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetBeneficiaireRepresentantLegalOk() (*bool, bool) {
	if o == nil || IsNil(o.BeneficiaireRepresentantLegal) {
		return nil, false
	}
	return o.BeneficiaireRepresentantLegal, true
}

// HasBeneficiaireRepresentantLegal returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasBeneficiaireRepresentantLegal() bool {
	if o != nil && !IsNil(o.BeneficiaireRepresentantLegal) {
		return true
	}

	return false
}

// SetBeneficiaireRepresentantLegal gets a reference to the given bool and assigns it to the BeneficiaireRepresentantLegal field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetBeneficiaireRepresentantLegal(v bool) {
	o.BeneficiaireRepresentantLegal = &v
}

// GetRepresentantLegalPlacementSansGestionDelegation returns the RepresentantLegalPlacementSansGestionDelegation field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetRepresentantLegalPlacementSansGestionDelegation() bool {
	if o == nil || IsNil(o.RepresentantLegalPlacementSansGestionDelegation) {
		var ret bool
		return ret
	}
	return *o.RepresentantLegalPlacementSansGestionDelegation
}

// GetRepresentantLegalPlacementSansGestionDelegationOk returns a tuple with the RepresentantLegalPlacementSansGestionDelegation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetRepresentantLegalPlacementSansGestionDelegationOk() (*bool, bool) {
	if o == nil || IsNil(o.RepresentantLegalPlacementSansGestionDelegation) {
		return nil, false
	}
	return o.RepresentantLegalPlacementSansGestionDelegation, true
}

// HasRepresentantLegalPlacementSansGestionDelegation returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasRepresentantLegalPlacementSansGestionDelegation() bool {
	if o != nil && !IsNil(o.RepresentantLegalPlacementSansGestionDelegation) {
		return true
	}

	return false
}

// SetRepresentantLegalPlacementSansGestionDelegation gets a reference to the given bool and assigns it to the RepresentantLegalPlacementSansGestionDelegation field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetRepresentantLegalPlacementSansGestionDelegation(v bool) {
	o.RepresentantLegalPlacementSansGestionDelegation = &v
}

// GetPersonnePolitiquementExposee returns the PersonnePolitiquementExposee field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPersonnePolitiquementExposee() PersonnePolitiquementExposee {
	if o == nil || IsNil(o.PersonnePolitiquementExposee) {
		var ret PersonnePolitiquementExposee
		return ret
	}
	return *o.PersonnePolitiquementExposee
}

// GetPersonnePolitiquementExposeeOk returns a tuple with the PersonnePolitiquementExposee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetPersonnePolitiquementExposeeOk() (*PersonnePolitiquementExposee, bool) {
	if o == nil || IsNil(o.PersonnePolitiquementExposee) {
		return nil, false
	}
	return o.PersonnePolitiquementExposee, true
}

// HasPersonnePolitiquementExposee returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasPersonnePolitiquementExposee() bool {
	if o != nil && !IsNil(o.PersonnePolitiquementExposee) {
		return true
	}

	return false
}

// SetPersonnePolitiquementExposee gets a reference to the given PersonnePolitiquementExposee and assigns it to the PersonnePolitiquementExposee field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetPersonnePolitiquementExposee(v PersonnePolitiquementExposee) {
	o.PersonnePolitiquementExposee = &v
}

// GetSanctionsEnCours returns the SanctionsEnCours field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetSanctionsEnCours() bool {
	if o == nil || IsNil(o.SanctionsEnCours) {
		var ret bool
		return ret
	}
	return *o.SanctionsEnCours
}

// GetSanctionsEnCoursOk returns a tuple with the SanctionsEnCours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetSanctionsEnCoursOk() (*bool, bool) {
	if o == nil || IsNil(o.SanctionsEnCours) {
		return nil, false
	}
	return o.SanctionsEnCours, true
}

// HasSanctionsEnCours returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasSanctionsEnCours() bool {
	if o != nil && !IsNil(o.SanctionsEnCours) {
		return true
	}

	return false
}

// SetSanctionsEnCours gets a reference to the given bool and assigns it to the SanctionsEnCours field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetSanctionsEnCours(v bool) {
	o.SanctionsEnCours = &v
}

// GetSanctions returns the Sanctions field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetSanctions() []Sanction {
	if o == nil || IsNil(o.Sanctions) {
		var ret []Sanction
		return ret
	}
	return o.Sanctions
}

// GetSanctionsOk returns a tuple with the Sanctions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) GetSanctionsOk() ([]Sanction, bool) {
	if o == nil || IsNil(o.Sanctions) {
		return nil, false
	}
	return o.Sanctions, true
}

// HasSanctions returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) HasSanctions() bool {
	if o != nil && !IsNil(o.Sanctions) {
		return true
	}

	return false
}

// SetSanctions gets a reference to the given []Sanction and assigns it to the Sanctions field.
func (o *EntrepriseFicheAllOfBeneficiairesEffectifs) SetSanctions(v []Sanction) {
	o.Sanctions = v
}

func (o EntrepriseFicheAllOfBeneficiairesEffectifs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntrepriseFicheAllOfBeneficiairesEffectifs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DateGreffe) {
		toSerialize["date_greffe"] = o.DateGreffe
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Nom) {
		toSerialize["nom"] = o.Nom
	}
	if !IsNil(o.NomUsage) {
		toSerialize["nom_usage"] = o.NomUsage
	}
	if !IsNil(o.Prenom) {
		toSerialize["prenom"] = o.Prenom
	}
	if !IsNil(o.PrenomUsuel) {
		toSerialize["prenom_usuel"] = o.PrenomUsuel
	}
	if !IsNil(o.Pseudonyme) {
		toSerialize["pseudonyme"] = o.Pseudonyme
	}
	if !IsNil(o.Sexe) {
		toSerialize["sexe"] = o.Sexe
	}
	if !IsNil(o.DateDeNaissanceFormatee) {
		toSerialize["date_de_naissance_formatee"] = o.DateDeNaissanceFormatee
	}
	if !IsNil(o.DateDeNaissanceCompleteFormatee) {
		toSerialize["date_de_naissance_complete_formatee"] = o.DateDeNaissanceCompleteFormatee
	}
	if !IsNil(o.Nationalite) {
		toSerialize["nationalite"] = o.Nationalite
	}
	if !IsNil(o.CodeNationalite) {
		toSerialize["code_nationalite"] = o.CodeNationalite
	}
	if !IsNil(o.VilleDeNaissance) {
		toSerialize["ville_de_naissance"] = o.VilleDeNaissance
	}
	if !IsNil(o.PaysDeNaissance) {
		toSerialize["pays_de_naissance"] = o.PaysDeNaissance
	}
	if !IsNil(o.CodePaysDeNaissance) {
		toSerialize["code_pays_de_naissance"] = o.CodePaysDeNaissance
	}
	if !IsNil(o.AdresseLigne1) {
		toSerialize["adresse_ligne_1"] = o.AdresseLigne1
	}
	if !IsNil(o.AdresseLigne2) {
		toSerialize["adresse_ligne_2"] = o.AdresseLigne2
	}
	if !IsNil(o.AdresseLigne3) {
		toSerialize["adresse_ligne_3"] = o.AdresseLigne3
	}
	if !IsNil(o.CodePostal) {
		toSerialize["code_postal"] = o.CodePostal
	}
	if !IsNil(o.Ville) {
		toSerialize["ville"] = o.Ville
	}
	if !IsNil(o.Pays) {
		toSerialize["pays"] = o.Pays
	}
	if !IsNil(o.CodePays) {
		toSerialize["code_pays"] = o.CodePays
	}
	if !IsNil(o.PourcentageParts) {
		toSerialize["pourcentage_parts"] = o.PourcentageParts
	}
	if !IsNil(o.PourcentagePartsDirectes) {
		toSerialize["pourcentage_parts_directes"] = o.PourcentagePartsDirectes
	}
	if !IsNil(o.PourcentagePartsIndirectes) {
		toSerialize["pourcentage_parts_indirectes"] = o.PourcentagePartsIndirectes
	}
	if !IsNil(o.PourcentagePartsVocationTitulaire) {
		toSerialize["pourcentage_parts_vocation_titulaire"] = o.PourcentagePartsVocationTitulaire
	}
	if !IsNil(o.DetailsPartsDirectes) {
		toSerialize["details_parts_directes"] = o.DetailsPartsDirectes
	}
	if !IsNil(o.DetailsPartsIndirectes) {
		toSerialize["details_parts_indirectes"] = o.DetailsPartsIndirectes
	}
	if !IsNil(o.DetailsPartsVocationTitulaire) {
		toSerialize["details_parts_vocation_titulaire"] = o.DetailsPartsVocationTitulaire
	}
	if !IsNil(o.PourcentageVotes) {
		toSerialize["pourcentage_votes"] = o.PourcentageVotes
	}
	if !IsNil(o.PourcentageVotesDirects) {
		toSerialize["pourcentage_votes_directs"] = o.PourcentageVotesDirects
	}
	if !IsNil(o.PourcentageVotesIndirect) {
		toSerialize["pourcentage_votes_indirect"] = o.PourcentageVotesIndirect
	}
	if !IsNil(o.DetailsVotesDirects) {
		toSerialize["details_votes_directs"] = o.DetailsVotesDirects
	}
	if !IsNil(o.DetailsVotesIndirects) {
		toSerialize["details_votes_indirects"] = o.DetailsVotesIndirects
	}
	if !IsNil(o.DetailsSocieteDeGestion) {
		toSerialize["details_societe_de_gestion"] = o.DetailsSocieteDeGestion
	}
	if !IsNil(o.DetentionPouvoirDecisionAg) {
		toSerialize["detention_pouvoir_decision_ag"] = o.DetentionPouvoirDecisionAg
	}
	if !IsNil(o.DetentionPouvoirNomMembreConseilAdministration) {
		toSerialize["detention_pouvoir_nom_membre_conseil_administration"] = o.DetentionPouvoirNomMembreConseilAdministration
	}
	if !IsNil(o.DetentionAutresMoyensControle) {
		toSerialize["detention_autres_moyens_controle"] = o.DetentionAutresMoyensControle
	}
	if !IsNil(o.BeneficiaireRepresentantLegal) {
		toSerialize["beneficiaire_representant_legal"] = o.BeneficiaireRepresentantLegal
	}
	if !IsNil(o.RepresentantLegalPlacementSansGestionDelegation) {
		toSerialize["representant_legal_placement_sans_gestion_delegation"] = o.RepresentantLegalPlacementSansGestionDelegation
	}
	if !IsNil(o.PersonnePolitiquementExposee) {
		toSerialize["personne_politiquement_exposee"] = o.PersonnePolitiquementExposee
	}
	if !IsNil(o.SanctionsEnCours) {
		toSerialize["sanctions_en_cours"] = o.SanctionsEnCours
	}
	if !IsNil(o.Sanctions) {
		toSerialize["sanctions"] = o.Sanctions
	}
	return toSerialize, nil
}

type NullableEntrepriseFicheAllOfBeneficiairesEffectifs struct {
	value *EntrepriseFicheAllOfBeneficiairesEffectifs
	isSet bool
}

func (v NullableEntrepriseFicheAllOfBeneficiairesEffectifs) Get() *EntrepriseFicheAllOfBeneficiairesEffectifs {
	return v.value
}

func (v *NullableEntrepriseFicheAllOfBeneficiairesEffectifs) Set(val *EntrepriseFicheAllOfBeneficiairesEffectifs) {
	v.value = val
	v.isSet = true
}

func (v NullableEntrepriseFicheAllOfBeneficiairesEffectifs) IsSet() bool {
	return v.isSet
}

func (v *NullableEntrepriseFicheAllOfBeneficiairesEffectifs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntrepriseFicheAllOfBeneficiairesEffectifs(val *EntrepriseFicheAllOfBeneficiairesEffectifs) *NullableEntrepriseFicheAllOfBeneficiairesEffectifs {
	return &NullableEntrepriseFicheAllOfBeneficiairesEffectifs{value: val, isSet: true}
}

func (v NullableEntrepriseFicheAllOfBeneficiairesEffectifs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntrepriseFicheAllOfBeneficiairesEffectifs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


