/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EntrepriseFiche type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntrepriseFiche{}

// EntrepriseFiche struct for EntrepriseFiche
type EntrepriseFiche struct {
	// Le numéro SIREN de l'entreprise au format xxxxxxxxx.
	Siren *string `json:"siren,omitempty"`
	// Le numéro SIREN de l'entreprise au format xxx xxx xxx.
	SirenFormate *string `json:"siren_formate,omitempty"`
	// Indique si l'entreprise s'oppose à l'utilisation commerciale de ses données.
	OppositionUtilisationCommerciale *bool `json:"opposition_utilisation_commerciale,omitempty"`
	// Le nom de l'entreprise. Il est égal à sigle + dénomination en cas de personne morale, ou à nom + prénom en cas de personne physique. Nullable si le paramètre `integrer_diffusions_partielles` est à vrai.
	NomEntreprise *string `json:"nom_entreprise,omitempty"`
	// Vrai en cas de personne morale, faux en cas de personne physique.
	PersonneMorale *bool `json:"personne_morale,omitempty"`
	// Dénomination de l'entreprise si personne morale.
	Denomination *string `json:"denomination,omitempty"`
	// Nom si personne physique.
	Nom *string `json:"nom,omitempty"`
	// Prénom si personne physique.
	Prenom *string `json:"prenom,omitempty"`
	// Sexe si personne physique. F pour féminin, M pour masculin.
	Sexe *string `json:"sexe,omitempty"`
	// Code NAF de l'entreprise.
	CodeNaf *string `json:"code_naf,omitempty"`
	// Libellé du code NAF de l'entreprise.
	LibelleCodeNaf *string `json:"libelle_code_naf,omitempty"`
	// Domaine d'activité de l'entreprise.
	DomaineActivite *string `json:"domaine_activite,omitempty"`
	// Liste des conventions collectives de l'entreprise.
	ConventionsCollectives []EntrepriseBaseConventionsCollectivesInner `json:"conventions_collectives,omitempty"`
	// Date de création de l'entreprise au format AAAA-MM-JJ.
	DateCreation *string `json:"date_creation,omitempty"`
	// Date de création de l'entreprise au format JJ/MM/AAAA.
	DateCreationFormate *string `json:"date_creation_formate,omitempty"`
	// Si vrai, l'entreprise n'est plus en activité. Sinon, elle est toujours en activité.
	EntrepriseCessee *bool `json:"entreprise_cessee,omitempty"`
	// Date de cessation de l'entreprise au format AAAA-MM-JJ.
	DateCessation *string `json:"date_cessation,omitempty"`
	// Si vrai, l'entreprise a au moins un employé.
	EntrepriseEmployeuse *bool `json:"entreprise_employeuse,omitempty"`
	// Si vrai, l'entreprise est société à mission.
	SocieteAMission *bool `json:"societe_a_mission,omitempty"`
	// Catégorie juridique de l'entreprise, selon la [nomenclature Insee](https://www.insee.fr/fr/information/2028129).   **Note** : Le code correspond à celui de l'INSEE, à l'exception des SASU qui auront comme code 5720 et les EURL qui auront comme code 5498.
	CategorieJuridique *string `json:"categorie_juridique,omitempty"`
	// Forme juridique de l'entreprise.
	FormeJuridique *string `json:"forme_juridique,omitempty"`
	// Si vrai, l'entreprise possède le statut de micro-entrepreneur
	MicroEntreprise *bool `json:"micro_entreprise,omitempty"`
	// Forme d'exercice de l'activité principale.
	FormeExercice *string `json:"forme_exercice,omitempty"`
	// Tranche d'effectif de l'entreprise.
	Effectif *string `json:"effectif,omitempty"`
	// Effectif minimal de l'entreprise.
	EffectifMin *int32 `json:"effectif_min,omitempty"`
	// Effectif maximal de l'entreprise.
	EffectifMax *int32 `json:"effectif_max,omitempty"`
	// Tranche d'effectif de l'entreprise, selon la [nomenclature Sirene](https://www.sirene.fr/static-resources/documentation/v_sommaire_311.htm#73).
	TrancheEffectif *string `json:"tranche_effectif,omitempty"`
	// Année de validité des variables effectif, effectif_min et effectif_max.
	AnneeEffectif *int32 `json:"annee_effectif,omitempty"`
	// Capital de l'entreprise.
	Capital *float32 `json:"capital,omitempty"`
	// Statut de l'entreprise au RCS.
	StatutRcs *string `json:"statut_rcs,omitempty"`
	Siege *EtablissementFiche `json:"siege,omitempty"`
	// Le statut de diffusion de l'entreprise. Non diffusable correspond à une entreprise ayant demandé une diffusion partielle de ses données. Aucune information n'est alors disponible, sauf si vous utilisez le paramètre `integrer_diffusions_partielles`.
	Diffusable *bool `json:"diffusable,omitempty"`
	// Sigle de l'entreprise si personne morale.
	Sigle *string `json:"sigle,omitempty"`
	// Objet social de l'entreprise.
	ObjetSocial *string `json:"objet_social,omitempty"`
	// Capital l'entreprise au format xx xxx €.
	CapitalFormate *string `json:"capital_formate,omitempty"`
	// Capital actuel de l'entreprise si variable.
	CapitalActuelSiVariable *string `json:"capital_actuel_si_variable,omitempty"`
	// Devise de capital_formate et capital_actuel_si_variable.
	DeviseCapital *string `json:"devise_capital,omitempty"`
	// Numéro RCS de l'entreprise.
	NumeroRcs *string `json:"numero_rcs,omitempty"`
	// Date de clôture d'exercice de l'entreprise.
	DateClotureExercice *string `json:"date_cloture_exercice,omitempty"`
	// Date de clôture d'exercice exceptionnel de l'entreprise.
	DateClotureExerciceExceptionnelle *string `json:"date_cloture_exercice_exceptionnelle,omitempty"`
	// Date de clôture d'exercice exceptionnel formatée de l'entreprise.
	DateClotureExerciceExceptionnelleFormate *string `json:"date_cloture_exercice_exceptionnelle_formate,omitempty"`
	// Prochaine date de clôture d'exercice de l'entreprise.
	ProchaineDateClotureExercice *string `json:"prochaine_date_cloture_exercice,omitempty"`
	// Prochaine date de clôture d'exercice formatée de l'entreprise.
	ProchaineDateClotureExerciceFormate *string `json:"prochaine_date_cloture_exercice_formate,omitempty"`
	// Vrai si l'entreprise est une entreprise de l'économie sociale et solidaire.
	EconomieSocialeSolidaire *bool `json:"economie_sociale_solidaire,omitempty"`
	// Durée de la personne morale.
	DureePersonneMorale *string `json:"duree_personne_morale,omitempty"`
	// Date de dernier traitement de l'entreprise.
	DernierTraitement *string `json:"dernier_traitement,omitempty"`
	// Dernière mise à jour de la base de donnée sirène au format AAAA-MM-JJ.
	DerniereMiseAJourSirene *string `json:"derniere_mise_a_jour_sirene,omitempty"`
	// Dernière mise à jour de la base de donnée RCS au format AAAA-MM-JJ.
	DerniereMiseAJourRcs *string `json:"derniere_mise_a_jour_rcs,omitempty"`
	// Greffe RCS de l'entreprise.
	Greffe *string `json:"greffe,omitempty"`
	// Code greffe RCS de l'entreprise.
	CodeGreffe *string `json:"code_greffe,omitempty"`
	// Date d'immatriculation de l'entreprise au RCS.
	DateImmatriculationRcs *string `json:"date_immatriculation_rcs,omitempty"`
	// Date de la première immatriculation de l'entreprise au RCS.
	DatePremiereImmatriculationRcs *string `json:"date_premiere_immatriculation_rcs,omitempty"`
	// Date de début d'activité de l'entreprise.
	DateDebutActivite *string `json:"date_debut_activite,omitempty"`
	// Date de début d'activité de l'entreprise.
	DateDebutPremiereActivite *string `json:"date_debut_premiere_activite,omitempty"`
	// Date de radiation de l'entreprise au RCS.
	DateRadiationRcs *string `json:"date_radiation_rcs,omitempty"`
	// Statut de l'entreprise au RNE.
	StatutRne *string `json:"statut_rne,omitempty"`
	// Date d'immatriculation de l'entreprise au RNE.
	DateImmatriculationRne *string `json:"date_immatriculation_rne,omitempty"`
	// Date de radiation de l'entreprise au RNE.
	DateRadiationRne *string `json:"date_radiation_rne,omitempty"`
	// Numéro de TVA intracommunautaire de l'entreprise.
	NumeroTvaIntracommunautaire *string `json:"numero_tva_intracommunautaire,omitempty"`
	// Présent uniquement si le paramètre validite_tva_intracommunautaire a été mis à vrai.  Si vrai, le numéro de TVA intracommunautaire est valide. Si faux, il est invalide. Si null, la validité n'a pas pu être vérifiée.
	ValiditeTvaIntracommunautaire *bool `json:"validite_tva_intracommunautaire,omitempty"`
	// Si vrai, l'entreprise est à associé unique (notamment pour les SASU et les EURL).
	AssocieUnique *bool `json:"associe_unique,omitempty"`
	// Liste des établissements de l'entreprise. (uniquement si le paramètre `siren` est utilisé)
	Etablissements []EtablissementFiche `json:"etablissements,omitempty"`
	Etablissement *EntrepriseFicheAllOfEtablissement `json:"etablissement,omitempty"`
	// Liste des finances de l'entreprise.
	Finances []EntrepriseFicheAllOfFinances `json:"finances,omitempty"`
	// Liste des représentants de l'entreprise.
	Representants []RepresentantEntreprise `json:"representants,omitempty"`
	// Liste des bénéficiaires effectifs de l'entreprise (si disponibles).
	BeneficiairesEffectifs []EntrepriseFicheAllOfBeneficiairesEffectifs `json:"beneficiaires_effectifs,omitempty"`
	// Liste des actes de l'entreprise.
	DepotsActes []EntrepriseFicheAllOfDepotsActes `json:"depots_actes,omitempty"`
	// Liste des comptes de l'entreprise.
	Comptes []EntrepriseFicheAllOfComptes `json:"comptes,omitempty"`
	// Liste des publications au Bodacc de l'entreprise.
	PublicationsBodacc []Bodacc `json:"publications_bodacc,omitempty"`
	// Liste des procédures collectives de l'entreprise.
	ProceduresCollectives []EntrepriseFicheAllOfProceduresCollectives `json:"procedures_collectives,omitempty"`
	// Vrai si l'entreprise a des procédures collectives (en cours ou terminées), faux sinon.
	ProcedureCollectiveExiste *bool `json:"procedure_collective_existe,omitempty"`
	// Vrai si l'entreprise a des procédures collectives en cours, faux sinon.
	ProcedureCollectiveEnCours *bool `json:"procedure_collective_en_cours,omitempty"`
	DerniersStatuts *EntrepriseFicheAllOfDerniersStatuts `json:"derniers_statuts,omitempty"`
	ExtraitImmatriculation *EntrepriseFicheAllOfExtraitImmatriculation `json:"extrait_immatriculation,omitempty"`
	Rnm *EntrepriseFicheAllOfRnm `json:"rnm,omitempty"`
	// Liste des marques françaises déposées par l'entreprise. Uniquement présent si le paramètre \"marques\" a été mis à vrai.
	Marques []EntrepriseFicheAllOfMarques `json:"marques,omitempty"`
	Association *Association `json:"association,omitempty"`
	// Liste des labels de l'entreprise. Uniquement présent si demandé dans les champs supplémentaires.
	Labels []Labels `json:"labels,omitempty"`
	// Liste des sites internet de l'entreprise. Uniquement présent si demandé dans les champs supplémentaires.
	SitesInternet []string `json:"sites_internet,omitempty"`
	// Numéro de téléphone de l'entreprise au format 0123456789. Uniquement présent si demandé dans les champs supplémentaires.
	Telephone *string `json:"telephone,omitempty"`
	// Adresse email de l'entreprise. Uniquement présent si demandé dans les champs supplémentaires.
	Email *string `json:"email,omitempty"`
	ScoringNonFinancier *ScoringNonFinancier `json:"scoring_non_financier,omitempty"`
	ScoringFinancier *ScoringFinancier `json:"scoring_financier,omitempty"`
	// Catégorie de l'entreprise. Uniquement présent si demandé dans les champs supplémentaires.
	CategorieEntreprise *string `json:"categorie_entreprise,omitempty"`
	// Année de correspondance de la catégorie de l'entreprise. Uniquement présent si le champ supplémentaire `categorie_entreprise` est demandé.
	AnneeCategorieEntreprise *int32 `json:"annee_categorie_entreprise,omitempty"`
}

// NewEntrepriseFiche instantiates a new EntrepriseFiche object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntrepriseFiche() *EntrepriseFiche {
	this := EntrepriseFiche{}
	return &this
}

// NewEntrepriseFicheWithDefaults instantiates a new EntrepriseFiche object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntrepriseFicheWithDefaults() *EntrepriseFiche {
	this := EntrepriseFiche{}
	return &this
}

// GetSiren returns the Siren field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetSiren() string {
	if o == nil || IsNil(o.Siren) {
		var ret string
		return ret
	}
	return *o.Siren
}

// GetSirenOk returns a tuple with the Siren field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetSirenOk() (*string, bool) {
	if o == nil || IsNil(o.Siren) {
		return nil, false
	}
	return o.Siren, true
}

// HasSiren returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasSiren() bool {
	if o != nil && !IsNil(o.Siren) {
		return true
	}

	return false
}

// SetSiren gets a reference to the given string and assigns it to the Siren field.
func (o *EntrepriseFiche) SetSiren(v string) {
	o.Siren = &v
}

// GetSirenFormate returns the SirenFormate field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetSirenFormate() string {
	if o == nil || IsNil(o.SirenFormate) {
		var ret string
		return ret
	}
	return *o.SirenFormate
}

// GetSirenFormateOk returns a tuple with the SirenFormate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetSirenFormateOk() (*string, bool) {
	if o == nil || IsNil(o.SirenFormate) {
		return nil, false
	}
	return o.SirenFormate, true
}

// HasSirenFormate returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasSirenFormate() bool {
	if o != nil && !IsNil(o.SirenFormate) {
		return true
	}

	return false
}

// SetSirenFormate gets a reference to the given string and assigns it to the SirenFormate field.
func (o *EntrepriseFiche) SetSirenFormate(v string) {
	o.SirenFormate = &v
}

// GetOppositionUtilisationCommerciale returns the OppositionUtilisationCommerciale field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetOppositionUtilisationCommerciale() bool {
	if o == nil || IsNil(o.OppositionUtilisationCommerciale) {
		var ret bool
		return ret
	}
	return *o.OppositionUtilisationCommerciale
}

// GetOppositionUtilisationCommercialeOk returns a tuple with the OppositionUtilisationCommerciale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetOppositionUtilisationCommercialeOk() (*bool, bool) {
	if o == nil || IsNil(o.OppositionUtilisationCommerciale) {
		return nil, false
	}
	return o.OppositionUtilisationCommerciale, true
}

// HasOppositionUtilisationCommerciale returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasOppositionUtilisationCommerciale() bool {
	if o != nil && !IsNil(o.OppositionUtilisationCommerciale) {
		return true
	}

	return false
}

// SetOppositionUtilisationCommerciale gets a reference to the given bool and assigns it to the OppositionUtilisationCommerciale field.
func (o *EntrepriseFiche) SetOppositionUtilisationCommerciale(v bool) {
	o.OppositionUtilisationCommerciale = &v
}

// GetNomEntreprise returns the NomEntreprise field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetNomEntreprise() string {
	if o == nil || IsNil(o.NomEntreprise) {
		var ret string
		return ret
	}
	return *o.NomEntreprise
}

// GetNomEntrepriseOk returns a tuple with the NomEntreprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetNomEntrepriseOk() (*string, bool) {
	if o == nil || IsNil(o.NomEntreprise) {
		return nil, false
	}
	return o.NomEntreprise, true
}

// HasNomEntreprise returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasNomEntreprise() bool {
	if o != nil && !IsNil(o.NomEntreprise) {
		return true
	}

	return false
}

// SetNomEntreprise gets a reference to the given string and assigns it to the NomEntreprise field.
func (o *EntrepriseFiche) SetNomEntreprise(v string) {
	o.NomEntreprise = &v
}

// GetPersonneMorale returns the PersonneMorale field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetPersonneMorale() bool {
	if o == nil || IsNil(o.PersonneMorale) {
		var ret bool
		return ret
	}
	return *o.PersonneMorale
}

// GetPersonneMoraleOk returns a tuple with the PersonneMorale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetPersonneMoraleOk() (*bool, bool) {
	if o == nil || IsNil(o.PersonneMorale) {
		return nil, false
	}
	return o.PersonneMorale, true
}

// HasPersonneMorale returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasPersonneMorale() bool {
	if o != nil && !IsNil(o.PersonneMorale) {
		return true
	}

	return false
}

// SetPersonneMorale gets a reference to the given bool and assigns it to the PersonneMorale field.
func (o *EntrepriseFiche) SetPersonneMorale(v bool) {
	o.PersonneMorale = &v
}

// GetDenomination returns the Denomination field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDenomination() string {
	if o == nil || IsNil(o.Denomination) {
		var ret string
		return ret
	}
	return *o.Denomination
}

// GetDenominationOk returns a tuple with the Denomination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDenominationOk() (*string, bool) {
	if o == nil || IsNil(o.Denomination) {
		return nil, false
	}
	return o.Denomination, true
}

// HasDenomination returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDenomination() bool {
	if o != nil && !IsNil(o.Denomination) {
		return true
	}

	return false
}

// SetDenomination gets a reference to the given string and assigns it to the Denomination field.
func (o *EntrepriseFiche) SetDenomination(v string) {
	o.Denomination = &v
}

// GetNom returns the Nom field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetNom() string {
	if o == nil || IsNil(o.Nom) {
		var ret string
		return ret
	}
	return *o.Nom
}

// GetNomOk returns a tuple with the Nom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetNomOk() (*string, bool) {
	if o == nil || IsNil(o.Nom) {
		return nil, false
	}
	return o.Nom, true
}

// HasNom returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasNom() bool {
	if o != nil && !IsNil(o.Nom) {
		return true
	}

	return false
}

// SetNom gets a reference to the given string and assigns it to the Nom field.
func (o *EntrepriseFiche) SetNom(v string) {
	o.Nom = &v
}

// GetPrenom returns the Prenom field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetPrenom() string {
	if o == nil || IsNil(o.Prenom) {
		var ret string
		return ret
	}
	return *o.Prenom
}

// GetPrenomOk returns a tuple with the Prenom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetPrenomOk() (*string, bool) {
	if o == nil || IsNil(o.Prenom) {
		return nil, false
	}
	return o.Prenom, true
}

// HasPrenom returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasPrenom() bool {
	if o != nil && !IsNil(o.Prenom) {
		return true
	}

	return false
}

// SetPrenom gets a reference to the given string and assigns it to the Prenom field.
func (o *EntrepriseFiche) SetPrenom(v string) {
	o.Prenom = &v
}

// GetSexe returns the Sexe field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetSexe() string {
	if o == nil || IsNil(o.Sexe) {
		var ret string
		return ret
	}
	return *o.Sexe
}

// GetSexeOk returns a tuple with the Sexe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetSexeOk() (*string, bool) {
	if o == nil || IsNil(o.Sexe) {
		return nil, false
	}
	return o.Sexe, true
}

// HasSexe returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasSexe() bool {
	if o != nil && !IsNil(o.Sexe) {
		return true
	}

	return false
}

// SetSexe gets a reference to the given string and assigns it to the Sexe field.
func (o *EntrepriseFiche) SetSexe(v string) {
	o.Sexe = &v
}

// GetCodeNaf returns the CodeNaf field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetCodeNaf() string {
	if o == nil || IsNil(o.CodeNaf) {
		var ret string
		return ret
	}
	return *o.CodeNaf
}

// GetCodeNafOk returns a tuple with the CodeNaf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetCodeNafOk() (*string, bool) {
	if o == nil || IsNil(o.CodeNaf) {
		return nil, false
	}
	return o.CodeNaf, true
}

// HasCodeNaf returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasCodeNaf() bool {
	if o != nil && !IsNil(o.CodeNaf) {
		return true
	}

	return false
}

// SetCodeNaf gets a reference to the given string and assigns it to the CodeNaf field.
func (o *EntrepriseFiche) SetCodeNaf(v string) {
	o.CodeNaf = &v
}

// GetLibelleCodeNaf returns the LibelleCodeNaf field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetLibelleCodeNaf() string {
	if o == nil || IsNil(o.LibelleCodeNaf) {
		var ret string
		return ret
	}
	return *o.LibelleCodeNaf
}

// GetLibelleCodeNafOk returns a tuple with the LibelleCodeNaf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetLibelleCodeNafOk() (*string, bool) {
	if o == nil || IsNil(o.LibelleCodeNaf) {
		return nil, false
	}
	return o.LibelleCodeNaf, true
}

// HasLibelleCodeNaf returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasLibelleCodeNaf() bool {
	if o != nil && !IsNil(o.LibelleCodeNaf) {
		return true
	}

	return false
}

// SetLibelleCodeNaf gets a reference to the given string and assigns it to the LibelleCodeNaf field.
func (o *EntrepriseFiche) SetLibelleCodeNaf(v string) {
	o.LibelleCodeNaf = &v
}

// GetDomaineActivite returns the DomaineActivite field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDomaineActivite() string {
	if o == nil || IsNil(o.DomaineActivite) {
		var ret string
		return ret
	}
	return *o.DomaineActivite
}

// GetDomaineActiviteOk returns a tuple with the DomaineActivite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDomaineActiviteOk() (*string, bool) {
	if o == nil || IsNil(o.DomaineActivite) {
		return nil, false
	}
	return o.DomaineActivite, true
}

// HasDomaineActivite returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDomaineActivite() bool {
	if o != nil && !IsNil(o.DomaineActivite) {
		return true
	}

	return false
}

// SetDomaineActivite gets a reference to the given string and assigns it to the DomaineActivite field.
func (o *EntrepriseFiche) SetDomaineActivite(v string) {
	o.DomaineActivite = &v
}

// GetConventionsCollectives returns the ConventionsCollectives field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetConventionsCollectives() []EntrepriseBaseConventionsCollectivesInner {
	if o == nil || IsNil(o.ConventionsCollectives) {
		var ret []EntrepriseBaseConventionsCollectivesInner
		return ret
	}
	return o.ConventionsCollectives
}

// GetConventionsCollectivesOk returns a tuple with the ConventionsCollectives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetConventionsCollectivesOk() ([]EntrepriseBaseConventionsCollectivesInner, bool) {
	if o == nil || IsNil(o.ConventionsCollectives) {
		return nil, false
	}
	return o.ConventionsCollectives, true
}

// HasConventionsCollectives returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasConventionsCollectives() bool {
	if o != nil && !IsNil(o.ConventionsCollectives) {
		return true
	}

	return false
}

// SetConventionsCollectives gets a reference to the given []EntrepriseBaseConventionsCollectivesInner and assigns it to the ConventionsCollectives field.
func (o *EntrepriseFiche) SetConventionsCollectives(v []EntrepriseBaseConventionsCollectivesInner) {
	o.ConventionsCollectives = v
}

// GetDateCreation returns the DateCreation field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDateCreation() string {
	if o == nil || IsNil(o.DateCreation) {
		var ret string
		return ret
	}
	return *o.DateCreation
}

// GetDateCreationOk returns a tuple with the DateCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDateCreationOk() (*string, bool) {
	if o == nil || IsNil(o.DateCreation) {
		return nil, false
	}
	return o.DateCreation, true
}

// HasDateCreation returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDateCreation() bool {
	if o != nil && !IsNil(o.DateCreation) {
		return true
	}

	return false
}

// SetDateCreation gets a reference to the given string and assigns it to the DateCreation field.
func (o *EntrepriseFiche) SetDateCreation(v string) {
	o.DateCreation = &v
}

// GetDateCreationFormate returns the DateCreationFormate field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDateCreationFormate() string {
	if o == nil || IsNil(o.DateCreationFormate) {
		var ret string
		return ret
	}
	return *o.DateCreationFormate
}

// GetDateCreationFormateOk returns a tuple with the DateCreationFormate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDateCreationFormateOk() (*string, bool) {
	if o == nil || IsNil(o.DateCreationFormate) {
		return nil, false
	}
	return o.DateCreationFormate, true
}

// HasDateCreationFormate returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDateCreationFormate() bool {
	if o != nil && !IsNil(o.DateCreationFormate) {
		return true
	}

	return false
}

// SetDateCreationFormate gets a reference to the given string and assigns it to the DateCreationFormate field.
func (o *EntrepriseFiche) SetDateCreationFormate(v string) {
	o.DateCreationFormate = &v
}

// GetEntrepriseCessee returns the EntrepriseCessee field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetEntrepriseCessee() bool {
	if o == nil || IsNil(o.EntrepriseCessee) {
		var ret bool
		return ret
	}
	return *o.EntrepriseCessee
}

// GetEntrepriseCesseeOk returns a tuple with the EntrepriseCessee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetEntrepriseCesseeOk() (*bool, bool) {
	if o == nil || IsNil(o.EntrepriseCessee) {
		return nil, false
	}
	return o.EntrepriseCessee, true
}

// HasEntrepriseCessee returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasEntrepriseCessee() bool {
	if o != nil && !IsNil(o.EntrepriseCessee) {
		return true
	}

	return false
}

// SetEntrepriseCessee gets a reference to the given bool and assigns it to the EntrepriseCessee field.
func (o *EntrepriseFiche) SetEntrepriseCessee(v bool) {
	o.EntrepriseCessee = &v
}

// GetDateCessation returns the DateCessation field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDateCessation() string {
	if o == nil || IsNil(o.DateCessation) {
		var ret string
		return ret
	}
	return *o.DateCessation
}

// GetDateCessationOk returns a tuple with the DateCessation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDateCessationOk() (*string, bool) {
	if o == nil || IsNil(o.DateCessation) {
		return nil, false
	}
	return o.DateCessation, true
}

// HasDateCessation returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDateCessation() bool {
	if o != nil && !IsNil(o.DateCessation) {
		return true
	}

	return false
}

// SetDateCessation gets a reference to the given string and assigns it to the DateCessation field.
func (o *EntrepriseFiche) SetDateCessation(v string) {
	o.DateCessation = &v
}

// GetEntrepriseEmployeuse returns the EntrepriseEmployeuse field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetEntrepriseEmployeuse() bool {
	if o == nil || IsNil(o.EntrepriseEmployeuse) {
		var ret bool
		return ret
	}
	return *o.EntrepriseEmployeuse
}

// GetEntrepriseEmployeuseOk returns a tuple with the EntrepriseEmployeuse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetEntrepriseEmployeuseOk() (*bool, bool) {
	if o == nil || IsNil(o.EntrepriseEmployeuse) {
		return nil, false
	}
	return o.EntrepriseEmployeuse, true
}

// HasEntrepriseEmployeuse returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasEntrepriseEmployeuse() bool {
	if o != nil && !IsNil(o.EntrepriseEmployeuse) {
		return true
	}

	return false
}

// SetEntrepriseEmployeuse gets a reference to the given bool and assigns it to the EntrepriseEmployeuse field.
func (o *EntrepriseFiche) SetEntrepriseEmployeuse(v bool) {
	o.EntrepriseEmployeuse = &v
}

// GetSocieteAMission returns the SocieteAMission field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetSocieteAMission() bool {
	if o == nil || IsNil(o.SocieteAMission) {
		var ret bool
		return ret
	}
	return *o.SocieteAMission
}

// GetSocieteAMissionOk returns a tuple with the SocieteAMission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetSocieteAMissionOk() (*bool, bool) {
	if o == nil || IsNil(o.SocieteAMission) {
		return nil, false
	}
	return o.SocieteAMission, true
}

// HasSocieteAMission returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasSocieteAMission() bool {
	if o != nil && !IsNil(o.SocieteAMission) {
		return true
	}

	return false
}

// SetSocieteAMission gets a reference to the given bool and assigns it to the SocieteAMission field.
func (o *EntrepriseFiche) SetSocieteAMission(v bool) {
	o.SocieteAMission = &v
}

// GetCategorieJuridique returns the CategorieJuridique field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetCategorieJuridique() string {
	if o == nil || IsNil(o.CategorieJuridique) {
		var ret string
		return ret
	}
	return *o.CategorieJuridique
}

// GetCategorieJuridiqueOk returns a tuple with the CategorieJuridique field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetCategorieJuridiqueOk() (*string, bool) {
	if o == nil || IsNil(o.CategorieJuridique) {
		return nil, false
	}
	return o.CategorieJuridique, true
}

// HasCategorieJuridique returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasCategorieJuridique() bool {
	if o != nil && !IsNil(o.CategorieJuridique) {
		return true
	}

	return false
}

// SetCategorieJuridique gets a reference to the given string and assigns it to the CategorieJuridique field.
func (o *EntrepriseFiche) SetCategorieJuridique(v string) {
	o.CategorieJuridique = &v
}

// GetFormeJuridique returns the FormeJuridique field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetFormeJuridique() string {
	if o == nil || IsNil(o.FormeJuridique) {
		var ret string
		return ret
	}
	return *o.FormeJuridique
}

// GetFormeJuridiqueOk returns a tuple with the FormeJuridique field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetFormeJuridiqueOk() (*string, bool) {
	if o == nil || IsNil(o.FormeJuridique) {
		return nil, false
	}
	return o.FormeJuridique, true
}

// HasFormeJuridique returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasFormeJuridique() bool {
	if o != nil && !IsNil(o.FormeJuridique) {
		return true
	}

	return false
}

// SetFormeJuridique gets a reference to the given string and assigns it to the FormeJuridique field.
func (o *EntrepriseFiche) SetFormeJuridique(v string) {
	o.FormeJuridique = &v
}

// GetMicroEntreprise returns the MicroEntreprise field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetMicroEntreprise() bool {
	if o == nil || IsNil(o.MicroEntreprise) {
		var ret bool
		return ret
	}
	return *o.MicroEntreprise
}

// GetMicroEntrepriseOk returns a tuple with the MicroEntreprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetMicroEntrepriseOk() (*bool, bool) {
	if o == nil || IsNil(o.MicroEntreprise) {
		return nil, false
	}
	return o.MicroEntreprise, true
}

// HasMicroEntreprise returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasMicroEntreprise() bool {
	if o != nil && !IsNil(o.MicroEntreprise) {
		return true
	}

	return false
}

// SetMicroEntreprise gets a reference to the given bool and assigns it to the MicroEntreprise field.
func (o *EntrepriseFiche) SetMicroEntreprise(v bool) {
	o.MicroEntreprise = &v
}

// GetFormeExercice returns the FormeExercice field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetFormeExercice() string {
	if o == nil || IsNil(o.FormeExercice) {
		var ret string
		return ret
	}
	return *o.FormeExercice
}

// GetFormeExerciceOk returns a tuple with the FormeExercice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetFormeExerciceOk() (*string, bool) {
	if o == nil || IsNil(o.FormeExercice) {
		return nil, false
	}
	return o.FormeExercice, true
}

// HasFormeExercice returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasFormeExercice() bool {
	if o != nil && !IsNil(o.FormeExercice) {
		return true
	}

	return false
}

// SetFormeExercice gets a reference to the given string and assigns it to the FormeExercice field.
func (o *EntrepriseFiche) SetFormeExercice(v string) {
	o.FormeExercice = &v
}

// GetEffectif returns the Effectif field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetEffectif() string {
	if o == nil || IsNil(o.Effectif) {
		var ret string
		return ret
	}
	return *o.Effectif
}

// GetEffectifOk returns a tuple with the Effectif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetEffectifOk() (*string, bool) {
	if o == nil || IsNil(o.Effectif) {
		return nil, false
	}
	return o.Effectif, true
}

// HasEffectif returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasEffectif() bool {
	if o != nil && !IsNil(o.Effectif) {
		return true
	}

	return false
}

// SetEffectif gets a reference to the given string and assigns it to the Effectif field.
func (o *EntrepriseFiche) SetEffectif(v string) {
	o.Effectif = &v
}

// GetEffectifMin returns the EffectifMin field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetEffectifMin() int32 {
	if o == nil || IsNil(o.EffectifMin) {
		var ret int32
		return ret
	}
	return *o.EffectifMin
}

// GetEffectifMinOk returns a tuple with the EffectifMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetEffectifMinOk() (*int32, bool) {
	if o == nil || IsNil(o.EffectifMin) {
		return nil, false
	}
	return o.EffectifMin, true
}

// HasEffectifMin returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasEffectifMin() bool {
	if o != nil && !IsNil(o.EffectifMin) {
		return true
	}

	return false
}

// SetEffectifMin gets a reference to the given int32 and assigns it to the EffectifMin field.
func (o *EntrepriseFiche) SetEffectifMin(v int32) {
	o.EffectifMin = &v
}

// GetEffectifMax returns the EffectifMax field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetEffectifMax() int32 {
	if o == nil || IsNil(o.EffectifMax) {
		var ret int32
		return ret
	}
	return *o.EffectifMax
}

// GetEffectifMaxOk returns a tuple with the EffectifMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetEffectifMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.EffectifMax) {
		return nil, false
	}
	return o.EffectifMax, true
}

// HasEffectifMax returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasEffectifMax() bool {
	if o != nil && !IsNil(o.EffectifMax) {
		return true
	}

	return false
}

// SetEffectifMax gets a reference to the given int32 and assigns it to the EffectifMax field.
func (o *EntrepriseFiche) SetEffectifMax(v int32) {
	o.EffectifMax = &v
}

// GetTrancheEffectif returns the TrancheEffectif field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetTrancheEffectif() string {
	if o == nil || IsNil(o.TrancheEffectif) {
		var ret string
		return ret
	}
	return *o.TrancheEffectif
}

// GetTrancheEffectifOk returns a tuple with the TrancheEffectif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetTrancheEffectifOk() (*string, bool) {
	if o == nil || IsNil(o.TrancheEffectif) {
		return nil, false
	}
	return o.TrancheEffectif, true
}

// HasTrancheEffectif returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasTrancheEffectif() bool {
	if o != nil && !IsNil(o.TrancheEffectif) {
		return true
	}

	return false
}

// SetTrancheEffectif gets a reference to the given string and assigns it to the TrancheEffectif field.
func (o *EntrepriseFiche) SetTrancheEffectif(v string) {
	o.TrancheEffectif = &v
}

// GetAnneeEffectif returns the AnneeEffectif field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetAnneeEffectif() int32 {
	if o == nil || IsNil(o.AnneeEffectif) {
		var ret int32
		return ret
	}
	return *o.AnneeEffectif
}

// GetAnneeEffectifOk returns a tuple with the AnneeEffectif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetAnneeEffectifOk() (*int32, bool) {
	if o == nil || IsNil(o.AnneeEffectif) {
		return nil, false
	}
	return o.AnneeEffectif, true
}

// HasAnneeEffectif returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasAnneeEffectif() bool {
	if o != nil && !IsNil(o.AnneeEffectif) {
		return true
	}

	return false
}

// SetAnneeEffectif gets a reference to the given int32 and assigns it to the AnneeEffectif field.
func (o *EntrepriseFiche) SetAnneeEffectif(v int32) {
	o.AnneeEffectif = &v
}

// GetCapital returns the Capital field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetCapital() float32 {
	if o == nil || IsNil(o.Capital) {
		var ret float32
		return ret
	}
	return *o.Capital
}

// GetCapitalOk returns a tuple with the Capital field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetCapitalOk() (*float32, bool) {
	if o == nil || IsNil(o.Capital) {
		return nil, false
	}
	return o.Capital, true
}

// HasCapital returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasCapital() bool {
	if o != nil && !IsNil(o.Capital) {
		return true
	}

	return false
}

// SetCapital gets a reference to the given float32 and assigns it to the Capital field.
func (o *EntrepriseFiche) SetCapital(v float32) {
	o.Capital = &v
}

// GetStatutRcs returns the StatutRcs field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetStatutRcs() string {
	if o == nil || IsNil(o.StatutRcs) {
		var ret string
		return ret
	}
	return *o.StatutRcs
}

// GetStatutRcsOk returns a tuple with the StatutRcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetStatutRcsOk() (*string, bool) {
	if o == nil || IsNil(o.StatutRcs) {
		return nil, false
	}
	return o.StatutRcs, true
}

// HasStatutRcs returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasStatutRcs() bool {
	if o != nil && !IsNil(o.StatutRcs) {
		return true
	}

	return false
}

// SetStatutRcs gets a reference to the given string and assigns it to the StatutRcs field.
func (o *EntrepriseFiche) SetStatutRcs(v string) {
	o.StatutRcs = &v
}

// GetSiege returns the Siege field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetSiege() EtablissementFiche {
	if o == nil || IsNil(o.Siege) {
		var ret EtablissementFiche
		return ret
	}
	return *o.Siege
}

// GetSiegeOk returns a tuple with the Siege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetSiegeOk() (*EtablissementFiche, bool) {
	if o == nil || IsNil(o.Siege) {
		return nil, false
	}
	return o.Siege, true
}

// HasSiege returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasSiege() bool {
	if o != nil && !IsNil(o.Siege) {
		return true
	}

	return false
}

// SetSiege gets a reference to the given EtablissementFiche and assigns it to the Siege field.
func (o *EntrepriseFiche) SetSiege(v EtablissementFiche) {
	o.Siege = &v
}

// GetDiffusable returns the Diffusable field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDiffusable() bool {
	if o == nil || IsNil(o.Diffusable) {
		var ret bool
		return ret
	}
	return *o.Diffusable
}

// GetDiffusableOk returns a tuple with the Diffusable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDiffusableOk() (*bool, bool) {
	if o == nil || IsNil(o.Diffusable) {
		return nil, false
	}
	return o.Diffusable, true
}

// HasDiffusable returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDiffusable() bool {
	if o != nil && !IsNil(o.Diffusable) {
		return true
	}

	return false
}

// SetDiffusable gets a reference to the given bool and assigns it to the Diffusable field.
func (o *EntrepriseFiche) SetDiffusable(v bool) {
	o.Diffusable = &v
}

// GetSigle returns the Sigle field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetSigle() string {
	if o == nil || IsNil(o.Sigle) {
		var ret string
		return ret
	}
	return *o.Sigle
}

// GetSigleOk returns a tuple with the Sigle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetSigleOk() (*string, bool) {
	if o == nil || IsNil(o.Sigle) {
		return nil, false
	}
	return o.Sigle, true
}

// HasSigle returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasSigle() bool {
	if o != nil && !IsNil(o.Sigle) {
		return true
	}

	return false
}

// SetSigle gets a reference to the given string and assigns it to the Sigle field.
func (o *EntrepriseFiche) SetSigle(v string) {
	o.Sigle = &v
}

// GetObjetSocial returns the ObjetSocial field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetObjetSocial() string {
	if o == nil || IsNil(o.ObjetSocial) {
		var ret string
		return ret
	}
	return *o.ObjetSocial
}

// GetObjetSocialOk returns a tuple with the ObjetSocial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetObjetSocialOk() (*string, bool) {
	if o == nil || IsNil(o.ObjetSocial) {
		return nil, false
	}
	return o.ObjetSocial, true
}

// HasObjetSocial returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasObjetSocial() bool {
	if o != nil && !IsNil(o.ObjetSocial) {
		return true
	}

	return false
}

// SetObjetSocial gets a reference to the given string and assigns it to the ObjetSocial field.
func (o *EntrepriseFiche) SetObjetSocial(v string) {
	o.ObjetSocial = &v
}

// GetCapitalFormate returns the CapitalFormate field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetCapitalFormate() string {
	if o == nil || IsNil(o.CapitalFormate) {
		var ret string
		return ret
	}
	return *o.CapitalFormate
}

// GetCapitalFormateOk returns a tuple with the CapitalFormate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetCapitalFormateOk() (*string, bool) {
	if o == nil || IsNil(o.CapitalFormate) {
		return nil, false
	}
	return o.CapitalFormate, true
}

// HasCapitalFormate returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasCapitalFormate() bool {
	if o != nil && !IsNil(o.CapitalFormate) {
		return true
	}

	return false
}

// SetCapitalFormate gets a reference to the given string and assigns it to the CapitalFormate field.
func (o *EntrepriseFiche) SetCapitalFormate(v string) {
	o.CapitalFormate = &v
}

// GetCapitalActuelSiVariable returns the CapitalActuelSiVariable field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetCapitalActuelSiVariable() string {
	if o == nil || IsNil(o.CapitalActuelSiVariable) {
		var ret string
		return ret
	}
	return *o.CapitalActuelSiVariable
}

// GetCapitalActuelSiVariableOk returns a tuple with the CapitalActuelSiVariable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetCapitalActuelSiVariableOk() (*string, bool) {
	if o == nil || IsNil(o.CapitalActuelSiVariable) {
		return nil, false
	}
	return o.CapitalActuelSiVariable, true
}

// HasCapitalActuelSiVariable returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasCapitalActuelSiVariable() bool {
	if o != nil && !IsNil(o.CapitalActuelSiVariable) {
		return true
	}

	return false
}

// SetCapitalActuelSiVariable gets a reference to the given string and assigns it to the CapitalActuelSiVariable field.
func (o *EntrepriseFiche) SetCapitalActuelSiVariable(v string) {
	o.CapitalActuelSiVariable = &v
}

// GetDeviseCapital returns the DeviseCapital field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDeviseCapital() string {
	if o == nil || IsNil(o.DeviseCapital) {
		var ret string
		return ret
	}
	return *o.DeviseCapital
}

// GetDeviseCapitalOk returns a tuple with the DeviseCapital field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDeviseCapitalOk() (*string, bool) {
	if o == nil || IsNil(o.DeviseCapital) {
		return nil, false
	}
	return o.DeviseCapital, true
}

// HasDeviseCapital returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDeviseCapital() bool {
	if o != nil && !IsNil(o.DeviseCapital) {
		return true
	}

	return false
}

// SetDeviseCapital gets a reference to the given string and assigns it to the DeviseCapital field.
func (o *EntrepriseFiche) SetDeviseCapital(v string) {
	o.DeviseCapital = &v
}

// GetNumeroRcs returns the NumeroRcs field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetNumeroRcs() string {
	if o == nil || IsNil(o.NumeroRcs) {
		var ret string
		return ret
	}
	return *o.NumeroRcs
}

// GetNumeroRcsOk returns a tuple with the NumeroRcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetNumeroRcsOk() (*string, bool) {
	if o == nil || IsNil(o.NumeroRcs) {
		return nil, false
	}
	return o.NumeroRcs, true
}

// HasNumeroRcs returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasNumeroRcs() bool {
	if o != nil && !IsNil(o.NumeroRcs) {
		return true
	}

	return false
}

// SetNumeroRcs gets a reference to the given string and assigns it to the NumeroRcs field.
func (o *EntrepriseFiche) SetNumeroRcs(v string) {
	o.NumeroRcs = &v
}

// GetDateClotureExercice returns the DateClotureExercice field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDateClotureExercice() string {
	if o == nil || IsNil(o.DateClotureExercice) {
		var ret string
		return ret
	}
	return *o.DateClotureExercice
}

// GetDateClotureExerciceOk returns a tuple with the DateClotureExercice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDateClotureExerciceOk() (*string, bool) {
	if o == nil || IsNil(o.DateClotureExercice) {
		return nil, false
	}
	return o.DateClotureExercice, true
}

// HasDateClotureExercice returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDateClotureExercice() bool {
	if o != nil && !IsNil(o.DateClotureExercice) {
		return true
	}

	return false
}

// SetDateClotureExercice gets a reference to the given string and assigns it to the DateClotureExercice field.
func (o *EntrepriseFiche) SetDateClotureExercice(v string) {
	o.DateClotureExercice = &v
}

// GetDateClotureExerciceExceptionnelle returns the DateClotureExerciceExceptionnelle field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDateClotureExerciceExceptionnelle() string {
	if o == nil || IsNil(o.DateClotureExerciceExceptionnelle) {
		var ret string
		return ret
	}
	return *o.DateClotureExerciceExceptionnelle
}

// GetDateClotureExerciceExceptionnelleOk returns a tuple with the DateClotureExerciceExceptionnelle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDateClotureExerciceExceptionnelleOk() (*string, bool) {
	if o == nil || IsNil(o.DateClotureExerciceExceptionnelle) {
		return nil, false
	}
	return o.DateClotureExerciceExceptionnelle, true
}

// HasDateClotureExerciceExceptionnelle returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDateClotureExerciceExceptionnelle() bool {
	if o != nil && !IsNil(o.DateClotureExerciceExceptionnelle) {
		return true
	}

	return false
}

// SetDateClotureExerciceExceptionnelle gets a reference to the given string and assigns it to the DateClotureExerciceExceptionnelle field.
func (o *EntrepriseFiche) SetDateClotureExerciceExceptionnelle(v string) {
	o.DateClotureExerciceExceptionnelle = &v
}

// GetDateClotureExerciceExceptionnelleFormate returns the DateClotureExerciceExceptionnelleFormate field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDateClotureExerciceExceptionnelleFormate() string {
	if o == nil || IsNil(o.DateClotureExerciceExceptionnelleFormate) {
		var ret string
		return ret
	}
	return *o.DateClotureExerciceExceptionnelleFormate
}

// GetDateClotureExerciceExceptionnelleFormateOk returns a tuple with the DateClotureExerciceExceptionnelleFormate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDateClotureExerciceExceptionnelleFormateOk() (*string, bool) {
	if o == nil || IsNil(o.DateClotureExerciceExceptionnelleFormate) {
		return nil, false
	}
	return o.DateClotureExerciceExceptionnelleFormate, true
}

// HasDateClotureExerciceExceptionnelleFormate returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDateClotureExerciceExceptionnelleFormate() bool {
	if o != nil && !IsNil(o.DateClotureExerciceExceptionnelleFormate) {
		return true
	}

	return false
}

// SetDateClotureExerciceExceptionnelleFormate gets a reference to the given string and assigns it to the DateClotureExerciceExceptionnelleFormate field.
func (o *EntrepriseFiche) SetDateClotureExerciceExceptionnelleFormate(v string) {
	o.DateClotureExerciceExceptionnelleFormate = &v
}

// GetProchaineDateClotureExercice returns the ProchaineDateClotureExercice field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetProchaineDateClotureExercice() string {
	if o == nil || IsNil(o.ProchaineDateClotureExercice) {
		var ret string
		return ret
	}
	return *o.ProchaineDateClotureExercice
}

// GetProchaineDateClotureExerciceOk returns a tuple with the ProchaineDateClotureExercice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetProchaineDateClotureExerciceOk() (*string, bool) {
	if o == nil || IsNil(o.ProchaineDateClotureExercice) {
		return nil, false
	}
	return o.ProchaineDateClotureExercice, true
}

// HasProchaineDateClotureExercice returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasProchaineDateClotureExercice() bool {
	if o != nil && !IsNil(o.ProchaineDateClotureExercice) {
		return true
	}

	return false
}

// SetProchaineDateClotureExercice gets a reference to the given string and assigns it to the ProchaineDateClotureExercice field.
func (o *EntrepriseFiche) SetProchaineDateClotureExercice(v string) {
	o.ProchaineDateClotureExercice = &v
}

// GetProchaineDateClotureExerciceFormate returns the ProchaineDateClotureExerciceFormate field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetProchaineDateClotureExerciceFormate() string {
	if o == nil || IsNil(o.ProchaineDateClotureExerciceFormate) {
		var ret string
		return ret
	}
	return *o.ProchaineDateClotureExerciceFormate
}

// GetProchaineDateClotureExerciceFormateOk returns a tuple with the ProchaineDateClotureExerciceFormate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetProchaineDateClotureExerciceFormateOk() (*string, bool) {
	if o == nil || IsNil(o.ProchaineDateClotureExerciceFormate) {
		return nil, false
	}
	return o.ProchaineDateClotureExerciceFormate, true
}

// HasProchaineDateClotureExerciceFormate returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasProchaineDateClotureExerciceFormate() bool {
	if o != nil && !IsNil(o.ProchaineDateClotureExerciceFormate) {
		return true
	}

	return false
}

// SetProchaineDateClotureExerciceFormate gets a reference to the given string and assigns it to the ProchaineDateClotureExerciceFormate field.
func (o *EntrepriseFiche) SetProchaineDateClotureExerciceFormate(v string) {
	o.ProchaineDateClotureExerciceFormate = &v
}

// GetEconomieSocialeSolidaire returns the EconomieSocialeSolidaire field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetEconomieSocialeSolidaire() bool {
	if o == nil || IsNil(o.EconomieSocialeSolidaire) {
		var ret bool
		return ret
	}
	return *o.EconomieSocialeSolidaire
}

// GetEconomieSocialeSolidaireOk returns a tuple with the EconomieSocialeSolidaire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetEconomieSocialeSolidaireOk() (*bool, bool) {
	if o == nil || IsNil(o.EconomieSocialeSolidaire) {
		return nil, false
	}
	return o.EconomieSocialeSolidaire, true
}

// HasEconomieSocialeSolidaire returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasEconomieSocialeSolidaire() bool {
	if o != nil && !IsNil(o.EconomieSocialeSolidaire) {
		return true
	}

	return false
}

// SetEconomieSocialeSolidaire gets a reference to the given bool and assigns it to the EconomieSocialeSolidaire field.
func (o *EntrepriseFiche) SetEconomieSocialeSolidaire(v bool) {
	o.EconomieSocialeSolidaire = &v
}

// GetDureePersonneMorale returns the DureePersonneMorale field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDureePersonneMorale() string {
	if o == nil || IsNil(o.DureePersonneMorale) {
		var ret string
		return ret
	}
	return *o.DureePersonneMorale
}

// GetDureePersonneMoraleOk returns a tuple with the DureePersonneMorale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDureePersonneMoraleOk() (*string, bool) {
	if o == nil || IsNil(o.DureePersonneMorale) {
		return nil, false
	}
	return o.DureePersonneMorale, true
}

// HasDureePersonneMorale returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDureePersonneMorale() bool {
	if o != nil && !IsNil(o.DureePersonneMorale) {
		return true
	}

	return false
}

// SetDureePersonneMorale gets a reference to the given string and assigns it to the DureePersonneMorale field.
func (o *EntrepriseFiche) SetDureePersonneMorale(v string) {
	o.DureePersonneMorale = &v
}

// GetDernierTraitement returns the DernierTraitement field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDernierTraitement() string {
	if o == nil || IsNil(o.DernierTraitement) {
		var ret string
		return ret
	}
	return *o.DernierTraitement
}

// GetDernierTraitementOk returns a tuple with the DernierTraitement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDernierTraitementOk() (*string, bool) {
	if o == nil || IsNil(o.DernierTraitement) {
		return nil, false
	}
	return o.DernierTraitement, true
}

// HasDernierTraitement returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDernierTraitement() bool {
	if o != nil && !IsNil(o.DernierTraitement) {
		return true
	}

	return false
}

// SetDernierTraitement gets a reference to the given string and assigns it to the DernierTraitement field.
func (o *EntrepriseFiche) SetDernierTraitement(v string) {
	o.DernierTraitement = &v
}

// GetDerniereMiseAJourSirene returns the DerniereMiseAJourSirene field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDerniereMiseAJourSirene() string {
	if o == nil || IsNil(o.DerniereMiseAJourSirene) {
		var ret string
		return ret
	}
	return *o.DerniereMiseAJourSirene
}

// GetDerniereMiseAJourSireneOk returns a tuple with the DerniereMiseAJourSirene field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDerniereMiseAJourSireneOk() (*string, bool) {
	if o == nil || IsNil(o.DerniereMiseAJourSirene) {
		return nil, false
	}
	return o.DerniereMiseAJourSirene, true
}

// HasDerniereMiseAJourSirene returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDerniereMiseAJourSirene() bool {
	if o != nil && !IsNil(o.DerniereMiseAJourSirene) {
		return true
	}

	return false
}

// SetDerniereMiseAJourSirene gets a reference to the given string and assigns it to the DerniereMiseAJourSirene field.
func (o *EntrepriseFiche) SetDerniereMiseAJourSirene(v string) {
	o.DerniereMiseAJourSirene = &v
}

// GetDerniereMiseAJourRcs returns the DerniereMiseAJourRcs field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDerniereMiseAJourRcs() string {
	if o == nil || IsNil(o.DerniereMiseAJourRcs) {
		var ret string
		return ret
	}
	return *o.DerniereMiseAJourRcs
}

// GetDerniereMiseAJourRcsOk returns a tuple with the DerniereMiseAJourRcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDerniereMiseAJourRcsOk() (*string, bool) {
	if o == nil || IsNil(o.DerniereMiseAJourRcs) {
		return nil, false
	}
	return o.DerniereMiseAJourRcs, true
}

// HasDerniereMiseAJourRcs returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDerniereMiseAJourRcs() bool {
	if o != nil && !IsNil(o.DerniereMiseAJourRcs) {
		return true
	}

	return false
}

// SetDerniereMiseAJourRcs gets a reference to the given string and assigns it to the DerniereMiseAJourRcs field.
func (o *EntrepriseFiche) SetDerniereMiseAJourRcs(v string) {
	o.DerniereMiseAJourRcs = &v
}

// GetGreffe returns the Greffe field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetGreffe() string {
	if o == nil || IsNil(o.Greffe) {
		var ret string
		return ret
	}
	return *o.Greffe
}

// GetGreffeOk returns a tuple with the Greffe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetGreffeOk() (*string, bool) {
	if o == nil || IsNil(o.Greffe) {
		return nil, false
	}
	return o.Greffe, true
}

// HasGreffe returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasGreffe() bool {
	if o != nil && !IsNil(o.Greffe) {
		return true
	}

	return false
}

// SetGreffe gets a reference to the given string and assigns it to the Greffe field.
func (o *EntrepriseFiche) SetGreffe(v string) {
	o.Greffe = &v
}

// GetCodeGreffe returns the CodeGreffe field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetCodeGreffe() string {
	if o == nil || IsNil(o.CodeGreffe) {
		var ret string
		return ret
	}
	return *o.CodeGreffe
}

// GetCodeGreffeOk returns a tuple with the CodeGreffe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetCodeGreffeOk() (*string, bool) {
	if o == nil || IsNil(o.CodeGreffe) {
		return nil, false
	}
	return o.CodeGreffe, true
}

// HasCodeGreffe returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasCodeGreffe() bool {
	if o != nil && !IsNil(o.CodeGreffe) {
		return true
	}

	return false
}

// SetCodeGreffe gets a reference to the given string and assigns it to the CodeGreffe field.
func (o *EntrepriseFiche) SetCodeGreffe(v string) {
	o.CodeGreffe = &v
}

// GetDateImmatriculationRcs returns the DateImmatriculationRcs field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDateImmatriculationRcs() string {
	if o == nil || IsNil(o.DateImmatriculationRcs) {
		var ret string
		return ret
	}
	return *o.DateImmatriculationRcs
}

// GetDateImmatriculationRcsOk returns a tuple with the DateImmatriculationRcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDateImmatriculationRcsOk() (*string, bool) {
	if o == nil || IsNil(o.DateImmatriculationRcs) {
		return nil, false
	}
	return o.DateImmatriculationRcs, true
}

// HasDateImmatriculationRcs returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDateImmatriculationRcs() bool {
	if o != nil && !IsNil(o.DateImmatriculationRcs) {
		return true
	}

	return false
}

// SetDateImmatriculationRcs gets a reference to the given string and assigns it to the DateImmatriculationRcs field.
func (o *EntrepriseFiche) SetDateImmatriculationRcs(v string) {
	o.DateImmatriculationRcs = &v
}

// GetDatePremiereImmatriculationRcs returns the DatePremiereImmatriculationRcs field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDatePremiereImmatriculationRcs() string {
	if o == nil || IsNil(o.DatePremiereImmatriculationRcs) {
		var ret string
		return ret
	}
	return *o.DatePremiereImmatriculationRcs
}

// GetDatePremiereImmatriculationRcsOk returns a tuple with the DatePremiereImmatriculationRcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDatePremiereImmatriculationRcsOk() (*string, bool) {
	if o == nil || IsNil(o.DatePremiereImmatriculationRcs) {
		return nil, false
	}
	return o.DatePremiereImmatriculationRcs, true
}

// HasDatePremiereImmatriculationRcs returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDatePremiereImmatriculationRcs() bool {
	if o != nil && !IsNil(o.DatePremiereImmatriculationRcs) {
		return true
	}

	return false
}

// SetDatePremiereImmatriculationRcs gets a reference to the given string and assigns it to the DatePremiereImmatriculationRcs field.
func (o *EntrepriseFiche) SetDatePremiereImmatriculationRcs(v string) {
	o.DatePremiereImmatriculationRcs = &v
}

// GetDateDebutActivite returns the DateDebutActivite field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDateDebutActivite() string {
	if o == nil || IsNil(o.DateDebutActivite) {
		var ret string
		return ret
	}
	return *o.DateDebutActivite
}

// GetDateDebutActiviteOk returns a tuple with the DateDebutActivite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDateDebutActiviteOk() (*string, bool) {
	if o == nil || IsNil(o.DateDebutActivite) {
		return nil, false
	}
	return o.DateDebutActivite, true
}

// HasDateDebutActivite returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDateDebutActivite() bool {
	if o != nil && !IsNil(o.DateDebutActivite) {
		return true
	}

	return false
}

// SetDateDebutActivite gets a reference to the given string and assigns it to the DateDebutActivite field.
func (o *EntrepriseFiche) SetDateDebutActivite(v string) {
	o.DateDebutActivite = &v
}

// GetDateDebutPremiereActivite returns the DateDebutPremiereActivite field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDateDebutPremiereActivite() string {
	if o == nil || IsNil(o.DateDebutPremiereActivite) {
		var ret string
		return ret
	}
	return *o.DateDebutPremiereActivite
}

// GetDateDebutPremiereActiviteOk returns a tuple with the DateDebutPremiereActivite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDateDebutPremiereActiviteOk() (*string, bool) {
	if o == nil || IsNil(o.DateDebutPremiereActivite) {
		return nil, false
	}
	return o.DateDebutPremiereActivite, true
}

// HasDateDebutPremiereActivite returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDateDebutPremiereActivite() bool {
	if o != nil && !IsNil(o.DateDebutPremiereActivite) {
		return true
	}

	return false
}

// SetDateDebutPremiereActivite gets a reference to the given string and assigns it to the DateDebutPremiereActivite field.
func (o *EntrepriseFiche) SetDateDebutPremiereActivite(v string) {
	o.DateDebutPremiereActivite = &v
}

// GetDateRadiationRcs returns the DateRadiationRcs field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDateRadiationRcs() string {
	if o == nil || IsNil(o.DateRadiationRcs) {
		var ret string
		return ret
	}
	return *o.DateRadiationRcs
}

// GetDateRadiationRcsOk returns a tuple with the DateRadiationRcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDateRadiationRcsOk() (*string, bool) {
	if o == nil || IsNil(o.DateRadiationRcs) {
		return nil, false
	}
	return o.DateRadiationRcs, true
}

// HasDateRadiationRcs returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDateRadiationRcs() bool {
	if o != nil && !IsNil(o.DateRadiationRcs) {
		return true
	}

	return false
}

// SetDateRadiationRcs gets a reference to the given string and assigns it to the DateRadiationRcs field.
func (o *EntrepriseFiche) SetDateRadiationRcs(v string) {
	o.DateRadiationRcs = &v
}

// GetStatutRne returns the StatutRne field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetStatutRne() string {
	if o == nil || IsNil(o.StatutRne) {
		var ret string
		return ret
	}
	return *o.StatutRne
}

// GetStatutRneOk returns a tuple with the StatutRne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetStatutRneOk() (*string, bool) {
	if o == nil || IsNil(o.StatutRne) {
		return nil, false
	}
	return o.StatutRne, true
}

// HasStatutRne returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasStatutRne() bool {
	if o != nil && !IsNil(o.StatutRne) {
		return true
	}

	return false
}

// SetStatutRne gets a reference to the given string and assigns it to the StatutRne field.
func (o *EntrepriseFiche) SetStatutRne(v string) {
	o.StatutRne = &v
}

// GetDateImmatriculationRne returns the DateImmatriculationRne field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDateImmatriculationRne() string {
	if o == nil || IsNil(o.DateImmatriculationRne) {
		var ret string
		return ret
	}
	return *o.DateImmatriculationRne
}

// GetDateImmatriculationRneOk returns a tuple with the DateImmatriculationRne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDateImmatriculationRneOk() (*string, bool) {
	if o == nil || IsNil(o.DateImmatriculationRne) {
		return nil, false
	}
	return o.DateImmatriculationRne, true
}

// HasDateImmatriculationRne returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDateImmatriculationRne() bool {
	if o != nil && !IsNil(o.DateImmatriculationRne) {
		return true
	}

	return false
}

// SetDateImmatriculationRne gets a reference to the given string and assigns it to the DateImmatriculationRne field.
func (o *EntrepriseFiche) SetDateImmatriculationRne(v string) {
	o.DateImmatriculationRne = &v
}

// GetDateRadiationRne returns the DateRadiationRne field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDateRadiationRne() string {
	if o == nil || IsNil(o.DateRadiationRne) {
		var ret string
		return ret
	}
	return *o.DateRadiationRne
}

// GetDateRadiationRneOk returns a tuple with the DateRadiationRne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDateRadiationRneOk() (*string, bool) {
	if o == nil || IsNil(o.DateRadiationRne) {
		return nil, false
	}
	return o.DateRadiationRne, true
}

// HasDateRadiationRne returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDateRadiationRne() bool {
	if o != nil && !IsNil(o.DateRadiationRne) {
		return true
	}

	return false
}

// SetDateRadiationRne gets a reference to the given string and assigns it to the DateRadiationRne field.
func (o *EntrepriseFiche) SetDateRadiationRne(v string) {
	o.DateRadiationRne = &v
}

// GetNumeroTvaIntracommunautaire returns the NumeroTvaIntracommunautaire field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetNumeroTvaIntracommunautaire() string {
	if o == nil || IsNil(o.NumeroTvaIntracommunautaire) {
		var ret string
		return ret
	}
	return *o.NumeroTvaIntracommunautaire
}

// GetNumeroTvaIntracommunautaireOk returns a tuple with the NumeroTvaIntracommunautaire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetNumeroTvaIntracommunautaireOk() (*string, bool) {
	if o == nil || IsNil(o.NumeroTvaIntracommunautaire) {
		return nil, false
	}
	return o.NumeroTvaIntracommunautaire, true
}

// HasNumeroTvaIntracommunautaire returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasNumeroTvaIntracommunautaire() bool {
	if o != nil && !IsNil(o.NumeroTvaIntracommunautaire) {
		return true
	}

	return false
}

// SetNumeroTvaIntracommunautaire gets a reference to the given string and assigns it to the NumeroTvaIntracommunautaire field.
func (o *EntrepriseFiche) SetNumeroTvaIntracommunautaire(v string) {
	o.NumeroTvaIntracommunautaire = &v
}

// GetValiditeTvaIntracommunautaire returns the ValiditeTvaIntracommunautaire field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetValiditeTvaIntracommunautaire() bool {
	if o == nil || IsNil(o.ValiditeTvaIntracommunautaire) {
		var ret bool
		return ret
	}
	return *o.ValiditeTvaIntracommunautaire
}

// GetValiditeTvaIntracommunautaireOk returns a tuple with the ValiditeTvaIntracommunautaire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetValiditeTvaIntracommunautaireOk() (*bool, bool) {
	if o == nil || IsNil(o.ValiditeTvaIntracommunautaire) {
		return nil, false
	}
	return o.ValiditeTvaIntracommunautaire, true
}

// HasValiditeTvaIntracommunautaire returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasValiditeTvaIntracommunautaire() bool {
	if o != nil && !IsNil(o.ValiditeTvaIntracommunautaire) {
		return true
	}

	return false
}

// SetValiditeTvaIntracommunautaire gets a reference to the given bool and assigns it to the ValiditeTvaIntracommunautaire field.
func (o *EntrepriseFiche) SetValiditeTvaIntracommunautaire(v bool) {
	o.ValiditeTvaIntracommunautaire = &v
}

// GetAssocieUnique returns the AssocieUnique field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetAssocieUnique() bool {
	if o == nil || IsNil(o.AssocieUnique) {
		var ret bool
		return ret
	}
	return *o.AssocieUnique
}

// GetAssocieUniqueOk returns a tuple with the AssocieUnique field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetAssocieUniqueOk() (*bool, bool) {
	if o == nil || IsNil(o.AssocieUnique) {
		return nil, false
	}
	return o.AssocieUnique, true
}

// HasAssocieUnique returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasAssocieUnique() bool {
	if o != nil && !IsNil(o.AssocieUnique) {
		return true
	}

	return false
}

// SetAssocieUnique gets a reference to the given bool and assigns it to the AssocieUnique field.
func (o *EntrepriseFiche) SetAssocieUnique(v bool) {
	o.AssocieUnique = &v
}

// GetEtablissements returns the Etablissements field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetEtablissements() []EtablissementFiche {
	if o == nil || IsNil(o.Etablissements) {
		var ret []EtablissementFiche
		return ret
	}
	return o.Etablissements
}

// GetEtablissementsOk returns a tuple with the Etablissements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetEtablissementsOk() ([]EtablissementFiche, bool) {
	if o == nil || IsNil(o.Etablissements) {
		return nil, false
	}
	return o.Etablissements, true
}

// HasEtablissements returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasEtablissements() bool {
	if o != nil && !IsNil(o.Etablissements) {
		return true
	}

	return false
}

// SetEtablissements gets a reference to the given []EtablissementFiche and assigns it to the Etablissements field.
func (o *EntrepriseFiche) SetEtablissements(v []EtablissementFiche) {
	o.Etablissements = v
}

// GetEtablissement returns the Etablissement field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetEtablissement() EntrepriseFicheAllOfEtablissement {
	if o == nil || IsNil(o.Etablissement) {
		var ret EntrepriseFicheAllOfEtablissement
		return ret
	}
	return *o.Etablissement
}

// GetEtablissementOk returns a tuple with the Etablissement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetEtablissementOk() (*EntrepriseFicheAllOfEtablissement, bool) {
	if o == nil || IsNil(o.Etablissement) {
		return nil, false
	}
	return o.Etablissement, true
}

// HasEtablissement returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasEtablissement() bool {
	if o != nil && !IsNil(o.Etablissement) {
		return true
	}

	return false
}

// SetEtablissement gets a reference to the given EntrepriseFicheAllOfEtablissement and assigns it to the Etablissement field.
func (o *EntrepriseFiche) SetEtablissement(v EntrepriseFicheAllOfEtablissement) {
	o.Etablissement = &v
}

// GetFinances returns the Finances field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetFinances() []EntrepriseFicheAllOfFinances {
	if o == nil || IsNil(o.Finances) {
		var ret []EntrepriseFicheAllOfFinances
		return ret
	}
	return o.Finances
}

// GetFinancesOk returns a tuple with the Finances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetFinancesOk() ([]EntrepriseFicheAllOfFinances, bool) {
	if o == nil || IsNil(o.Finances) {
		return nil, false
	}
	return o.Finances, true
}

// HasFinances returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasFinances() bool {
	if o != nil && !IsNil(o.Finances) {
		return true
	}

	return false
}

// SetFinances gets a reference to the given []EntrepriseFicheAllOfFinances and assigns it to the Finances field.
func (o *EntrepriseFiche) SetFinances(v []EntrepriseFicheAllOfFinances) {
	o.Finances = v
}

// GetRepresentants returns the Representants field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetRepresentants() []RepresentantEntreprise {
	if o == nil || IsNil(o.Representants) {
		var ret []RepresentantEntreprise
		return ret
	}
	return o.Representants
}

// GetRepresentantsOk returns a tuple with the Representants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetRepresentantsOk() ([]RepresentantEntreprise, bool) {
	if o == nil || IsNil(o.Representants) {
		return nil, false
	}
	return o.Representants, true
}

// HasRepresentants returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasRepresentants() bool {
	if o != nil && !IsNil(o.Representants) {
		return true
	}

	return false
}

// SetRepresentants gets a reference to the given []RepresentantEntreprise and assigns it to the Representants field.
func (o *EntrepriseFiche) SetRepresentants(v []RepresentantEntreprise) {
	o.Representants = v
}

// GetBeneficiairesEffectifs returns the BeneficiairesEffectifs field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetBeneficiairesEffectifs() []EntrepriseFicheAllOfBeneficiairesEffectifs {
	if o == nil || IsNil(o.BeneficiairesEffectifs) {
		var ret []EntrepriseFicheAllOfBeneficiairesEffectifs
		return ret
	}
	return o.BeneficiairesEffectifs
}

// GetBeneficiairesEffectifsOk returns a tuple with the BeneficiairesEffectifs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetBeneficiairesEffectifsOk() ([]EntrepriseFicheAllOfBeneficiairesEffectifs, bool) {
	if o == nil || IsNil(o.BeneficiairesEffectifs) {
		return nil, false
	}
	return o.BeneficiairesEffectifs, true
}

// HasBeneficiairesEffectifs returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasBeneficiairesEffectifs() bool {
	if o != nil && !IsNil(o.BeneficiairesEffectifs) {
		return true
	}

	return false
}

// SetBeneficiairesEffectifs gets a reference to the given []EntrepriseFicheAllOfBeneficiairesEffectifs and assigns it to the BeneficiairesEffectifs field.
func (o *EntrepriseFiche) SetBeneficiairesEffectifs(v []EntrepriseFicheAllOfBeneficiairesEffectifs) {
	o.BeneficiairesEffectifs = v
}

// GetDepotsActes returns the DepotsActes field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDepotsActes() []EntrepriseFicheAllOfDepotsActes {
	if o == nil || IsNil(o.DepotsActes) {
		var ret []EntrepriseFicheAllOfDepotsActes
		return ret
	}
	return o.DepotsActes
}

// GetDepotsActesOk returns a tuple with the DepotsActes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDepotsActesOk() ([]EntrepriseFicheAllOfDepotsActes, bool) {
	if o == nil || IsNil(o.DepotsActes) {
		return nil, false
	}
	return o.DepotsActes, true
}

// HasDepotsActes returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDepotsActes() bool {
	if o != nil && !IsNil(o.DepotsActes) {
		return true
	}

	return false
}

// SetDepotsActes gets a reference to the given []EntrepriseFicheAllOfDepotsActes and assigns it to the DepotsActes field.
func (o *EntrepriseFiche) SetDepotsActes(v []EntrepriseFicheAllOfDepotsActes) {
	o.DepotsActes = v
}

// GetComptes returns the Comptes field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetComptes() []EntrepriseFicheAllOfComptes {
	if o == nil || IsNil(o.Comptes) {
		var ret []EntrepriseFicheAllOfComptes
		return ret
	}
	return o.Comptes
}

// GetComptesOk returns a tuple with the Comptes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetComptesOk() ([]EntrepriseFicheAllOfComptes, bool) {
	if o == nil || IsNil(o.Comptes) {
		return nil, false
	}
	return o.Comptes, true
}

// HasComptes returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasComptes() bool {
	if o != nil && !IsNil(o.Comptes) {
		return true
	}

	return false
}

// SetComptes gets a reference to the given []EntrepriseFicheAllOfComptes and assigns it to the Comptes field.
func (o *EntrepriseFiche) SetComptes(v []EntrepriseFicheAllOfComptes) {
	o.Comptes = v
}

// GetPublicationsBodacc returns the PublicationsBodacc field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetPublicationsBodacc() []Bodacc {
	if o == nil || IsNil(o.PublicationsBodacc) {
		var ret []Bodacc
		return ret
	}
	return o.PublicationsBodacc
}

// GetPublicationsBodaccOk returns a tuple with the PublicationsBodacc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetPublicationsBodaccOk() ([]Bodacc, bool) {
	if o == nil || IsNil(o.PublicationsBodacc) {
		return nil, false
	}
	return o.PublicationsBodacc, true
}

// HasPublicationsBodacc returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasPublicationsBodacc() bool {
	if o != nil && !IsNil(o.PublicationsBodacc) {
		return true
	}

	return false
}

// SetPublicationsBodacc gets a reference to the given []Bodacc and assigns it to the PublicationsBodacc field.
func (o *EntrepriseFiche) SetPublicationsBodacc(v []Bodacc) {
	o.PublicationsBodacc = v
}

// GetProceduresCollectives returns the ProceduresCollectives field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetProceduresCollectives() []EntrepriseFicheAllOfProceduresCollectives {
	if o == nil || IsNil(o.ProceduresCollectives) {
		var ret []EntrepriseFicheAllOfProceduresCollectives
		return ret
	}
	return o.ProceduresCollectives
}

// GetProceduresCollectivesOk returns a tuple with the ProceduresCollectives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetProceduresCollectivesOk() ([]EntrepriseFicheAllOfProceduresCollectives, bool) {
	if o == nil || IsNil(o.ProceduresCollectives) {
		return nil, false
	}
	return o.ProceduresCollectives, true
}

// HasProceduresCollectives returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasProceduresCollectives() bool {
	if o != nil && !IsNil(o.ProceduresCollectives) {
		return true
	}

	return false
}

// SetProceduresCollectives gets a reference to the given []EntrepriseFicheAllOfProceduresCollectives and assigns it to the ProceduresCollectives field.
func (o *EntrepriseFiche) SetProceduresCollectives(v []EntrepriseFicheAllOfProceduresCollectives) {
	o.ProceduresCollectives = v
}

// GetProcedureCollectiveExiste returns the ProcedureCollectiveExiste field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetProcedureCollectiveExiste() bool {
	if o == nil || IsNil(o.ProcedureCollectiveExiste) {
		var ret bool
		return ret
	}
	return *o.ProcedureCollectiveExiste
}

// GetProcedureCollectiveExisteOk returns a tuple with the ProcedureCollectiveExiste field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetProcedureCollectiveExisteOk() (*bool, bool) {
	if o == nil || IsNil(o.ProcedureCollectiveExiste) {
		return nil, false
	}
	return o.ProcedureCollectiveExiste, true
}

// HasProcedureCollectiveExiste returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasProcedureCollectiveExiste() bool {
	if o != nil && !IsNil(o.ProcedureCollectiveExiste) {
		return true
	}

	return false
}

// SetProcedureCollectiveExiste gets a reference to the given bool and assigns it to the ProcedureCollectiveExiste field.
func (o *EntrepriseFiche) SetProcedureCollectiveExiste(v bool) {
	o.ProcedureCollectiveExiste = &v
}

// GetProcedureCollectiveEnCours returns the ProcedureCollectiveEnCours field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetProcedureCollectiveEnCours() bool {
	if o == nil || IsNil(o.ProcedureCollectiveEnCours) {
		var ret bool
		return ret
	}
	return *o.ProcedureCollectiveEnCours
}

// GetProcedureCollectiveEnCoursOk returns a tuple with the ProcedureCollectiveEnCours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetProcedureCollectiveEnCoursOk() (*bool, bool) {
	if o == nil || IsNil(o.ProcedureCollectiveEnCours) {
		return nil, false
	}
	return o.ProcedureCollectiveEnCours, true
}

// HasProcedureCollectiveEnCours returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasProcedureCollectiveEnCours() bool {
	if o != nil && !IsNil(o.ProcedureCollectiveEnCours) {
		return true
	}

	return false
}

// SetProcedureCollectiveEnCours gets a reference to the given bool and assigns it to the ProcedureCollectiveEnCours field.
func (o *EntrepriseFiche) SetProcedureCollectiveEnCours(v bool) {
	o.ProcedureCollectiveEnCours = &v
}

// GetDerniersStatuts returns the DerniersStatuts field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetDerniersStatuts() EntrepriseFicheAllOfDerniersStatuts {
	if o == nil || IsNil(o.DerniersStatuts) {
		var ret EntrepriseFicheAllOfDerniersStatuts
		return ret
	}
	return *o.DerniersStatuts
}

// GetDerniersStatutsOk returns a tuple with the DerniersStatuts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetDerniersStatutsOk() (*EntrepriseFicheAllOfDerniersStatuts, bool) {
	if o == nil || IsNil(o.DerniersStatuts) {
		return nil, false
	}
	return o.DerniersStatuts, true
}

// HasDerniersStatuts returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasDerniersStatuts() bool {
	if o != nil && !IsNil(o.DerniersStatuts) {
		return true
	}

	return false
}

// SetDerniersStatuts gets a reference to the given EntrepriseFicheAllOfDerniersStatuts and assigns it to the DerniersStatuts field.
func (o *EntrepriseFiche) SetDerniersStatuts(v EntrepriseFicheAllOfDerniersStatuts) {
	o.DerniersStatuts = &v
}

// GetExtraitImmatriculation returns the ExtraitImmatriculation field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetExtraitImmatriculation() EntrepriseFicheAllOfExtraitImmatriculation {
	if o == nil || IsNil(o.ExtraitImmatriculation) {
		var ret EntrepriseFicheAllOfExtraitImmatriculation
		return ret
	}
	return *o.ExtraitImmatriculation
}

// GetExtraitImmatriculationOk returns a tuple with the ExtraitImmatriculation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetExtraitImmatriculationOk() (*EntrepriseFicheAllOfExtraitImmatriculation, bool) {
	if o == nil || IsNil(o.ExtraitImmatriculation) {
		return nil, false
	}
	return o.ExtraitImmatriculation, true
}

// HasExtraitImmatriculation returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasExtraitImmatriculation() bool {
	if o != nil && !IsNil(o.ExtraitImmatriculation) {
		return true
	}

	return false
}

// SetExtraitImmatriculation gets a reference to the given EntrepriseFicheAllOfExtraitImmatriculation and assigns it to the ExtraitImmatriculation field.
func (o *EntrepriseFiche) SetExtraitImmatriculation(v EntrepriseFicheAllOfExtraitImmatriculation) {
	o.ExtraitImmatriculation = &v
}

// GetRnm returns the Rnm field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetRnm() EntrepriseFicheAllOfRnm {
	if o == nil || IsNil(o.Rnm) {
		var ret EntrepriseFicheAllOfRnm
		return ret
	}
	return *o.Rnm
}

// GetRnmOk returns a tuple with the Rnm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetRnmOk() (*EntrepriseFicheAllOfRnm, bool) {
	if o == nil || IsNil(o.Rnm) {
		return nil, false
	}
	return o.Rnm, true
}

// HasRnm returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasRnm() bool {
	if o != nil && !IsNil(o.Rnm) {
		return true
	}

	return false
}

// SetRnm gets a reference to the given EntrepriseFicheAllOfRnm and assigns it to the Rnm field.
func (o *EntrepriseFiche) SetRnm(v EntrepriseFicheAllOfRnm) {
	o.Rnm = &v
}

// GetMarques returns the Marques field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetMarques() []EntrepriseFicheAllOfMarques {
	if o == nil || IsNil(o.Marques) {
		var ret []EntrepriseFicheAllOfMarques
		return ret
	}
	return o.Marques
}

// GetMarquesOk returns a tuple with the Marques field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetMarquesOk() ([]EntrepriseFicheAllOfMarques, bool) {
	if o == nil || IsNil(o.Marques) {
		return nil, false
	}
	return o.Marques, true
}

// HasMarques returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasMarques() bool {
	if o != nil && !IsNil(o.Marques) {
		return true
	}

	return false
}

// SetMarques gets a reference to the given []EntrepriseFicheAllOfMarques and assigns it to the Marques field.
func (o *EntrepriseFiche) SetMarques(v []EntrepriseFicheAllOfMarques) {
	o.Marques = v
}

// GetAssociation returns the Association field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetAssociation() Association {
	if o == nil || IsNil(o.Association) {
		var ret Association
		return ret
	}
	return *o.Association
}

// GetAssociationOk returns a tuple with the Association field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetAssociationOk() (*Association, bool) {
	if o == nil || IsNil(o.Association) {
		return nil, false
	}
	return o.Association, true
}

// HasAssociation returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasAssociation() bool {
	if o != nil && !IsNil(o.Association) {
		return true
	}

	return false
}

// SetAssociation gets a reference to the given Association and assigns it to the Association field.
func (o *EntrepriseFiche) SetAssociation(v Association) {
	o.Association = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetLabels() []Labels {
	if o == nil || IsNil(o.Labels) {
		var ret []Labels
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetLabelsOk() ([]Labels, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []Labels and assigns it to the Labels field.
func (o *EntrepriseFiche) SetLabels(v []Labels) {
	o.Labels = v
}

// GetSitesInternet returns the SitesInternet field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetSitesInternet() []string {
	if o == nil || IsNil(o.SitesInternet) {
		var ret []string
		return ret
	}
	return o.SitesInternet
}

// GetSitesInternetOk returns a tuple with the SitesInternet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetSitesInternetOk() ([]string, bool) {
	if o == nil || IsNil(o.SitesInternet) {
		return nil, false
	}
	return o.SitesInternet, true
}

// HasSitesInternet returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasSitesInternet() bool {
	if o != nil && !IsNil(o.SitesInternet) {
		return true
	}

	return false
}

// SetSitesInternet gets a reference to the given []string and assigns it to the SitesInternet field.
func (o *EntrepriseFiche) SetSitesInternet(v []string) {
	o.SitesInternet = v
}

// GetTelephone returns the Telephone field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetTelephone() string {
	if o == nil || IsNil(o.Telephone) {
		var ret string
		return ret
	}
	return *o.Telephone
}

// GetTelephoneOk returns a tuple with the Telephone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetTelephoneOk() (*string, bool) {
	if o == nil || IsNil(o.Telephone) {
		return nil, false
	}
	return o.Telephone, true
}

// HasTelephone returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasTelephone() bool {
	if o != nil && !IsNil(o.Telephone) {
		return true
	}

	return false
}

// SetTelephone gets a reference to the given string and assigns it to the Telephone field.
func (o *EntrepriseFiche) SetTelephone(v string) {
	o.Telephone = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *EntrepriseFiche) SetEmail(v string) {
	o.Email = &v
}

// GetScoringNonFinancier returns the ScoringNonFinancier field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetScoringNonFinancier() ScoringNonFinancier {
	if o == nil || IsNil(o.ScoringNonFinancier) {
		var ret ScoringNonFinancier
		return ret
	}
	return *o.ScoringNonFinancier
}

// GetScoringNonFinancierOk returns a tuple with the ScoringNonFinancier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetScoringNonFinancierOk() (*ScoringNonFinancier, bool) {
	if o == nil || IsNil(o.ScoringNonFinancier) {
		return nil, false
	}
	return o.ScoringNonFinancier, true
}

// HasScoringNonFinancier returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasScoringNonFinancier() bool {
	if o != nil && !IsNil(o.ScoringNonFinancier) {
		return true
	}

	return false
}

// SetScoringNonFinancier gets a reference to the given ScoringNonFinancier and assigns it to the ScoringNonFinancier field.
func (o *EntrepriseFiche) SetScoringNonFinancier(v ScoringNonFinancier) {
	o.ScoringNonFinancier = &v
}

// GetScoringFinancier returns the ScoringFinancier field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetScoringFinancier() ScoringFinancier {
	if o == nil || IsNil(o.ScoringFinancier) {
		var ret ScoringFinancier
		return ret
	}
	return *o.ScoringFinancier
}

// GetScoringFinancierOk returns a tuple with the ScoringFinancier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetScoringFinancierOk() (*ScoringFinancier, bool) {
	if o == nil || IsNil(o.ScoringFinancier) {
		return nil, false
	}
	return o.ScoringFinancier, true
}

// HasScoringFinancier returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasScoringFinancier() bool {
	if o != nil && !IsNil(o.ScoringFinancier) {
		return true
	}

	return false
}

// SetScoringFinancier gets a reference to the given ScoringFinancier and assigns it to the ScoringFinancier field.
func (o *EntrepriseFiche) SetScoringFinancier(v ScoringFinancier) {
	o.ScoringFinancier = &v
}

// GetCategorieEntreprise returns the CategorieEntreprise field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetCategorieEntreprise() string {
	if o == nil || IsNil(o.CategorieEntreprise) {
		var ret string
		return ret
	}
	return *o.CategorieEntreprise
}

// GetCategorieEntrepriseOk returns a tuple with the CategorieEntreprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetCategorieEntrepriseOk() (*string, bool) {
	if o == nil || IsNil(o.CategorieEntreprise) {
		return nil, false
	}
	return o.CategorieEntreprise, true
}

// HasCategorieEntreprise returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasCategorieEntreprise() bool {
	if o != nil && !IsNil(o.CategorieEntreprise) {
		return true
	}

	return false
}

// SetCategorieEntreprise gets a reference to the given string and assigns it to the CategorieEntreprise field.
func (o *EntrepriseFiche) SetCategorieEntreprise(v string) {
	o.CategorieEntreprise = &v
}

// GetAnneeCategorieEntreprise returns the AnneeCategorieEntreprise field value if set, zero value otherwise.
func (o *EntrepriseFiche) GetAnneeCategorieEntreprise() int32 {
	if o == nil || IsNil(o.AnneeCategorieEntreprise) {
		var ret int32
		return ret
	}
	return *o.AnneeCategorieEntreprise
}

// GetAnneeCategorieEntrepriseOk returns a tuple with the AnneeCategorieEntreprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFiche) GetAnneeCategorieEntrepriseOk() (*int32, bool) {
	if o == nil || IsNil(o.AnneeCategorieEntreprise) {
		return nil, false
	}
	return o.AnneeCategorieEntreprise, true
}

// HasAnneeCategorieEntreprise returns a boolean if a field has been set.
func (o *EntrepriseFiche) HasAnneeCategorieEntreprise() bool {
	if o != nil && !IsNil(o.AnneeCategorieEntreprise) {
		return true
	}

	return false
}

// SetAnneeCategorieEntreprise gets a reference to the given int32 and assigns it to the AnneeCategorieEntreprise field.
func (o *EntrepriseFiche) SetAnneeCategorieEntreprise(v int32) {
	o.AnneeCategorieEntreprise = &v
}

func (o EntrepriseFiche) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntrepriseFiche) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Siren) {
		toSerialize["siren"] = o.Siren
	}
	if !IsNil(o.SirenFormate) {
		toSerialize["siren_formate"] = o.SirenFormate
	}
	if !IsNil(o.OppositionUtilisationCommerciale) {
		toSerialize["opposition_utilisation_commerciale"] = o.OppositionUtilisationCommerciale
	}
	if !IsNil(o.NomEntreprise) {
		toSerialize["nom_entreprise"] = o.NomEntreprise
	}
	if !IsNil(o.PersonneMorale) {
		toSerialize["personne_morale"] = o.PersonneMorale
	}
	if !IsNil(o.Denomination) {
		toSerialize["denomination"] = o.Denomination
	}
	if !IsNil(o.Nom) {
		toSerialize["nom"] = o.Nom
	}
	if !IsNil(o.Prenom) {
		toSerialize["prenom"] = o.Prenom
	}
	if !IsNil(o.Sexe) {
		toSerialize["sexe"] = o.Sexe
	}
	if !IsNil(o.CodeNaf) {
		toSerialize["code_naf"] = o.CodeNaf
	}
	if !IsNil(o.LibelleCodeNaf) {
		toSerialize["libelle_code_naf"] = o.LibelleCodeNaf
	}
	if !IsNil(o.DomaineActivite) {
		toSerialize["domaine_activite"] = o.DomaineActivite
	}
	if !IsNil(o.ConventionsCollectives) {
		toSerialize["conventions_collectives"] = o.ConventionsCollectives
	}
	if !IsNil(o.DateCreation) {
		toSerialize["date_creation"] = o.DateCreation
	}
	if !IsNil(o.DateCreationFormate) {
		toSerialize["date_creation_formate"] = o.DateCreationFormate
	}
	if !IsNil(o.EntrepriseCessee) {
		toSerialize["entreprise_cessee"] = o.EntrepriseCessee
	}
	if !IsNil(o.DateCessation) {
		toSerialize["date_cessation"] = o.DateCessation
	}
	if !IsNil(o.EntrepriseEmployeuse) {
		toSerialize["entreprise_employeuse"] = o.EntrepriseEmployeuse
	}
	if !IsNil(o.SocieteAMission) {
		toSerialize["societe_a_mission"] = o.SocieteAMission
	}
	if !IsNil(o.CategorieJuridique) {
		toSerialize["categorie_juridique"] = o.CategorieJuridique
	}
	if !IsNil(o.FormeJuridique) {
		toSerialize["forme_juridique"] = o.FormeJuridique
	}
	if !IsNil(o.MicroEntreprise) {
		toSerialize["micro_entreprise"] = o.MicroEntreprise
	}
	if !IsNil(o.FormeExercice) {
		toSerialize["forme_exercice"] = o.FormeExercice
	}
	if !IsNil(o.Effectif) {
		toSerialize["effectif"] = o.Effectif
	}
	if !IsNil(o.EffectifMin) {
		toSerialize["effectif_min"] = o.EffectifMin
	}
	if !IsNil(o.EffectifMax) {
		toSerialize["effectif_max"] = o.EffectifMax
	}
	if !IsNil(o.TrancheEffectif) {
		toSerialize["tranche_effectif"] = o.TrancheEffectif
	}
	if !IsNil(o.AnneeEffectif) {
		toSerialize["annee_effectif"] = o.AnneeEffectif
	}
	if !IsNil(o.Capital) {
		toSerialize["capital"] = o.Capital
	}
	if !IsNil(o.StatutRcs) {
		toSerialize["statut_rcs"] = o.StatutRcs
	}
	if !IsNil(o.Siege) {
		toSerialize["siege"] = o.Siege
	}
	if !IsNil(o.Diffusable) {
		toSerialize["diffusable"] = o.Diffusable
	}
	if !IsNil(o.Sigle) {
		toSerialize["sigle"] = o.Sigle
	}
	if !IsNil(o.ObjetSocial) {
		toSerialize["objet_social"] = o.ObjetSocial
	}
	if !IsNil(o.CapitalFormate) {
		toSerialize["capital_formate"] = o.CapitalFormate
	}
	if !IsNil(o.CapitalActuelSiVariable) {
		toSerialize["capital_actuel_si_variable"] = o.CapitalActuelSiVariable
	}
	if !IsNil(o.DeviseCapital) {
		toSerialize["devise_capital"] = o.DeviseCapital
	}
	if !IsNil(o.NumeroRcs) {
		toSerialize["numero_rcs"] = o.NumeroRcs
	}
	if !IsNil(o.DateClotureExercice) {
		toSerialize["date_cloture_exercice"] = o.DateClotureExercice
	}
	if !IsNil(o.DateClotureExerciceExceptionnelle) {
		toSerialize["date_cloture_exercice_exceptionnelle"] = o.DateClotureExerciceExceptionnelle
	}
	if !IsNil(o.DateClotureExerciceExceptionnelleFormate) {
		toSerialize["date_cloture_exercice_exceptionnelle_formate"] = o.DateClotureExerciceExceptionnelleFormate
	}
	if !IsNil(o.ProchaineDateClotureExercice) {
		toSerialize["prochaine_date_cloture_exercice"] = o.ProchaineDateClotureExercice
	}
	if !IsNil(o.ProchaineDateClotureExerciceFormate) {
		toSerialize["prochaine_date_cloture_exercice_formate"] = o.ProchaineDateClotureExerciceFormate
	}
	if !IsNil(o.EconomieSocialeSolidaire) {
		toSerialize["economie_sociale_solidaire"] = o.EconomieSocialeSolidaire
	}
	if !IsNil(o.DureePersonneMorale) {
		toSerialize["duree_personne_morale"] = o.DureePersonneMorale
	}
	if !IsNil(o.DernierTraitement) {
		toSerialize["dernier_traitement"] = o.DernierTraitement
	}
	if !IsNil(o.DerniereMiseAJourSirene) {
		toSerialize["derniere_mise_a_jour_sirene"] = o.DerniereMiseAJourSirene
	}
	if !IsNil(o.DerniereMiseAJourRcs) {
		toSerialize["derniere_mise_a_jour_rcs"] = o.DerniereMiseAJourRcs
	}
	if !IsNil(o.Greffe) {
		toSerialize["greffe"] = o.Greffe
	}
	if !IsNil(o.CodeGreffe) {
		toSerialize["code_greffe"] = o.CodeGreffe
	}
	if !IsNil(o.DateImmatriculationRcs) {
		toSerialize["date_immatriculation_rcs"] = o.DateImmatriculationRcs
	}
	if !IsNil(o.DatePremiereImmatriculationRcs) {
		toSerialize["date_premiere_immatriculation_rcs"] = o.DatePremiereImmatriculationRcs
	}
	if !IsNil(o.DateDebutActivite) {
		toSerialize["date_debut_activite"] = o.DateDebutActivite
	}
	if !IsNil(o.DateDebutPremiereActivite) {
		toSerialize["date_debut_premiere_activite"] = o.DateDebutPremiereActivite
	}
	if !IsNil(o.DateRadiationRcs) {
		toSerialize["date_radiation_rcs"] = o.DateRadiationRcs
	}
	if !IsNil(o.StatutRne) {
		toSerialize["statut_rne"] = o.StatutRne
	}
	if !IsNil(o.DateImmatriculationRne) {
		toSerialize["date_immatriculation_rne"] = o.DateImmatriculationRne
	}
	if !IsNil(o.DateRadiationRne) {
		toSerialize["date_radiation_rne"] = o.DateRadiationRne
	}
	if !IsNil(o.NumeroTvaIntracommunautaire) {
		toSerialize["numero_tva_intracommunautaire"] = o.NumeroTvaIntracommunautaire
	}
	if !IsNil(o.ValiditeTvaIntracommunautaire) {
		toSerialize["validite_tva_intracommunautaire"] = o.ValiditeTvaIntracommunautaire
	}
	if !IsNil(o.AssocieUnique) {
		toSerialize["associe_unique"] = o.AssocieUnique
	}
	if !IsNil(o.Etablissements) {
		toSerialize["etablissements"] = o.Etablissements
	}
	if !IsNil(o.Etablissement) {
		toSerialize["etablissement"] = o.Etablissement
	}
	if !IsNil(o.Finances) {
		toSerialize["finances"] = o.Finances
	}
	if !IsNil(o.Representants) {
		toSerialize["representants"] = o.Representants
	}
	if !IsNil(o.BeneficiairesEffectifs) {
		toSerialize["beneficiaires_effectifs"] = o.BeneficiairesEffectifs
	}
	if !IsNil(o.DepotsActes) {
		toSerialize["depots_actes"] = o.DepotsActes
	}
	if !IsNil(o.Comptes) {
		toSerialize["comptes"] = o.Comptes
	}
	if !IsNil(o.PublicationsBodacc) {
		toSerialize["publications_bodacc"] = o.PublicationsBodacc
	}
	if !IsNil(o.ProceduresCollectives) {
		toSerialize["procedures_collectives"] = o.ProceduresCollectives
	}
	if !IsNil(o.ProcedureCollectiveExiste) {
		toSerialize["procedure_collective_existe"] = o.ProcedureCollectiveExiste
	}
	if !IsNil(o.ProcedureCollectiveEnCours) {
		toSerialize["procedure_collective_en_cours"] = o.ProcedureCollectiveEnCours
	}
	if !IsNil(o.DerniersStatuts) {
		toSerialize["derniers_statuts"] = o.DerniersStatuts
	}
	if !IsNil(o.ExtraitImmatriculation) {
		toSerialize["extrait_immatriculation"] = o.ExtraitImmatriculation
	}
	if !IsNil(o.Rnm) {
		toSerialize["rnm"] = o.Rnm
	}
	if !IsNil(o.Marques) {
		toSerialize["marques"] = o.Marques
	}
	if !IsNil(o.Association) {
		toSerialize["association"] = o.Association
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.SitesInternet) {
		toSerialize["sites_internet"] = o.SitesInternet
	}
	if !IsNil(o.Telephone) {
		toSerialize["telephone"] = o.Telephone
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.ScoringNonFinancier) {
		toSerialize["scoring_non_financier"] = o.ScoringNonFinancier
	}
	if !IsNil(o.ScoringFinancier) {
		toSerialize["scoring_financier"] = o.ScoringFinancier
	}
	if !IsNil(o.CategorieEntreprise) {
		toSerialize["categorie_entreprise"] = o.CategorieEntreprise
	}
	if !IsNil(o.AnneeCategorieEntreprise) {
		toSerialize["annee_categorie_entreprise"] = o.AnneeCategorieEntreprise
	}
	return toSerialize, nil
}

type NullableEntrepriseFiche struct {
	value *EntrepriseFiche
	isSet bool
}

func (v NullableEntrepriseFiche) Get() *EntrepriseFiche {
	return v.value
}

func (v *NullableEntrepriseFiche) Set(val *EntrepriseFiche) {
	v.value = val
	v.isSet = true
}

func (v NullableEntrepriseFiche) IsSet() bool {
	return v.isSet
}

func (v *NullableEntrepriseFiche) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntrepriseFiche(val *EntrepriseFiche) *NullableEntrepriseFiche {
	return &NullableEntrepriseFiche{value: val, isSet: true}
}

func (v NullableEntrepriseFiche) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntrepriseFiche) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


