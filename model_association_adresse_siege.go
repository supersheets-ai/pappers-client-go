/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AssociationAdresseSiege type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssociationAdresseSiege{}

// AssociationAdresseSiege struct for AssociationAdresseSiege
type AssociationAdresseSiege struct {
	// Code postal du siège social.
	CodePostal *string `json:"code_postal,omitempty"`
	// Code insee du siège social.
	CodeInsee *string `json:"code_insee,omitempty"`
	// Ville du siège social.
	Ville *string `json:"ville,omitempty"`
	// Numéro de voie du siège social.
	NumeroVoie *string `json:"numero_voie,omitempty"`
	// Indice de répétition du siège social.
	IndiceRepetition *string `json:"indice_repetition,omitempty"`
	// Type de voie du siège social.
	TypeVoie *string `json:"type_voie,omitempty"`
	// Libellé de la voie du siège social.
	LibelleVoie *string `json:"libelle_voie,omitempty"`
	// Complément de l'adresse du siège social.
	ComplementAdresse *string `json:"complement_adresse,omitempty"`
	// Complément de distribution du siege social.
	Distribution *string `json:"distribution,omitempty"`
	// Adresse complète du siège social.
	AdresseLigne1 *string `json:"adresse_ligne_1,omitempty"`
	// Renseignement supplémentaire à l'adresse du siège social.
	AdresseLigne2 *string `json:"adresse_ligne_2,omitempty"`
}

// NewAssociationAdresseSiege instantiates a new AssociationAdresseSiege object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssociationAdresseSiege() *AssociationAdresseSiege {
	this := AssociationAdresseSiege{}
	return &this
}

// NewAssociationAdresseSiegeWithDefaults instantiates a new AssociationAdresseSiege object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssociationAdresseSiegeWithDefaults() *AssociationAdresseSiege {
	this := AssociationAdresseSiege{}
	return &this
}

// GetCodePostal returns the CodePostal field value if set, zero value otherwise.
func (o *AssociationAdresseSiege) GetCodePostal() string {
	if o == nil || IsNil(o.CodePostal) {
		var ret string
		return ret
	}
	return *o.CodePostal
}

// GetCodePostalOk returns a tuple with the CodePostal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationAdresseSiege) GetCodePostalOk() (*string, bool) {
	if o == nil || IsNil(o.CodePostal) {
		return nil, false
	}
	return o.CodePostal, true
}

// HasCodePostal returns a boolean if a field has been set.
func (o *AssociationAdresseSiege) HasCodePostal() bool {
	if o != nil && !IsNil(o.CodePostal) {
		return true
	}

	return false
}

// SetCodePostal gets a reference to the given string and assigns it to the CodePostal field.
func (o *AssociationAdresseSiege) SetCodePostal(v string) {
	o.CodePostal = &v
}

// GetCodeInsee returns the CodeInsee field value if set, zero value otherwise.
func (o *AssociationAdresseSiege) GetCodeInsee() string {
	if o == nil || IsNil(o.CodeInsee) {
		var ret string
		return ret
	}
	return *o.CodeInsee
}

// GetCodeInseeOk returns a tuple with the CodeInsee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationAdresseSiege) GetCodeInseeOk() (*string, bool) {
	if o == nil || IsNil(o.CodeInsee) {
		return nil, false
	}
	return o.CodeInsee, true
}

// HasCodeInsee returns a boolean if a field has been set.
func (o *AssociationAdresseSiege) HasCodeInsee() bool {
	if o != nil && !IsNil(o.CodeInsee) {
		return true
	}

	return false
}

// SetCodeInsee gets a reference to the given string and assigns it to the CodeInsee field.
func (o *AssociationAdresseSiege) SetCodeInsee(v string) {
	o.CodeInsee = &v
}

// GetVille returns the Ville field value if set, zero value otherwise.
func (o *AssociationAdresseSiege) GetVille() string {
	if o == nil || IsNil(o.Ville) {
		var ret string
		return ret
	}
	return *o.Ville
}

// GetVilleOk returns a tuple with the Ville field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationAdresseSiege) GetVilleOk() (*string, bool) {
	if o == nil || IsNil(o.Ville) {
		return nil, false
	}
	return o.Ville, true
}

// HasVille returns a boolean if a field has been set.
func (o *AssociationAdresseSiege) HasVille() bool {
	if o != nil && !IsNil(o.Ville) {
		return true
	}

	return false
}

// SetVille gets a reference to the given string and assigns it to the Ville field.
func (o *AssociationAdresseSiege) SetVille(v string) {
	o.Ville = &v
}

// GetNumeroVoie returns the NumeroVoie field value if set, zero value otherwise.
func (o *AssociationAdresseSiege) GetNumeroVoie() string {
	if o == nil || IsNil(o.NumeroVoie) {
		var ret string
		return ret
	}
	return *o.NumeroVoie
}

// GetNumeroVoieOk returns a tuple with the NumeroVoie field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationAdresseSiege) GetNumeroVoieOk() (*string, bool) {
	if o == nil || IsNil(o.NumeroVoie) {
		return nil, false
	}
	return o.NumeroVoie, true
}

// HasNumeroVoie returns a boolean if a field has been set.
func (o *AssociationAdresseSiege) HasNumeroVoie() bool {
	if o != nil && !IsNil(o.NumeroVoie) {
		return true
	}

	return false
}

// SetNumeroVoie gets a reference to the given string and assigns it to the NumeroVoie field.
func (o *AssociationAdresseSiege) SetNumeroVoie(v string) {
	o.NumeroVoie = &v
}

// GetIndiceRepetition returns the IndiceRepetition field value if set, zero value otherwise.
func (o *AssociationAdresseSiege) GetIndiceRepetition() string {
	if o == nil || IsNil(o.IndiceRepetition) {
		var ret string
		return ret
	}
	return *o.IndiceRepetition
}

// GetIndiceRepetitionOk returns a tuple with the IndiceRepetition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationAdresseSiege) GetIndiceRepetitionOk() (*string, bool) {
	if o == nil || IsNil(o.IndiceRepetition) {
		return nil, false
	}
	return o.IndiceRepetition, true
}

// HasIndiceRepetition returns a boolean if a field has been set.
func (o *AssociationAdresseSiege) HasIndiceRepetition() bool {
	if o != nil && !IsNil(o.IndiceRepetition) {
		return true
	}

	return false
}

// SetIndiceRepetition gets a reference to the given string and assigns it to the IndiceRepetition field.
func (o *AssociationAdresseSiege) SetIndiceRepetition(v string) {
	o.IndiceRepetition = &v
}

// GetTypeVoie returns the TypeVoie field value if set, zero value otherwise.
func (o *AssociationAdresseSiege) GetTypeVoie() string {
	if o == nil || IsNil(o.TypeVoie) {
		var ret string
		return ret
	}
	return *o.TypeVoie
}

// GetTypeVoieOk returns a tuple with the TypeVoie field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationAdresseSiege) GetTypeVoieOk() (*string, bool) {
	if o == nil || IsNil(o.TypeVoie) {
		return nil, false
	}
	return o.TypeVoie, true
}

// HasTypeVoie returns a boolean if a field has been set.
func (o *AssociationAdresseSiege) HasTypeVoie() bool {
	if o != nil && !IsNil(o.TypeVoie) {
		return true
	}

	return false
}

// SetTypeVoie gets a reference to the given string and assigns it to the TypeVoie field.
func (o *AssociationAdresseSiege) SetTypeVoie(v string) {
	o.TypeVoie = &v
}

// GetLibelleVoie returns the LibelleVoie field value if set, zero value otherwise.
func (o *AssociationAdresseSiege) GetLibelleVoie() string {
	if o == nil || IsNil(o.LibelleVoie) {
		var ret string
		return ret
	}
	return *o.LibelleVoie
}

// GetLibelleVoieOk returns a tuple with the LibelleVoie field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationAdresseSiege) GetLibelleVoieOk() (*string, bool) {
	if o == nil || IsNil(o.LibelleVoie) {
		return nil, false
	}
	return o.LibelleVoie, true
}

// HasLibelleVoie returns a boolean if a field has been set.
func (o *AssociationAdresseSiege) HasLibelleVoie() bool {
	if o != nil && !IsNil(o.LibelleVoie) {
		return true
	}

	return false
}

// SetLibelleVoie gets a reference to the given string and assigns it to the LibelleVoie field.
func (o *AssociationAdresseSiege) SetLibelleVoie(v string) {
	o.LibelleVoie = &v
}

// GetComplementAdresse returns the ComplementAdresse field value if set, zero value otherwise.
func (o *AssociationAdresseSiege) GetComplementAdresse() string {
	if o == nil || IsNil(o.ComplementAdresse) {
		var ret string
		return ret
	}
	return *o.ComplementAdresse
}

// GetComplementAdresseOk returns a tuple with the ComplementAdresse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationAdresseSiege) GetComplementAdresseOk() (*string, bool) {
	if o == nil || IsNil(o.ComplementAdresse) {
		return nil, false
	}
	return o.ComplementAdresse, true
}

// HasComplementAdresse returns a boolean if a field has been set.
func (o *AssociationAdresseSiege) HasComplementAdresse() bool {
	if o != nil && !IsNil(o.ComplementAdresse) {
		return true
	}

	return false
}

// SetComplementAdresse gets a reference to the given string and assigns it to the ComplementAdresse field.
func (o *AssociationAdresseSiege) SetComplementAdresse(v string) {
	o.ComplementAdresse = &v
}

// GetDistribution returns the Distribution field value if set, zero value otherwise.
func (o *AssociationAdresseSiege) GetDistribution() string {
	if o == nil || IsNil(o.Distribution) {
		var ret string
		return ret
	}
	return *o.Distribution
}

// GetDistributionOk returns a tuple with the Distribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationAdresseSiege) GetDistributionOk() (*string, bool) {
	if o == nil || IsNil(o.Distribution) {
		return nil, false
	}
	return o.Distribution, true
}

// HasDistribution returns a boolean if a field has been set.
func (o *AssociationAdresseSiege) HasDistribution() bool {
	if o != nil && !IsNil(o.Distribution) {
		return true
	}

	return false
}

// SetDistribution gets a reference to the given string and assigns it to the Distribution field.
func (o *AssociationAdresseSiege) SetDistribution(v string) {
	o.Distribution = &v
}

// GetAdresseLigne1 returns the AdresseLigne1 field value if set, zero value otherwise.
func (o *AssociationAdresseSiege) GetAdresseLigne1() string {
	if o == nil || IsNil(o.AdresseLigne1) {
		var ret string
		return ret
	}
	return *o.AdresseLigne1
}

// GetAdresseLigne1Ok returns a tuple with the AdresseLigne1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationAdresseSiege) GetAdresseLigne1Ok() (*string, bool) {
	if o == nil || IsNil(o.AdresseLigne1) {
		return nil, false
	}
	return o.AdresseLigne1, true
}

// HasAdresseLigne1 returns a boolean if a field has been set.
func (o *AssociationAdresseSiege) HasAdresseLigne1() bool {
	if o != nil && !IsNil(o.AdresseLigne1) {
		return true
	}

	return false
}

// SetAdresseLigne1 gets a reference to the given string and assigns it to the AdresseLigne1 field.
func (o *AssociationAdresseSiege) SetAdresseLigne1(v string) {
	o.AdresseLigne1 = &v
}

// GetAdresseLigne2 returns the AdresseLigne2 field value if set, zero value otherwise.
func (o *AssociationAdresseSiege) GetAdresseLigne2() string {
	if o == nil || IsNil(o.AdresseLigne2) {
		var ret string
		return ret
	}
	return *o.AdresseLigne2
}

// GetAdresseLigne2Ok returns a tuple with the AdresseLigne2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationAdresseSiege) GetAdresseLigne2Ok() (*string, bool) {
	if o == nil || IsNil(o.AdresseLigne2) {
		return nil, false
	}
	return o.AdresseLigne2, true
}

// HasAdresseLigne2 returns a boolean if a field has been set.
func (o *AssociationAdresseSiege) HasAdresseLigne2() bool {
	if o != nil && !IsNil(o.AdresseLigne2) {
		return true
	}

	return false
}

// SetAdresseLigne2 gets a reference to the given string and assigns it to the AdresseLigne2 field.
func (o *AssociationAdresseSiege) SetAdresseLigne2(v string) {
	o.AdresseLigne2 = &v
}

func (o AssociationAdresseSiege) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssociationAdresseSiege) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CodePostal) {
		toSerialize["code_postal"] = o.CodePostal
	}
	if !IsNil(o.CodeInsee) {
		toSerialize["code_insee"] = o.CodeInsee
	}
	if !IsNil(o.Ville) {
		toSerialize["ville"] = o.Ville
	}
	if !IsNil(o.NumeroVoie) {
		toSerialize["numero_voie"] = o.NumeroVoie
	}
	if !IsNil(o.IndiceRepetition) {
		toSerialize["indice_repetition"] = o.IndiceRepetition
	}
	if !IsNil(o.TypeVoie) {
		toSerialize["type_voie"] = o.TypeVoie
	}
	if !IsNil(o.LibelleVoie) {
		toSerialize["libelle_voie"] = o.LibelleVoie
	}
	if !IsNil(o.ComplementAdresse) {
		toSerialize["complement_adresse"] = o.ComplementAdresse
	}
	if !IsNil(o.Distribution) {
		toSerialize["distribution"] = o.Distribution
	}
	if !IsNil(o.AdresseLigne1) {
		toSerialize["adresse_ligne_1"] = o.AdresseLigne1
	}
	if !IsNil(o.AdresseLigne2) {
		toSerialize["adresse_ligne_2"] = o.AdresseLigne2
	}
	return toSerialize, nil
}

type NullableAssociationAdresseSiege struct {
	value *AssociationAdresseSiege
	isSet bool
}

func (v NullableAssociationAdresseSiege) Get() *AssociationAdresseSiege {
	return v.value
}

func (v *NullableAssociationAdresseSiege) Set(val *AssociationAdresseSiege) {
	v.value = val
	v.isSet = true
}

func (v NullableAssociationAdresseSiege) IsSet() bool {
	return v.isSet
}

func (v *NullableAssociationAdresseSiege) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssociationAdresseSiege(val *AssociationAdresseSiege) *NullableAssociationAdresseSiege {
	return &NullableAssociationAdresseSiege{value: val, isSet: true}
}

func (v NullableAssociationAdresseSiege) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssociationAdresseSiege) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


