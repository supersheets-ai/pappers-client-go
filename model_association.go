/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Association type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Association{}

// Association Association liée à l'entreprise.
type Association struct {
	// Détermine si l'association possède un numéro WALDEC/RNA.
	IsWaldec *bool `json:"is_waldec,omitempty"`
	// L'identifiant l'association au format Wxxxxxxxxx si WALDEC, xxxxxxxxxxxxxx sinon.
	IdAssociation *string `json:"id_association,omitempty"`
	// Ancien numéro de l'association.
	IdExAssociation *string `json:"id_ex_association,omitempty"`
	// Dénomination de l'association.
	Denomination *string `json:"denomination,omitempty"`
	// Numéro siret de l'association au format xxxxxxxxxxxxxx.
	Siret *string `json:"siret,omitempty"`
	// Numéro de Reconnaissance d'Utilité Publique.
	NumeroRup *string `json:"numero_rup,omitempty"`
	// Objet de l'association.
	Objet *string `json:"objet,omitempty"`
	// Objet social 1 de l'association.
	ObjetSocial1 *string `json:"objet_social_1,omitempty"`
	// Libellé correspondant à l'objet social 1.
	CategorieSocial1 *string `json:"categorie_social_1,omitempty"`
	// Objet social 2 de l'association.
	ObjetSocial2 *string `json:"objet_social_2,omitempty"`
	// Libellé correspondant à l'objet social 1.
	CategorieSocial2 *string `json:"categorie_social_2,omitempty"`
	// Date de déclaration de création au format AAAA-MM-JJ.
	DateCreation *string `json:"date_creation,omitempty"`
	// Date de dernière déclaration au format AAAA-MM-JJ.
	DateDerniereDeclaration *string `json:"date_derniere_declaration,omitempty"`
	// Date de publication du Journal Officiel de l'avis de création au format AAAA-MM-JJ.
	DatePublicationCreation *string `json:"date_publication_creation,omitempty"`
	// Date de déclaration de dissolution au format AAAA-MM-JJ.
	DateDeclarationDissolution *string `json:"date_declaration_dissolution,omitempty"`
	// Groupement de l'association.
	Groupement *string `json:"groupement,omitempty"`
	// Position d'activité de l'association.
	PositionActivite *string `json:"position_activite,omitempty"`
	// Nature de l'association.
	Nature *string `json:"nature,omitempty"`
	// Site web de l'association.
	SiteWeb *string `json:"site_web,omitempty"`
	// Numéro de téléphone de l'association.
	Telephone *string `json:"telephone,omitempty"`
	// Email de l'association.
	Email *string `json:"email,omitempty"`
	AdresseSiege *AssociationAdresseSiege `json:"adresse_siege,omitempty"`
	AdresseGestionnaire *AssociationAdresseGestionnaire `json:"adresse_gestionnaire,omitempty"`
	// Observation relative à l'association.
	Observation *string `json:"observation,omitempty"`
	// Code du site gestionnaire (préfecture, sous-préfecture) de l'association.
	CodeGestion *string `json:"code_gestion,omitempty"`
	// Civilité du dirigeant.
	DirigeantCivilite *string `json:"dirigeant_civilite,omitempty"`
	// Date de la dernière mise à jour des informations au RNA au format AAAA-MM-JJ.
	DerniereMaj *string `json:"derniere_maj,omitempty"`
	// Publications JOAFE.
	PublicationsJoafe []AssociationPublicationsJoafeInner `json:"publications_joafe,omitempty"`
}

// NewAssociation instantiates a new Association object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssociation() *Association {
	this := Association{}
	return &this
}

// NewAssociationWithDefaults instantiates a new Association object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssociationWithDefaults() *Association {
	this := Association{}
	return &this
}

// GetIsWaldec returns the IsWaldec field value if set, zero value otherwise.
func (o *Association) GetIsWaldec() bool {
	if o == nil || IsNil(o.IsWaldec) {
		var ret bool
		return ret
	}
	return *o.IsWaldec
}

// GetIsWaldecOk returns a tuple with the IsWaldec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetIsWaldecOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWaldec) {
		return nil, false
	}
	return o.IsWaldec, true
}

// HasIsWaldec returns a boolean if a field has been set.
func (o *Association) HasIsWaldec() bool {
	if o != nil && !IsNil(o.IsWaldec) {
		return true
	}

	return false
}

// SetIsWaldec gets a reference to the given bool and assigns it to the IsWaldec field.
func (o *Association) SetIsWaldec(v bool) {
	o.IsWaldec = &v
}

// GetIdAssociation returns the IdAssociation field value if set, zero value otherwise.
func (o *Association) GetIdAssociation() string {
	if o == nil || IsNil(o.IdAssociation) {
		var ret string
		return ret
	}
	return *o.IdAssociation
}

// GetIdAssociationOk returns a tuple with the IdAssociation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetIdAssociationOk() (*string, bool) {
	if o == nil || IsNil(o.IdAssociation) {
		return nil, false
	}
	return o.IdAssociation, true
}

// HasIdAssociation returns a boolean if a field has been set.
func (o *Association) HasIdAssociation() bool {
	if o != nil && !IsNil(o.IdAssociation) {
		return true
	}

	return false
}

// SetIdAssociation gets a reference to the given string and assigns it to the IdAssociation field.
func (o *Association) SetIdAssociation(v string) {
	o.IdAssociation = &v
}

// GetIdExAssociation returns the IdExAssociation field value if set, zero value otherwise.
func (o *Association) GetIdExAssociation() string {
	if o == nil || IsNil(o.IdExAssociation) {
		var ret string
		return ret
	}
	return *o.IdExAssociation
}

// GetIdExAssociationOk returns a tuple with the IdExAssociation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetIdExAssociationOk() (*string, bool) {
	if o == nil || IsNil(o.IdExAssociation) {
		return nil, false
	}
	return o.IdExAssociation, true
}

// HasIdExAssociation returns a boolean if a field has been set.
func (o *Association) HasIdExAssociation() bool {
	if o != nil && !IsNil(o.IdExAssociation) {
		return true
	}

	return false
}

// SetIdExAssociation gets a reference to the given string and assigns it to the IdExAssociation field.
func (o *Association) SetIdExAssociation(v string) {
	o.IdExAssociation = &v
}

// GetDenomination returns the Denomination field value if set, zero value otherwise.
func (o *Association) GetDenomination() string {
	if o == nil || IsNil(o.Denomination) {
		var ret string
		return ret
	}
	return *o.Denomination
}

// GetDenominationOk returns a tuple with the Denomination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetDenominationOk() (*string, bool) {
	if o == nil || IsNil(o.Denomination) {
		return nil, false
	}
	return o.Denomination, true
}

// HasDenomination returns a boolean if a field has been set.
func (o *Association) HasDenomination() bool {
	if o != nil && !IsNil(o.Denomination) {
		return true
	}

	return false
}

// SetDenomination gets a reference to the given string and assigns it to the Denomination field.
func (o *Association) SetDenomination(v string) {
	o.Denomination = &v
}

// GetSiret returns the Siret field value if set, zero value otherwise.
func (o *Association) GetSiret() string {
	if o == nil || IsNil(o.Siret) {
		var ret string
		return ret
	}
	return *o.Siret
}

// GetSiretOk returns a tuple with the Siret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetSiretOk() (*string, bool) {
	if o == nil || IsNil(o.Siret) {
		return nil, false
	}
	return o.Siret, true
}

// HasSiret returns a boolean if a field has been set.
func (o *Association) HasSiret() bool {
	if o != nil && !IsNil(o.Siret) {
		return true
	}

	return false
}

// SetSiret gets a reference to the given string and assigns it to the Siret field.
func (o *Association) SetSiret(v string) {
	o.Siret = &v
}

// GetNumeroRup returns the NumeroRup field value if set, zero value otherwise.
func (o *Association) GetNumeroRup() string {
	if o == nil || IsNil(o.NumeroRup) {
		var ret string
		return ret
	}
	return *o.NumeroRup
}

// GetNumeroRupOk returns a tuple with the NumeroRup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetNumeroRupOk() (*string, bool) {
	if o == nil || IsNil(o.NumeroRup) {
		return nil, false
	}
	return o.NumeroRup, true
}

// HasNumeroRup returns a boolean if a field has been set.
func (o *Association) HasNumeroRup() bool {
	if o != nil && !IsNil(o.NumeroRup) {
		return true
	}

	return false
}

// SetNumeroRup gets a reference to the given string and assigns it to the NumeroRup field.
func (o *Association) SetNumeroRup(v string) {
	o.NumeroRup = &v
}

// GetObjet returns the Objet field value if set, zero value otherwise.
func (o *Association) GetObjet() string {
	if o == nil || IsNil(o.Objet) {
		var ret string
		return ret
	}
	return *o.Objet
}

// GetObjetOk returns a tuple with the Objet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetObjetOk() (*string, bool) {
	if o == nil || IsNil(o.Objet) {
		return nil, false
	}
	return o.Objet, true
}

// HasObjet returns a boolean if a field has been set.
func (o *Association) HasObjet() bool {
	if o != nil && !IsNil(o.Objet) {
		return true
	}

	return false
}

// SetObjet gets a reference to the given string and assigns it to the Objet field.
func (o *Association) SetObjet(v string) {
	o.Objet = &v
}

// GetObjetSocial1 returns the ObjetSocial1 field value if set, zero value otherwise.
func (o *Association) GetObjetSocial1() string {
	if o == nil || IsNil(o.ObjetSocial1) {
		var ret string
		return ret
	}
	return *o.ObjetSocial1
}

// GetObjetSocial1Ok returns a tuple with the ObjetSocial1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetObjetSocial1Ok() (*string, bool) {
	if o == nil || IsNil(o.ObjetSocial1) {
		return nil, false
	}
	return o.ObjetSocial1, true
}

// HasObjetSocial1 returns a boolean if a field has been set.
func (o *Association) HasObjetSocial1() bool {
	if o != nil && !IsNil(o.ObjetSocial1) {
		return true
	}

	return false
}

// SetObjetSocial1 gets a reference to the given string and assigns it to the ObjetSocial1 field.
func (o *Association) SetObjetSocial1(v string) {
	o.ObjetSocial1 = &v
}

// GetCategorieSocial1 returns the CategorieSocial1 field value if set, zero value otherwise.
func (o *Association) GetCategorieSocial1() string {
	if o == nil || IsNil(o.CategorieSocial1) {
		var ret string
		return ret
	}
	return *o.CategorieSocial1
}

// GetCategorieSocial1Ok returns a tuple with the CategorieSocial1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetCategorieSocial1Ok() (*string, bool) {
	if o == nil || IsNil(o.CategorieSocial1) {
		return nil, false
	}
	return o.CategorieSocial1, true
}

// HasCategorieSocial1 returns a boolean if a field has been set.
func (o *Association) HasCategorieSocial1() bool {
	if o != nil && !IsNil(o.CategorieSocial1) {
		return true
	}

	return false
}

// SetCategorieSocial1 gets a reference to the given string and assigns it to the CategorieSocial1 field.
func (o *Association) SetCategorieSocial1(v string) {
	o.CategorieSocial1 = &v
}

// GetObjetSocial2 returns the ObjetSocial2 field value if set, zero value otherwise.
func (o *Association) GetObjetSocial2() string {
	if o == nil || IsNil(o.ObjetSocial2) {
		var ret string
		return ret
	}
	return *o.ObjetSocial2
}

// GetObjetSocial2Ok returns a tuple with the ObjetSocial2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetObjetSocial2Ok() (*string, bool) {
	if o == nil || IsNil(o.ObjetSocial2) {
		return nil, false
	}
	return o.ObjetSocial2, true
}

// HasObjetSocial2 returns a boolean if a field has been set.
func (o *Association) HasObjetSocial2() bool {
	if o != nil && !IsNil(o.ObjetSocial2) {
		return true
	}

	return false
}

// SetObjetSocial2 gets a reference to the given string and assigns it to the ObjetSocial2 field.
func (o *Association) SetObjetSocial2(v string) {
	o.ObjetSocial2 = &v
}

// GetCategorieSocial2 returns the CategorieSocial2 field value if set, zero value otherwise.
func (o *Association) GetCategorieSocial2() string {
	if o == nil || IsNil(o.CategorieSocial2) {
		var ret string
		return ret
	}
	return *o.CategorieSocial2
}

// GetCategorieSocial2Ok returns a tuple with the CategorieSocial2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetCategorieSocial2Ok() (*string, bool) {
	if o == nil || IsNil(o.CategorieSocial2) {
		return nil, false
	}
	return o.CategorieSocial2, true
}

// HasCategorieSocial2 returns a boolean if a field has been set.
func (o *Association) HasCategorieSocial2() bool {
	if o != nil && !IsNil(o.CategorieSocial2) {
		return true
	}

	return false
}

// SetCategorieSocial2 gets a reference to the given string and assigns it to the CategorieSocial2 field.
func (o *Association) SetCategorieSocial2(v string) {
	o.CategorieSocial2 = &v
}

// GetDateCreation returns the DateCreation field value if set, zero value otherwise.
func (o *Association) GetDateCreation() string {
	if o == nil || IsNil(o.DateCreation) {
		var ret string
		return ret
	}
	return *o.DateCreation
}

// GetDateCreationOk returns a tuple with the DateCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetDateCreationOk() (*string, bool) {
	if o == nil || IsNil(o.DateCreation) {
		return nil, false
	}
	return o.DateCreation, true
}

// HasDateCreation returns a boolean if a field has been set.
func (o *Association) HasDateCreation() bool {
	if o != nil && !IsNil(o.DateCreation) {
		return true
	}

	return false
}

// SetDateCreation gets a reference to the given string and assigns it to the DateCreation field.
func (o *Association) SetDateCreation(v string) {
	o.DateCreation = &v
}

// GetDateDerniereDeclaration returns the DateDerniereDeclaration field value if set, zero value otherwise.
func (o *Association) GetDateDerniereDeclaration() string {
	if o == nil || IsNil(o.DateDerniereDeclaration) {
		var ret string
		return ret
	}
	return *o.DateDerniereDeclaration
}

// GetDateDerniereDeclarationOk returns a tuple with the DateDerniereDeclaration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetDateDerniereDeclarationOk() (*string, bool) {
	if o == nil || IsNil(o.DateDerniereDeclaration) {
		return nil, false
	}
	return o.DateDerniereDeclaration, true
}

// HasDateDerniereDeclaration returns a boolean if a field has been set.
func (o *Association) HasDateDerniereDeclaration() bool {
	if o != nil && !IsNil(o.DateDerniereDeclaration) {
		return true
	}

	return false
}

// SetDateDerniereDeclaration gets a reference to the given string and assigns it to the DateDerniereDeclaration field.
func (o *Association) SetDateDerniereDeclaration(v string) {
	o.DateDerniereDeclaration = &v
}

// GetDatePublicationCreation returns the DatePublicationCreation field value if set, zero value otherwise.
func (o *Association) GetDatePublicationCreation() string {
	if o == nil || IsNil(o.DatePublicationCreation) {
		var ret string
		return ret
	}
	return *o.DatePublicationCreation
}

// GetDatePublicationCreationOk returns a tuple with the DatePublicationCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetDatePublicationCreationOk() (*string, bool) {
	if o == nil || IsNil(o.DatePublicationCreation) {
		return nil, false
	}
	return o.DatePublicationCreation, true
}

// HasDatePublicationCreation returns a boolean if a field has been set.
func (o *Association) HasDatePublicationCreation() bool {
	if o != nil && !IsNil(o.DatePublicationCreation) {
		return true
	}

	return false
}

// SetDatePublicationCreation gets a reference to the given string and assigns it to the DatePublicationCreation field.
func (o *Association) SetDatePublicationCreation(v string) {
	o.DatePublicationCreation = &v
}

// GetDateDeclarationDissolution returns the DateDeclarationDissolution field value if set, zero value otherwise.
func (o *Association) GetDateDeclarationDissolution() string {
	if o == nil || IsNil(o.DateDeclarationDissolution) {
		var ret string
		return ret
	}
	return *o.DateDeclarationDissolution
}

// GetDateDeclarationDissolutionOk returns a tuple with the DateDeclarationDissolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetDateDeclarationDissolutionOk() (*string, bool) {
	if o == nil || IsNil(o.DateDeclarationDissolution) {
		return nil, false
	}
	return o.DateDeclarationDissolution, true
}

// HasDateDeclarationDissolution returns a boolean if a field has been set.
func (o *Association) HasDateDeclarationDissolution() bool {
	if o != nil && !IsNil(o.DateDeclarationDissolution) {
		return true
	}

	return false
}

// SetDateDeclarationDissolution gets a reference to the given string and assigns it to the DateDeclarationDissolution field.
func (o *Association) SetDateDeclarationDissolution(v string) {
	o.DateDeclarationDissolution = &v
}

// GetGroupement returns the Groupement field value if set, zero value otherwise.
func (o *Association) GetGroupement() string {
	if o == nil || IsNil(o.Groupement) {
		var ret string
		return ret
	}
	return *o.Groupement
}

// GetGroupementOk returns a tuple with the Groupement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetGroupementOk() (*string, bool) {
	if o == nil || IsNil(o.Groupement) {
		return nil, false
	}
	return o.Groupement, true
}

// HasGroupement returns a boolean if a field has been set.
func (o *Association) HasGroupement() bool {
	if o != nil && !IsNil(o.Groupement) {
		return true
	}

	return false
}

// SetGroupement gets a reference to the given string and assigns it to the Groupement field.
func (o *Association) SetGroupement(v string) {
	o.Groupement = &v
}

// GetPositionActivite returns the PositionActivite field value if set, zero value otherwise.
func (o *Association) GetPositionActivite() string {
	if o == nil || IsNil(o.PositionActivite) {
		var ret string
		return ret
	}
	return *o.PositionActivite
}

// GetPositionActiviteOk returns a tuple with the PositionActivite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetPositionActiviteOk() (*string, bool) {
	if o == nil || IsNil(o.PositionActivite) {
		return nil, false
	}
	return o.PositionActivite, true
}

// HasPositionActivite returns a boolean if a field has been set.
func (o *Association) HasPositionActivite() bool {
	if o != nil && !IsNil(o.PositionActivite) {
		return true
	}

	return false
}

// SetPositionActivite gets a reference to the given string and assigns it to the PositionActivite field.
func (o *Association) SetPositionActivite(v string) {
	o.PositionActivite = &v
}

// GetNature returns the Nature field value if set, zero value otherwise.
func (o *Association) GetNature() string {
	if o == nil || IsNil(o.Nature) {
		var ret string
		return ret
	}
	return *o.Nature
}

// GetNatureOk returns a tuple with the Nature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetNatureOk() (*string, bool) {
	if o == nil || IsNil(o.Nature) {
		return nil, false
	}
	return o.Nature, true
}

// HasNature returns a boolean if a field has been set.
func (o *Association) HasNature() bool {
	if o != nil && !IsNil(o.Nature) {
		return true
	}

	return false
}

// SetNature gets a reference to the given string and assigns it to the Nature field.
func (o *Association) SetNature(v string) {
	o.Nature = &v
}

// GetSiteWeb returns the SiteWeb field value if set, zero value otherwise.
func (o *Association) GetSiteWeb() string {
	if o == nil || IsNil(o.SiteWeb) {
		var ret string
		return ret
	}
	return *o.SiteWeb
}

// GetSiteWebOk returns a tuple with the SiteWeb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetSiteWebOk() (*string, bool) {
	if o == nil || IsNil(o.SiteWeb) {
		return nil, false
	}
	return o.SiteWeb, true
}

// HasSiteWeb returns a boolean if a field has been set.
func (o *Association) HasSiteWeb() bool {
	if o != nil && !IsNil(o.SiteWeb) {
		return true
	}

	return false
}

// SetSiteWeb gets a reference to the given string and assigns it to the SiteWeb field.
func (o *Association) SetSiteWeb(v string) {
	o.SiteWeb = &v
}

// GetTelephone returns the Telephone field value if set, zero value otherwise.
func (o *Association) GetTelephone() string {
	if o == nil || IsNil(o.Telephone) {
		var ret string
		return ret
	}
	return *o.Telephone
}

// GetTelephoneOk returns a tuple with the Telephone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetTelephoneOk() (*string, bool) {
	if o == nil || IsNil(o.Telephone) {
		return nil, false
	}
	return o.Telephone, true
}

// HasTelephone returns a boolean if a field has been set.
func (o *Association) HasTelephone() bool {
	if o != nil && !IsNil(o.Telephone) {
		return true
	}

	return false
}

// SetTelephone gets a reference to the given string and assigns it to the Telephone field.
func (o *Association) SetTelephone(v string) {
	o.Telephone = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Association) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Association) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Association) SetEmail(v string) {
	o.Email = &v
}

// GetAdresseSiege returns the AdresseSiege field value if set, zero value otherwise.
func (o *Association) GetAdresseSiege() AssociationAdresseSiege {
	if o == nil || IsNil(o.AdresseSiege) {
		var ret AssociationAdresseSiege
		return ret
	}
	return *o.AdresseSiege
}

// GetAdresseSiegeOk returns a tuple with the AdresseSiege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetAdresseSiegeOk() (*AssociationAdresseSiege, bool) {
	if o == nil || IsNil(o.AdresseSiege) {
		return nil, false
	}
	return o.AdresseSiege, true
}

// HasAdresseSiege returns a boolean if a field has been set.
func (o *Association) HasAdresseSiege() bool {
	if o != nil && !IsNil(o.AdresseSiege) {
		return true
	}

	return false
}

// SetAdresseSiege gets a reference to the given AssociationAdresseSiege and assigns it to the AdresseSiege field.
func (o *Association) SetAdresseSiege(v AssociationAdresseSiege) {
	o.AdresseSiege = &v
}

// GetAdresseGestionnaire returns the AdresseGestionnaire field value if set, zero value otherwise.
func (o *Association) GetAdresseGestionnaire() AssociationAdresseGestionnaire {
	if o == nil || IsNil(o.AdresseGestionnaire) {
		var ret AssociationAdresseGestionnaire
		return ret
	}
	return *o.AdresseGestionnaire
}

// GetAdresseGestionnaireOk returns a tuple with the AdresseGestionnaire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetAdresseGestionnaireOk() (*AssociationAdresseGestionnaire, bool) {
	if o == nil || IsNil(o.AdresseGestionnaire) {
		return nil, false
	}
	return o.AdresseGestionnaire, true
}

// HasAdresseGestionnaire returns a boolean if a field has been set.
func (o *Association) HasAdresseGestionnaire() bool {
	if o != nil && !IsNil(o.AdresseGestionnaire) {
		return true
	}

	return false
}

// SetAdresseGestionnaire gets a reference to the given AssociationAdresseGestionnaire and assigns it to the AdresseGestionnaire field.
func (o *Association) SetAdresseGestionnaire(v AssociationAdresseGestionnaire) {
	o.AdresseGestionnaire = &v
}

// GetObservation returns the Observation field value if set, zero value otherwise.
func (o *Association) GetObservation() string {
	if o == nil || IsNil(o.Observation) {
		var ret string
		return ret
	}
	return *o.Observation
}

// GetObservationOk returns a tuple with the Observation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetObservationOk() (*string, bool) {
	if o == nil || IsNil(o.Observation) {
		return nil, false
	}
	return o.Observation, true
}

// HasObservation returns a boolean if a field has been set.
func (o *Association) HasObservation() bool {
	if o != nil && !IsNil(o.Observation) {
		return true
	}

	return false
}

// SetObservation gets a reference to the given string and assigns it to the Observation field.
func (o *Association) SetObservation(v string) {
	o.Observation = &v
}

// GetCodeGestion returns the CodeGestion field value if set, zero value otherwise.
func (o *Association) GetCodeGestion() string {
	if o == nil || IsNil(o.CodeGestion) {
		var ret string
		return ret
	}
	return *o.CodeGestion
}

// GetCodeGestionOk returns a tuple with the CodeGestion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetCodeGestionOk() (*string, bool) {
	if o == nil || IsNil(o.CodeGestion) {
		return nil, false
	}
	return o.CodeGestion, true
}

// HasCodeGestion returns a boolean if a field has been set.
func (o *Association) HasCodeGestion() bool {
	if o != nil && !IsNil(o.CodeGestion) {
		return true
	}

	return false
}

// SetCodeGestion gets a reference to the given string and assigns it to the CodeGestion field.
func (o *Association) SetCodeGestion(v string) {
	o.CodeGestion = &v
}

// GetDirigeantCivilite returns the DirigeantCivilite field value if set, zero value otherwise.
func (o *Association) GetDirigeantCivilite() string {
	if o == nil || IsNil(o.DirigeantCivilite) {
		var ret string
		return ret
	}
	return *o.DirigeantCivilite
}

// GetDirigeantCiviliteOk returns a tuple with the DirigeantCivilite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetDirigeantCiviliteOk() (*string, bool) {
	if o == nil || IsNil(o.DirigeantCivilite) {
		return nil, false
	}
	return o.DirigeantCivilite, true
}

// HasDirigeantCivilite returns a boolean if a field has been set.
func (o *Association) HasDirigeantCivilite() bool {
	if o != nil && !IsNil(o.DirigeantCivilite) {
		return true
	}

	return false
}

// SetDirigeantCivilite gets a reference to the given string and assigns it to the DirigeantCivilite field.
func (o *Association) SetDirigeantCivilite(v string) {
	o.DirigeantCivilite = &v
}

// GetDerniereMaj returns the DerniereMaj field value if set, zero value otherwise.
func (o *Association) GetDerniereMaj() string {
	if o == nil || IsNil(o.DerniereMaj) {
		var ret string
		return ret
	}
	return *o.DerniereMaj
}

// GetDerniereMajOk returns a tuple with the DerniereMaj field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetDerniereMajOk() (*string, bool) {
	if o == nil || IsNil(o.DerniereMaj) {
		return nil, false
	}
	return o.DerniereMaj, true
}

// HasDerniereMaj returns a boolean if a field has been set.
func (o *Association) HasDerniereMaj() bool {
	if o != nil && !IsNil(o.DerniereMaj) {
		return true
	}

	return false
}

// SetDerniereMaj gets a reference to the given string and assigns it to the DerniereMaj field.
func (o *Association) SetDerniereMaj(v string) {
	o.DerniereMaj = &v
}

// GetPublicationsJoafe returns the PublicationsJoafe field value if set, zero value otherwise.
func (o *Association) GetPublicationsJoafe() []AssociationPublicationsJoafeInner {
	if o == nil || IsNil(o.PublicationsJoafe) {
		var ret []AssociationPublicationsJoafeInner
		return ret
	}
	return o.PublicationsJoafe
}

// GetPublicationsJoafeOk returns a tuple with the PublicationsJoafe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetPublicationsJoafeOk() ([]AssociationPublicationsJoafeInner, bool) {
	if o == nil || IsNil(o.PublicationsJoafe) {
		return nil, false
	}
	return o.PublicationsJoafe, true
}

// HasPublicationsJoafe returns a boolean if a field has been set.
func (o *Association) HasPublicationsJoafe() bool {
	if o != nil && !IsNil(o.PublicationsJoafe) {
		return true
	}

	return false
}

// SetPublicationsJoafe gets a reference to the given []AssociationPublicationsJoafeInner and assigns it to the PublicationsJoafe field.
func (o *Association) SetPublicationsJoafe(v []AssociationPublicationsJoafeInner) {
	o.PublicationsJoafe = v
}

func (o Association) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Association) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsWaldec) {
		toSerialize["is_waldec"] = o.IsWaldec
	}
	if !IsNil(o.IdAssociation) {
		toSerialize["id_association"] = o.IdAssociation
	}
	if !IsNil(o.IdExAssociation) {
		toSerialize["id_ex_association"] = o.IdExAssociation
	}
	if !IsNil(o.Denomination) {
		toSerialize["denomination"] = o.Denomination
	}
	if !IsNil(o.Siret) {
		toSerialize["siret"] = o.Siret
	}
	if !IsNil(o.NumeroRup) {
		toSerialize["numero_rup"] = o.NumeroRup
	}
	if !IsNil(o.Objet) {
		toSerialize["objet"] = o.Objet
	}
	if !IsNil(o.ObjetSocial1) {
		toSerialize["objet_social_1"] = o.ObjetSocial1
	}
	if !IsNil(o.CategorieSocial1) {
		toSerialize["categorie_social_1"] = o.CategorieSocial1
	}
	if !IsNil(o.ObjetSocial2) {
		toSerialize["objet_social_2"] = o.ObjetSocial2
	}
	if !IsNil(o.CategorieSocial2) {
		toSerialize["categorie_social_2"] = o.CategorieSocial2
	}
	if !IsNil(o.DateCreation) {
		toSerialize["date_creation"] = o.DateCreation
	}
	if !IsNil(o.DateDerniereDeclaration) {
		toSerialize["date_derniere_declaration"] = o.DateDerniereDeclaration
	}
	if !IsNil(o.DatePublicationCreation) {
		toSerialize["date_publication_creation"] = o.DatePublicationCreation
	}
	if !IsNil(o.DateDeclarationDissolution) {
		toSerialize["date_declaration_dissolution"] = o.DateDeclarationDissolution
	}
	if !IsNil(o.Groupement) {
		toSerialize["groupement"] = o.Groupement
	}
	if !IsNil(o.PositionActivite) {
		toSerialize["position_activite"] = o.PositionActivite
	}
	if !IsNil(o.Nature) {
		toSerialize["nature"] = o.Nature
	}
	if !IsNil(o.SiteWeb) {
		toSerialize["site_web"] = o.SiteWeb
	}
	if !IsNil(o.Telephone) {
		toSerialize["telephone"] = o.Telephone
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.AdresseSiege) {
		toSerialize["adresse_siege"] = o.AdresseSiege
	}
	if !IsNil(o.AdresseGestionnaire) {
		toSerialize["adresse_gestionnaire"] = o.AdresseGestionnaire
	}
	if !IsNil(o.Observation) {
		toSerialize["observation"] = o.Observation
	}
	if !IsNil(o.CodeGestion) {
		toSerialize["code_gestion"] = o.CodeGestion
	}
	if !IsNil(o.DirigeantCivilite) {
		toSerialize["dirigeant_civilite"] = o.DirigeantCivilite
	}
	if !IsNil(o.DerniereMaj) {
		toSerialize["derniere_maj"] = o.DerniereMaj
	}
	if !IsNil(o.PublicationsJoafe) {
		toSerialize["publications_joafe"] = o.PublicationsJoafe
	}
	return toSerialize, nil
}

type NullableAssociation struct {
	value *Association
	isSet bool
}

func (v NullableAssociation) Get() *Association {
	return v.value
}

func (v *NullableAssociation) Set(val *Association) {
	v.value = val
	v.isSet = true
}

func (v NullableAssociation) IsSet() bool {
	return v.isSet
}

func (v *NullableAssociation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssociation(val *Association) *NullableAssociation {
	return &NullableAssociation{value: val, isSet: true}
}

func (v NullableAssociation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssociation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


