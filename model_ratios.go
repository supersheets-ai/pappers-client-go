/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Ratios type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Ratios{}

// Ratios struct for Ratios
type Ratios struct {
	// Chiffre d'affaires de l'entreprise.
	ChiffreAffaires *float32 `json:"chiffre_affaires,omitempty"`
	// Résultat de l'entreprise.
	Resultat *float32 `json:"resultat,omitempty"`
	// Effectif de l'entreprise.
	Effectif *int32 `json:"effectif,omitempty"`
	// Marge brute de l'entreprise.
	MargeBrute *float32 `json:"marge_brute,omitempty"`
	// Excédent brut d'exploitation (EBITDA) de l'entreprise.
	ExcedentBrutExploitation *float32 `json:"excedent_brut_exploitation,omitempty"`
	// Résultat d'exploitation (EBIT) de l'entreprise.
	ResultatExploitation *float32 `json:"resultat_exploitation,omitempty"`
	// Taux de croissance du chiffre d'affaires (en %) de l'entreprise.
	TauxCroissanceChiffreAffaires *float32 `json:"taux_croissance_chiffre_affaires,omitempty"`
	// Taux de marge brute (en %) de l'entreprise.
	TauxMargeBrute *float32 `json:"taux_marge_brute,omitempty"`
	// Taux de marge d'EBITDA (en %) de l'entreprise.
	TauxMargeEBITDA *float32 `json:"taux_marge_EBITDA,omitempty"`
	// Taux de marge opérationnelle (EBIT) (en %) de l'entreprise.
	TauxMargeOperationnelle *float32 `json:"taux_marge_operationnelle,omitempty"`
	// BFR (Besoin en fonds de roulement) de l'entreprise.
	BFR *float32 `json:"BFR,omitempty"`
	// BFR exploitation de l'entreprise.
	BFRExploitation *float32 `json:"BFR_exploitation,omitempty"`
	// BFR hors exploitation de l'entreprise.
	BFRHorsExploitation *float32 `json:"BFR_hors_exploitation,omitempty"`
	// BFR (en jours de CA) de l'entreprise.
	BFRJoursCA *float32 `json:"BFR_jours_CA,omitempty"`
	// BFR exploitation (en jours de CA) de l'entreprise.
	BFRExploitationJoursCA *float32 `json:"BFR_exploitation_jours_CA,omitempty"`
	// BFR hors exploitation (en jours de CA) de l'entreprise.
	BFRHorsExploitationJoursCA *float32 `json:"BFR_hors_exploitation_jours_CA,omitempty"`
	// Délai de paiement clients (en jours) de l'entreprise.
	DelaiPaiementClientsJours *float32 `json:"delai_paiement_clients_jours,omitempty"`
	// Délai de paiement fournisseurs (en jours) de l'entreprise.
	DelaiPaiementFournisseursJours *float32 `json:"delai_paiement_fournisseurs_jours,omitempty"`
	// Ratio des stocks / CA (en jours) de l'entreprise.
	RatioStockCAJours *float32 `json:"ratio_stock_CA_jours,omitempty"`
	// Capacité d'autofinancement de l'entreprise.
	CapaciteAutofinancement *float32 `json:"capacite_autofinancement,omitempty"`
	// Capacité d'autofinancement / CA (en %) de l'entreprise.
	CapaciteAutofinancementCA *float32 `json:"capacite_autofinancement_CA,omitempty"`
	// Fonds de roulement net global de l'entreprise.
	FondsRoulementNetGlobal *float32 `json:"fonds_roulement_net_global,omitempty"`
	// Couverture du BFR de l'entreprise.
	CouvertureBFR *float32 `json:"couverture_BFR,omitempty"`
	// Trésorerie de l'entreprise.
	Tresorerie *float32 `json:"tresorerie,omitempty"`
	// Dettes financières de l'entreprise.
	DettesFinancieres *float32 `json:"dettes_financieres,omitempty"`
	// Capacité de remboursement de l'entreprise.
	CapaciteRemboursement *float32 `json:"capacite_remboursement,omitempty"`
	// Ratio d'endettement (Gearing) de l'entreprise.
	RatioEndettement *float32 `json:"ratio_endettement,omitempty"`
	// Autonomie financière (en %) de l'entreprise.
	AutonomieFinanciere *float32 `json:"autonomie_financiere,omitempty"`
	// Taux de levier (DFN/EBITDA) de l'entreprise.
	TauxLevier *float32 `json:"taux_levier,omitempty"`
	// Etat des dettes à 1 an au plus de l'entreprise.
	EtatDettes1AnAuPlus *float32 `json:"etat_dettes_1_an_au_plus,omitempty"`
	// Liquidité générale de l'entreprise.
	LiquiditeGenerale *float32 `json:"liquidite_generale,omitempty"`
	// Couverture des dettes de l'entreprise.
	CouvertureDettes *float32 `json:"couverture_dettes,omitempty"`
	// Marge nette (en %) de l'entreprise.
	MargeNette *float32 `json:"marge_nette,omitempty"`
	// Rentabilité sur fonds propres (en %) de l'entreprise.
	RentabiliteFondsPropres *float32 `json:"rentabilite_fonds_propres,omitempty"`
	// Rentabilité économique (en %) de l'entreprise.
	RentabiliteEconomique *float32 `json:"rentabilite_economique,omitempty"`
	// Valeur ajoutée de l'entreprise.
	ValeurAjoutee *float32 `json:"valeur_ajoutee,omitempty"`
	// Valeur ajoutée / CA (en %) de l'entreprise.
	ValeurAjouteeCA *float32 `json:"valeur_ajoutee_CA,omitempty"`
	// Salaires et charges sociales de l'entreprise.
	SalairesChargesSociales *float32 `json:"salaires_charges_sociales,omitempty"`
	// Salaires / CA (en %) de l'entreprise.
	SalairesCA *float32 `json:"salaires_CA,omitempty"`
	// Impôts et taxes de l'entreprise.
	ImpotsTaxes *float32 `json:"impots_taxes,omitempty"`
}

// NewRatios instantiates a new Ratios object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRatios() *Ratios {
	this := Ratios{}
	return &this
}

// NewRatiosWithDefaults instantiates a new Ratios object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRatiosWithDefaults() *Ratios {
	this := Ratios{}
	return &this
}

// GetChiffreAffaires returns the ChiffreAffaires field value if set, zero value otherwise.
func (o *Ratios) GetChiffreAffaires() float32 {
	if o == nil || IsNil(o.ChiffreAffaires) {
		var ret float32
		return ret
	}
	return *o.ChiffreAffaires
}

// GetChiffreAffairesOk returns a tuple with the ChiffreAffaires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetChiffreAffairesOk() (*float32, bool) {
	if o == nil || IsNil(o.ChiffreAffaires) {
		return nil, false
	}
	return o.ChiffreAffaires, true
}

// HasChiffreAffaires returns a boolean if a field has been set.
func (o *Ratios) HasChiffreAffaires() bool {
	if o != nil && !IsNil(o.ChiffreAffaires) {
		return true
	}

	return false
}

// SetChiffreAffaires gets a reference to the given float32 and assigns it to the ChiffreAffaires field.
func (o *Ratios) SetChiffreAffaires(v float32) {
	o.ChiffreAffaires = &v
}

// GetResultat returns the Resultat field value if set, zero value otherwise.
func (o *Ratios) GetResultat() float32 {
	if o == nil || IsNil(o.Resultat) {
		var ret float32
		return ret
	}
	return *o.Resultat
}

// GetResultatOk returns a tuple with the Resultat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetResultatOk() (*float32, bool) {
	if o == nil || IsNil(o.Resultat) {
		return nil, false
	}
	return o.Resultat, true
}

// HasResultat returns a boolean if a field has been set.
func (o *Ratios) HasResultat() bool {
	if o != nil && !IsNil(o.Resultat) {
		return true
	}

	return false
}

// SetResultat gets a reference to the given float32 and assigns it to the Resultat field.
func (o *Ratios) SetResultat(v float32) {
	o.Resultat = &v
}

// GetEffectif returns the Effectif field value if set, zero value otherwise.
func (o *Ratios) GetEffectif() int32 {
	if o == nil || IsNil(o.Effectif) {
		var ret int32
		return ret
	}
	return *o.Effectif
}

// GetEffectifOk returns a tuple with the Effectif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetEffectifOk() (*int32, bool) {
	if o == nil || IsNil(o.Effectif) {
		return nil, false
	}
	return o.Effectif, true
}

// HasEffectif returns a boolean if a field has been set.
func (o *Ratios) HasEffectif() bool {
	if o != nil && !IsNil(o.Effectif) {
		return true
	}

	return false
}

// SetEffectif gets a reference to the given int32 and assigns it to the Effectif field.
func (o *Ratios) SetEffectif(v int32) {
	o.Effectif = &v
}

// GetMargeBrute returns the MargeBrute field value if set, zero value otherwise.
func (o *Ratios) GetMargeBrute() float32 {
	if o == nil || IsNil(o.MargeBrute) {
		var ret float32
		return ret
	}
	return *o.MargeBrute
}

// GetMargeBruteOk returns a tuple with the MargeBrute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetMargeBruteOk() (*float32, bool) {
	if o == nil || IsNil(o.MargeBrute) {
		return nil, false
	}
	return o.MargeBrute, true
}

// HasMargeBrute returns a boolean if a field has been set.
func (o *Ratios) HasMargeBrute() bool {
	if o != nil && !IsNil(o.MargeBrute) {
		return true
	}

	return false
}

// SetMargeBrute gets a reference to the given float32 and assigns it to the MargeBrute field.
func (o *Ratios) SetMargeBrute(v float32) {
	o.MargeBrute = &v
}

// GetExcedentBrutExploitation returns the ExcedentBrutExploitation field value if set, zero value otherwise.
func (o *Ratios) GetExcedentBrutExploitation() float32 {
	if o == nil || IsNil(o.ExcedentBrutExploitation) {
		var ret float32
		return ret
	}
	return *o.ExcedentBrutExploitation
}

// GetExcedentBrutExploitationOk returns a tuple with the ExcedentBrutExploitation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetExcedentBrutExploitationOk() (*float32, bool) {
	if o == nil || IsNil(o.ExcedentBrutExploitation) {
		return nil, false
	}
	return o.ExcedentBrutExploitation, true
}

// HasExcedentBrutExploitation returns a boolean if a field has been set.
func (o *Ratios) HasExcedentBrutExploitation() bool {
	if o != nil && !IsNil(o.ExcedentBrutExploitation) {
		return true
	}

	return false
}

// SetExcedentBrutExploitation gets a reference to the given float32 and assigns it to the ExcedentBrutExploitation field.
func (o *Ratios) SetExcedentBrutExploitation(v float32) {
	o.ExcedentBrutExploitation = &v
}

// GetResultatExploitation returns the ResultatExploitation field value if set, zero value otherwise.
func (o *Ratios) GetResultatExploitation() float32 {
	if o == nil || IsNil(o.ResultatExploitation) {
		var ret float32
		return ret
	}
	return *o.ResultatExploitation
}

// GetResultatExploitationOk returns a tuple with the ResultatExploitation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetResultatExploitationOk() (*float32, bool) {
	if o == nil || IsNil(o.ResultatExploitation) {
		return nil, false
	}
	return o.ResultatExploitation, true
}

// HasResultatExploitation returns a boolean if a field has been set.
func (o *Ratios) HasResultatExploitation() bool {
	if o != nil && !IsNil(o.ResultatExploitation) {
		return true
	}

	return false
}

// SetResultatExploitation gets a reference to the given float32 and assigns it to the ResultatExploitation field.
func (o *Ratios) SetResultatExploitation(v float32) {
	o.ResultatExploitation = &v
}

// GetTauxCroissanceChiffreAffaires returns the TauxCroissanceChiffreAffaires field value if set, zero value otherwise.
func (o *Ratios) GetTauxCroissanceChiffreAffaires() float32 {
	if o == nil || IsNil(o.TauxCroissanceChiffreAffaires) {
		var ret float32
		return ret
	}
	return *o.TauxCroissanceChiffreAffaires
}

// GetTauxCroissanceChiffreAffairesOk returns a tuple with the TauxCroissanceChiffreAffaires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetTauxCroissanceChiffreAffairesOk() (*float32, bool) {
	if o == nil || IsNil(o.TauxCroissanceChiffreAffaires) {
		return nil, false
	}
	return o.TauxCroissanceChiffreAffaires, true
}

// HasTauxCroissanceChiffreAffaires returns a boolean if a field has been set.
func (o *Ratios) HasTauxCroissanceChiffreAffaires() bool {
	if o != nil && !IsNil(o.TauxCroissanceChiffreAffaires) {
		return true
	}

	return false
}

// SetTauxCroissanceChiffreAffaires gets a reference to the given float32 and assigns it to the TauxCroissanceChiffreAffaires field.
func (o *Ratios) SetTauxCroissanceChiffreAffaires(v float32) {
	o.TauxCroissanceChiffreAffaires = &v
}

// GetTauxMargeBrute returns the TauxMargeBrute field value if set, zero value otherwise.
func (o *Ratios) GetTauxMargeBrute() float32 {
	if o == nil || IsNil(o.TauxMargeBrute) {
		var ret float32
		return ret
	}
	return *o.TauxMargeBrute
}

// GetTauxMargeBruteOk returns a tuple with the TauxMargeBrute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetTauxMargeBruteOk() (*float32, bool) {
	if o == nil || IsNil(o.TauxMargeBrute) {
		return nil, false
	}
	return o.TauxMargeBrute, true
}

// HasTauxMargeBrute returns a boolean if a field has been set.
func (o *Ratios) HasTauxMargeBrute() bool {
	if o != nil && !IsNil(o.TauxMargeBrute) {
		return true
	}

	return false
}

// SetTauxMargeBrute gets a reference to the given float32 and assigns it to the TauxMargeBrute field.
func (o *Ratios) SetTauxMargeBrute(v float32) {
	o.TauxMargeBrute = &v
}

// GetTauxMargeEBITDA returns the TauxMargeEBITDA field value if set, zero value otherwise.
func (o *Ratios) GetTauxMargeEBITDA() float32 {
	if o == nil || IsNil(o.TauxMargeEBITDA) {
		var ret float32
		return ret
	}
	return *o.TauxMargeEBITDA
}

// GetTauxMargeEBITDAOk returns a tuple with the TauxMargeEBITDA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetTauxMargeEBITDAOk() (*float32, bool) {
	if o == nil || IsNil(o.TauxMargeEBITDA) {
		return nil, false
	}
	return o.TauxMargeEBITDA, true
}

// HasTauxMargeEBITDA returns a boolean if a field has been set.
func (o *Ratios) HasTauxMargeEBITDA() bool {
	if o != nil && !IsNil(o.TauxMargeEBITDA) {
		return true
	}

	return false
}

// SetTauxMargeEBITDA gets a reference to the given float32 and assigns it to the TauxMargeEBITDA field.
func (o *Ratios) SetTauxMargeEBITDA(v float32) {
	o.TauxMargeEBITDA = &v
}

// GetTauxMargeOperationnelle returns the TauxMargeOperationnelle field value if set, zero value otherwise.
func (o *Ratios) GetTauxMargeOperationnelle() float32 {
	if o == nil || IsNil(o.TauxMargeOperationnelle) {
		var ret float32
		return ret
	}
	return *o.TauxMargeOperationnelle
}

// GetTauxMargeOperationnelleOk returns a tuple with the TauxMargeOperationnelle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetTauxMargeOperationnelleOk() (*float32, bool) {
	if o == nil || IsNil(o.TauxMargeOperationnelle) {
		return nil, false
	}
	return o.TauxMargeOperationnelle, true
}

// HasTauxMargeOperationnelle returns a boolean if a field has been set.
func (o *Ratios) HasTauxMargeOperationnelle() bool {
	if o != nil && !IsNil(o.TauxMargeOperationnelle) {
		return true
	}

	return false
}

// SetTauxMargeOperationnelle gets a reference to the given float32 and assigns it to the TauxMargeOperationnelle field.
func (o *Ratios) SetTauxMargeOperationnelle(v float32) {
	o.TauxMargeOperationnelle = &v
}

// GetBFR returns the BFR field value if set, zero value otherwise.
func (o *Ratios) GetBFR() float32 {
	if o == nil || IsNil(o.BFR) {
		var ret float32
		return ret
	}
	return *o.BFR
}

// GetBFROk returns a tuple with the BFR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetBFROk() (*float32, bool) {
	if o == nil || IsNil(o.BFR) {
		return nil, false
	}
	return o.BFR, true
}

// HasBFR returns a boolean if a field has been set.
func (o *Ratios) HasBFR() bool {
	if o != nil && !IsNil(o.BFR) {
		return true
	}

	return false
}

// SetBFR gets a reference to the given float32 and assigns it to the BFR field.
func (o *Ratios) SetBFR(v float32) {
	o.BFR = &v
}

// GetBFRExploitation returns the BFRExploitation field value if set, zero value otherwise.
func (o *Ratios) GetBFRExploitation() float32 {
	if o == nil || IsNil(o.BFRExploitation) {
		var ret float32
		return ret
	}
	return *o.BFRExploitation
}

// GetBFRExploitationOk returns a tuple with the BFRExploitation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetBFRExploitationOk() (*float32, bool) {
	if o == nil || IsNil(o.BFRExploitation) {
		return nil, false
	}
	return o.BFRExploitation, true
}

// HasBFRExploitation returns a boolean if a field has been set.
func (o *Ratios) HasBFRExploitation() bool {
	if o != nil && !IsNil(o.BFRExploitation) {
		return true
	}

	return false
}

// SetBFRExploitation gets a reference to the given float32 and assigns it to the BFRExploitation field.
func (o *Ratios) SetBFRExploitation(v float32) {
	o.BFRExploitation = &v
}

// GetBFRHorsExploitation returns the BFRHorsExploitation field value if set, zero value otherwise.
func (o *Ratios) GetBFRHorsExploitation() float32 {
	if o == nil || IsNil(o.BFRHorsExploitation) {
		var ret float32
		return ret
	}
	return *o.BFRHorsExploitation
}

// GetBFRHorsExploitationOk returns a tuple with the BFRHorsExploitation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetBFRHorsExploitationOk() (*float32, bool) {
	if o == nil || IsNil(o.BFRHorsExploitation) {
		return nil, false
	}
	return o.BFRHorsExploitation, true
}

// HasBFRHorsExploitation returns a boolean if a field has been set.
func (o *Ratios) HasBFRHorsExploitation() bool {
	if o != nil && !IsNil(o.BFRHorsExploitation) {
		return true
	}

	return false
}

// SetBFRHorsExploitation gets a reference to the given float32 and assigns it to the BFRHorsExploitation field.
func (o *Ratios) SetBFRHorsExploitation(v float32) {
	o.BFRHorsExploitation = &v
}

// GetBFRJoursCA returns the BFRJoursCA field value if set, zero value otherwise.
func (o *Ratios) GetBFRJoursCA() float32 {
	if o == nil || IsNil(o.BFRJoursCA) {
		var ret float32
		return ret
	}
	return *o.BFRJoursCA
}

// GetBFRJoursCAOk returns a tuple with the BFRJoursCA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetBFRJoursCAOk() (*float32, bool) {
	if o == nil || IsNil(o.BFRJoursCA) {
		return nil, false
	}
	return o.BFRJoursCA, true
}

// HasBFRJoursCA returns a boolean if a field has been set.
func (o *Ratios) HasBFRJoursCA() bool {
	if o != nil && !IsNil(o.BFRJoursCA) {
		return true
	}

	return false
}

// SetBFRJoursCA gets a reference to the given float32 and assigns it to the BFRJoursCA field.
func (o *Ratios) SetBFRJoursCA(v float32) {
	o.BFRJoursCA = &v
}

// GetBFRExploitationJoursCA returns the BFRExploitationJoursCA field value if set, zero value otherwise.
func (o *Ratios) GetBFRExploitationJoursCA() float32 {
	if o == nil || IsNil(o.BFRExploitationJoursCA) {
		var ret float32
		return ret
	}
	return *o.BFRExploitationJoursCA
}

// GetBFRExploitationJoursCAOk returns a tuple with the BFRExploitationJoursCA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetBFRExploitationJoursCAOk() (*float32, bool) {
	if o == nil || IsNil(o.BFRExploitationJoursCA) {
		return nil, false
	}
	return o.BFRExploitationJoursCA, true
}

// HasBFRExploitationJoursCA returns a boolean if a field has been set.
func (o *Ratios) HasBFRExploitationJoursCA() bool {
	if o != nil && !IsNil(o.BFRExploitationJoursCA) {
		return true
	}

	return false
}

// SetBFRExploitationJoursCA gets a reference to the given float32 and assigns it to the BFRExploitationJoursCA field.
func (o *Ratios) SetBFRExploitationJoursCA(v float32) {
	o.BFRExploitationJoursCA = &v
}

// GetBFRHorsExploitationJoursCA returns the BFRHorsExploitationJoursCA field value if set, zero value otherwise.
func (o *Ratios) GetBFRHorsExploitationJoursCA() float32 {
	if o == nil || IsNil(o.BFRHorsExploitationJoursCA) {
		var ret float32
		return ret
	}
	return *o.BFRHorsExploitationJoursCA
}

// GetBFRHorsExploitationJoursCAOk returns a tuple with the BFRHorsExploitationJoursCA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetBFRHorsExploitationJoursCAOk() (*float32, bool) {
	if o == nil || IsNil(o.BFRHorsExploitationJoursCA) {
		return nil, false
	}
	return o.BFRHorsExploitationJoursCA, true
}

// HasBFRHorsExploitationJoursCA returns a boolean if a field has been set.
func (o *Ratios) HasBFRHorsExploitationJoursCA() bool {
	if o != nil && !IsNil(o.BFRHorsExploitationJoursCA) {
		return true
	}

	return false
}

// SetBFRHorsExploitationJoursCA gets a reference to the given float32 and assigns it to the BFRHorsExploitationJoursCA field.
func (o *Ratios) SetBFRHorsExploitationJoursCA(v float32) {
	o.BFRHorsExploitationJoursCA = &v
}

// GetDelaiPaiementClientsJours returns the DelaiPaiementClientsJours field value if set, zero value otherwise.
func (o *Ratios) GetDelaiPaiementClientsJours() float32 {
	if o == nil || IsNil(o.DelaiPaiementClientsJours) {
		var ret float32
		return ret
	}
	return *o.DelaiPaiementClientsJours
}

// GetDelaiPaiementClientsJoursOk returns a tuple with the DelaiPaiementClientsJours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetDelaiPaiementClientsJoursOk() (*float32, bool) {
	if o == nil || IsNil(o.DelaiPaiementClientsJours) {
		return nil, false
	}
	return o.DelaiPaiementClientsJours, true
}

// HasDelaiPaiementClientsJours returns a boolean if a field has been set.
func (o *Ratios) HasDelaiPaiementClientsJours() bool {
	if o != nil && !IsNil(o.DelaiPaiementClientsJours) {
		return true
	}

	return false
}

// SetDelaiPaiementClientsJours gets a reference to the given float32 and assigns it to the DelaiPaiementClientsJours field.
func (o *Ratios) SetDelaiPaiementClientsJours(v float32) {
	o.DelaiPaiementClientsJours = &v
}

// GetDelaiPaiementFournisseursJours returns the DelaiPaiementFournisseursJours field value if set, zero value otherwise.
func (o *Ratios) GetDelaiPaiementFournisseursJours() float32 {
	if o == nil || IsNil(o.DelaiPaiementFournisseursJours) {
		var ret float32
		return ret
	}
	return *o.DelaiPaiementFournisseursJours
}

// GetDelaiPaiementFournisseursJoursOk returns a tuple with the DelaiPaiementFournisseursJours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetDelaiPaiementFournisseursJoursOk() (*float32, bool) {
	if o == nil || IsNil(o.DelaiPaiementFournisseursJours) {
		return nil, false
	}
	return o.DelaiPaiementFournisseursJours, true
}

// HasDelaiPaiementFournisseursJours returns a boolean if a field has been set.
func (o *Ratios) HasDelaiPaiementFournisseursJours() bool {
	if o != nil && !IsNil(o.DelaiPaiementFournisseursJours) {
		return true
	}

	return false
}

// SetDelaiPaiementFournisseursJours gets a reference to the given float32 and assigns it to the DelaiPaiementFournisseursJours field.
func (o *Ratios) SetDelaiPaiementFournisseursJours(v float32) {
	o.DelaiPaiementFournisseursJours = &v
}

// GetRatioStockCAJours returns the RatioStockCAJours field value if set, zero value otherwise.
func (o *Ratios) GetRatioStockCAJours() float32 {
	if o == nil || IsNil(o.RatioStockCAJours) {
		var ret float32
		return ret
	}
	return *o.RatioStockCAJours
}

// GetRatioStockCAJoursOk returns a tuple with the RatioStockCAJours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetRatioStockCAJoursOk() (*float32, bool) {
	if o == nil || IsNil(o.RatioStockCAJours) {
		return nil, false
	}
	return o.RatioStockCAJours, true
}

// HasRatioStockCAJours returns a boolean if a field has been set.
func (o *Ratios) HasRatioStockCAJours() bool {
	if o != nil && !IsNil(o.RatioStockCAJours) {
		return true
	}

	return false
}

// SetRatioStockCAJours gets a reference to the given float32 and assigns it to the RatioStockCAJours field.
func (o *Ratios) SetRatioStockCAJours(v float32) {
	o.RatioStockCAJours = &v
}

// GetCapaciteAutofinancement returns the CapaciteAutofinancement field value if set, zero value otherwise.
func (o *Ratios) GetCapaciteAutofinancement() float32 {
	if o == nil || IsNil(o.CapaciteAutofinancement) {
		var ret float32
		return ret
	}
	return *o.CapaciteAutofinancement
}

// GetCapaciteAutofinancementOk returns a tuple with the CapaciteAutofinancement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetCapaciteAutofinancementOk() (*float32, bool) {
	if o == nil || IsNil(o.CapaciteAutofinancement) {
		return nil, false
	}
	return o.CapaciteAutofinancement, true
}

// HasCapaciteAutofinancement returns a boolean if a field has been set.
func (o *Ratios) HasCapaciteAutofinancement() bool {
	if o != nil && !IsNil(o.CapaciteAutofinancement) {
		return true
	}

	return false
}

// SetCapaciteAutofinancement gets a reference to the given float32 and assigns it to the CapaciteAutofinancement field.
func (o *Ratios) SetCapaciteAutofinancement(v float32) {
	o.CapaciteAutofinancement = &v
}

// GetCapaciteAutofinancementCA returns the CapaciteAutofinancementCA field value if set, zero value otherwise.
func (o *Ratios) GetCapaciteAutofinancementCA() float32 {
	if o == nil || IsNil(o.CapaciteAutofinancementCA) {
		var ret float32
		return ret
	}
	return *o.CapaciteAutofinancementCA
}

// GetCapaciteAutofinancementCAOk returns a tuple with the CapaciteAutofinancementCA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetCapaciteAutofinancementCAOk() (*float32, bool) {
	if o == nil || IsNil(o.CapaciteAutofinancementCA) {
		return nil, false
	}
	return o.CapaciteAutofinancementCA, true
}

// HasCapaciteAutofinancementCA returns a boolean if a field has been set.
func (o *Ratios) HasCapaciteAutofinancementCA() bool {
	if o != nil && !IsNil(o.CapaciteAutofinancementCA) {
		return true
	}

	return false
}

// SetCapaciteAutofinancementCA gets a reference to the given float32 and assigns it to the CapaciteAutofinancementCA field.
func (o *Ratios) SetCapaciteAutofinancementCA(v float32) {
	o.CapaciteAutofinancementCA = &v
}

// GetFondsRoulementNetGlobal returns the FondsRoulementNetGlobal field value if set, zero value otherwise.
func (o *Ratios) GetFondsRoulementNetGlobal() float32 {
	if o == nil || IsNil(o.FondsRoulementNetGlobal) {
		var ret float32
		return ret
	}
	return *o.FondsRoulementNetGlobal
}

// GetFondsRoulementNetGlobalOk returns a tuple with the FondsRoulementNetGlobal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetFondsRoulementNetGlobalOk() (*float32, bool) {
	if o == nil || IsNil(o.FondsRoulementNetGlobal) {
		return nil, false
	}
	return o.FondsRoulementNetGlobal, true
}

// HasFondsRoulementNetGlobal returns a boolean if a field has been set.
func (o *Ratios) HasFondsRoulementNetGlobal() bool {
	if o != nil && !IsNil(o.FondsRoulementNetGlobal) {
		return true
	}

	return false
}

// SetFondsRoulementNetGlobal gets a reference to the given float32 and assigns it to the FondsRoulementNetGlobal field.
func (o *Ratios) SetFondsRoulementNetGlobal(v float32) {
	o.FondsRoulementNetGlobal = &v
}

// GetCouvertureBFR returns the CouvertureBFR field value if set, zero value otherwise.
func (o *Ratios) GetCouvertureBFR() float32 {
	if o == nil || IsNil(o.CouvertureBFR) {
		var ret float32
		return ret
	}
	return *o.CouvertureBFR
}

// GetCouvertureBFROk returns a tuple with the CouvertureBFR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetCouvertureBFROk() (*float32, bool) {
	if o == nil || IsNil(o.CouvertureBFR) {
		return nil, false
	}
	return o.CouvertureBFR, true
}

// HasCouvertureBFR returns a boolean if a field has been set.
func (o *Ratios) HasCouvertureBFR() bool {
	if o != nil && !IsNil(o.CouvertureBFR) {
		return true
	}

	return false
}

// SetCouvertureBFR gets a reference to the given float32 and assigns it to the CouvertureBFR field.
func (o *Ratios) SetCouvertureBFR(v float32) {
	o.CouvertureBFR = &v
}

// GetTresorerie returns the Tresorerie field value if set, zero value otherwise.
func (o *Ratios) GetTresorerie() float32 {
	if o == nil || IsNil(o.Tresorerie) {
		var ret float32
		return ret
	}
	return *o.Tresorerie
}

// GetTresorerieOk returns a tuple with the Tresorerie field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetTresorerieOk() (*float32, bool) {
	if o == nil || IsNil(o.Tresorerie) {
		return nil, false
	}
	return o.Tresorerie, true
}

// HasTresorerie returns a boolean if a field has been set.
func (o *Ratios) HasTresorerie() bool {
	if o != nil && !IsNil(o.Tresorerie) {
		return true
	}

	return false
}

// SetTresorerie gets a reference to the given float32 and assigns it to the Tresorerie field.
func (o *Ratios) SetTresorerie(v float32) {
	o.Tresorerie = &v
}

// GetDettesFinancieres returns the DettesFinancieres field value if set, zero value otherwise.
func (o *Ratios) GetDettesFinancieres() float32 {
	if o == nil || IsNil(o.DettesFinancieres) {
		var ret float32
		return ret
	}
	return *o.DettesFinancieres
}

// GetDettesFinancieresOk returns a tuple with the DettesFinancieres field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetDettesFinancieresOk() (*float32, bool) {
	if o == nil || IsNil(o.DettesFinancieres) {
		return nil, false
	}
	return o.DettesFinancieres, true
}

// HasDettesFinancieres returns a boolean if a field has been set.
func (o *Ratios) HasDettesFinancieres() bool {
	if o != nil && !IsNil(o.DettesFinancieres) {
		return true
	}

	return false
}

// SetDettesFinancieres gets a reference to the given float32 and assigns it to the DettesFinancieres field.
func (o *Ratios) SetDettesFinancieres(v float32) {
	o.DettesFinancieres = &v
}

// GetCapaciteRemboursement returns the CapaciteRemboursement field value if set, zero value otherwise.
func (o *Ratios) GetCapaciteRemboursement() float32 {
	if o == nil || IsNil(o.CapaciteRemboursement) {
		var ret float32
		return ret
	}
	return *o.CapaciteRemboursement
}

// GetCapaciteRemboursementOk returns a tuple with the CapaciteRemboursement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetCapaciteRemboursementOk() (*float32, bool) {
	if o == nil || IsNil(o.CapaciteRemboursement) {
		return nil, false
	}
	return o.CapaciteRemboursement, true
}

// HasCapaciteRemboursement returns a boolean if a field has been set.
func (o *Ratios) HasCapaciteRemboursement() bool {
	if o != nil && !IsNil(o.CapaciteRemboursement) {
		return true
	}

	return false
}

// SetCapaciteRemboursement gets a reference to the given float32 and assigns it to the CapaciteRemboursement field.
func (o *Ratios) SetCapaciteRemboursement(v float32) {
	o.CapaciteRemboursement = &v
}

// GetRatioEndettement returns the RatioEndettement field value if set, zero value otherwise.
func (o *Ratios) GetRatioEndettement() float32 {
	if o == nil || IsNil(o.RatioEndettement) {
		var ret float32
		return ret
	}
	return *o.RatioEndettement
}

// GetRatioEndettementOk returns a tuple with the RatioEndettement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetRatioEndettementOk() (*float32, bool) {
	if o == nil || IsNil(o.RatioEndettement) {
		return nil, false
	}
	return o.RatioEndettement, true
}

// HasRatioEndettement returns a boolean if a field has been set.
func (o *Ratios) HasRatioEndettement() bool {
	if o != nil && !IsNil(o.RatioEndettement) {
		return true
	}

	return false
}

// SetRatioEndettement gets a reference to the given float32 and assigns it to the RatioEndettement field.
func (o *Ratios) SetRatioEndettement(v float32) {
	o.RatioEndettement = &v
}

// GetAutonomieFinanciere returns the AutonomieFinanciere field value if set, zero value otherwise.
func (o *Ratios) GetAutonomieFinanciere() float32 {
	if o == nil || IsNil(o.AutonomieFinanciere) {
		var ret float32
		return ret
	}
	return *o.AutonomieFinanciere
}

// GetAutonomieFinanciereOk returns a tuple with the AutonomieFinanciere field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetAutonomieFinanciereOk() (*float32, bool) {
	if o == nil || IsNil(o.AutonomieFinanciere) {
		return nil, false
	}
	return o.AutonomieFinanciere, true
}

// HasAutonomieFinanciere returns a boolean if a field has been set.
func (o *Ratios) HasAutonomieFinanciere() bool {
	if o != nil && !IsNil(o.AutonomieFinanciere) {
		return true
	}

	return false
}

// SetAutonomieFinanciere gets a reference to the given float32 and assigns it to the AutonomieFinanciere field.
func (o *Ratios) SetAutonomieFinanciere(v float32) {
	o.AutonomieFinanciere = &v
}

// GetTauxLevier returns the TauxLevier field value if set, zero value otherwise.
func (o *Ratios) GetTauxLevier() float32 {
	if o == nil || IsNil(o.TauxLevier) {
		var ret float32
		return ret
	}
	return *o.TauxLevier
}

// GetTauxLevierOk returns a tuple with the TauxLevier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetTauxLevierOk() (*float32, bool) {
	if o == nil || IsNil(o.TauxLevier) {
		return nil, false
	}
	return o.TauxLevier, true
}

// HasTauxLevier returns a boolean if a field has been set.
func (o *Ratios) HasTauxLevier() bool {
	if o != nil && !IsNil(o.TauxLevier) {
		return true
	}

	return false
}

// SetTauxLevier gets a reference to the given float32 and assigns it to the TauxLevier field.
func (o *Ratios) SetTauxLevier(v float32) {
	o.TauxLevier = &v
}

// GetEtatDettes1AnAuPlus returns the EtatDettes1AnAuPlus field value if set, zero value otherwise.
func (o *Ratios) GetEtatDettes1AnAuPlus() float32 {
	if o == nil || IsNil(o.EtatDettes1AnAuPlus) {
		var ret float32
		return ret
	}
	return *o.EtatDettes1AnAuPlus
}

// GetEtatDettes1AnAuPlusOk returns a tuple with the EtatDettes1AnAuPlus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetEtatDettes1AnAuPlusOk() (*float32, bool) {
	if o == nil || IsNil(o.EtatDettes1AnAuPlus) {
		return nil, false
	}
	return o.EtatDettes1AnAuPlus, true
}

// HasEtatDettes1AnAuPlus returns a boolean if a field has been set.
func (o *Ratios) HasEtatDettes1AnAuPlus() bool {
	if o != nil && !IsNil(o.EtatDettes1AnAuPlus) {
		return true
	}

	return false
}

// SetEtatDettes1AnAuPlus gets a reference to the given float32 and assigns it to the EtatDettes1AnAuPlus field.
func (o *Ratios) SetEtatDettes1AnAuPlus(v float32) {
	o.EtatDettes1AnAuPlus = &v
}

// GetLiquiditeGenerale returns the LiquiditeGenerale field value if set, zero value otherwise.
func (o *Ratios) GetLiquiditeGenerale() float32 {
	if o == nil || IsNil(o.LiquiditeGenerale) {
		var ret float32
		return ret
	}
	return *o.LiquiditeGenerale
}

// GetLiquiditeGeneraleOk returns a tuple with the LiquiditeGenerale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetLiquiditeGeneraleOk() (*float32, bool) {
	if o == nil || IsNil(o.LiquiditeGenerale) {
		return nil, false
	}
	return o.LiquiditeGenerale, true
}

// HasLiquiditeGenerale returns a boolean if a field has been set.
func (o *Ratios) HasLiquiditeGenerale() bool {
	if o != nil && !IsNil(o.LiquiditeGenerale) {
		return true
	}

	return false
}

// SetLiquiditeGenerale gets a reference to the given float32 and assigns it to the LiquiditeGenerale field.
func (o *Ratios) SetLiquiditeGenerale(v float32) {
	o.LiquiditeGenerale = &v
}

// GetCouvertureDettes returns the CouvertureDettes field value if set, zero value otherwise.
func (o *Ratios) GetCouvertureDettes() float32 {
	if o == nil || IsNil(o.CouvertureDettes) {
		var ret float32
		return ret
	}
	return *o.CouvertureDettes
}

// GetCouvertureDettesOk returns a tuple with the CouvertureDettes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetCouvertureDettesOk() (*float32, bool) {
	if o == nil || IsNil(o.CouvertureDettes) {
		return nil, false
	}
	return o.CouvertureDettes, true
}

// HasCouvertureDettes returns a boolean if a field has been set.
func (o *Ratios) HasCouvertureDettes() bool {
	if o != nil && !IsNil(o.CouvertureDettes) {
		return true
	}

	return false
}

// SetCouvertureDettes gets a reference to the given float32 and assigns it to the CouvertureDettes field.
func (o *Ratios) SetCouvertureDettes(v float32) {
	o.CouvertureDettes = &v
}

// GetMargeNette returns the MargeNette field value if set, zero value otherwise.
func (o *Ratios) GetMargeNette() float32 {
	if o == nil || IsNil(o.MargeNette) {
		var ret float32
		return ret
	}
	return *o.MargeNette
}

// GetMargeNetteOk returns a tuple with the MargeNette field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetMargeNetteOk() (*float32, bool) {
	if o == nil || IsNil(o.MargeNette) {
		return nil, false
	}
	return o.MargeNette, true
}

// HasMargeNette returns a boolean if a field has been set.
func (o *Ratios) HasMargeNette() bool {
	if o != nil && !IsNil(o.MargeNette) {
		return true
	}

	return false
}

// SetMargeNette gets a reference to the given float32 and assigns it to the MargeNette field.
func (o *Ratios) SetMargeNette(v float32) {
	o.MargeNette = &v
}

// GetRentabiliteFondsPropres returns the RentabiliteFondsPropres field value if set, zero value otherwise.
func (o *Ratios) GetRentabiliteFondsPropres() float32 {
	if o == nil || IsNil(o.RentabiliteFondsPropres) {
		var ret float32
		return ret
	}
	return *o.RentabiliteFondsPropres
}

// GetRentabiliteFondsPropresOk returns a tuple with the RentabiliteFondsPropres field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetRentabiliteFondsPropresOk() (*float32, bool) {
	if o == nil || IsNil(o.RentabiliteFondsPropres) {
		return nil, false
	}
	return o.RentabiliteFondsPropres, true
}

// HasRentabiliteFondsPropres returns a boolean if a field has been set.
func (o *Ratios) HasRentabiliteFondsPropres() bool {
	if o != nil && !IsNil(o.RentabiliteFondsPropres) {
		return true
	}

	return false
}

// SetRentabiliteFondsPropres gets a reference to the given float32 and assigns it to the RentabiliteFondsPropres field.
func (o *Ratios) SetRentabiliteFondsPropres(v float32) {
	o.RentabiliteFondsPropres = &v
}

// GetRentabiliteEconomique returns the RentabiliteEconomique field value if set, zero value otherwise.
func (o *Ratios) GetRentabiliteEconomique() float32 {
	if o == nil || IsNil(o.RentabiliteEconomique) {
		var ret float32
		return ret
	}
	return *o.RentabiliteEconomique
}

// GetRentabiliteEconomiqueOk returns a tuple with the RentabiliteEconomique field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetRentabiliteEconomiqueOk() (*float32, bool) {
	if o == nil || IsNil(o.RentabiliteEconomique) {
		return nil, false
	}
	return o.RentabiliteEconomique, true
}

// HasRentabiliteEconomique returns a boolean if a field has been set.
func (o *Ratios) HasRentabiliteEconomique() bool {
	if o != nil && !IsNil(o.RentabiliteEconomique) {
		return true
	}

	return false
}

// SetRentabiliteEconomique gets a reference to the given float32 and assigns it to the RentabiliteEconomique field.
func (o *Ratios) SetRentabiliteEconomique(v float32) {
	o.RentabiliteEconomique = &v
}

// GetValeurAjoutee returns the ValeurAjoutee field value if set, zero value otherwise.
func (o *Ratios) GetValeurAjoutee() float32 {
	if o == nil || IsNil(o.ValeurAjoutee) {
		var ret float32
		return ret
	}
	return *o.ValeurAjoutee
}

// GetValeurAjouteeOk returns a tuple with the ValeurAjoutee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetValeurAjouteeOk() (*float32, bool) {
	if o == nil || IsNil(o.ValeurAjoutee) {
		return nil, false
	}
	return o.ValeurAjoutee, true
}

// HasValeurAjoutee returns a boolean if a field has been set.
func (o *Ratios) HasValeurAjoutee() bool {
	if o != nil && !IsNil(o.ValeurAjoutee) {
		return true
	}

	return false
}

// SetValeurAjoutee gets a reference to the given float32 and assigns it to the ValeurAjoutee field.
func (o *Ratios) SetValeurAjoutee(v float32) {
	o.ValeurAjoutee = &v
}

// GetValeurAjouteeCA returns the ValeurAjouteeCA field value if set, zero value otherwise.
func (o *Ratios) GetValeurAjouteeCA() float32 {
	if o == nil || IsNil(o.ValeurAjouteeCA) {
		var ret float32
		return ret
	}
	return *o.ValeurAjouteeCA
}

// GetValeurAjouteeCAOk returns a tuple with the ValeurAjouteeCA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetValeurAjouteeCAOk() (*float32, bool) {
	if o == nil || IsNil(o.ValeurAjouteeCA) {
		return nil, false
	}
	return o.ValeurAjouteeCA, true
}

// HasValeurAjouteeCA returns a boolean if a field has been set.
func (o *Ratios) HasValeurAjouteeCA() bool {
	if o != nil && !IsNil(o.ValeurAjouteeCA) {
		return true
	}

	return false
}

// SetValeurAjouteeCA gets a reference to the given float32 and assigns it to the ValeurAjouteeCA field.
func (o *Ratios) SetValeurAjouteeCA(v float32) {
	o.ValeurAjouteeCA = &v
}

// GetSalairesChargesSociales returns the SalairesChargesSociales field value if set, zero value otherwise.
func (o *Ratios) GetSalairesChargesSociales() float32 {
	if o == nil || IsNil(o.SalairesChargesSociales) {
		var ret float32
		return ret
	}
	return *o.SalairesChargesSociales
}

// GetSalairesChargesSocialesOk returns a tuple with the SalairesChargesSociales field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetSalairesChargesSocialesOk() (*float32, bool) {
	if o == nil || IsNil(o.SalairesChargesSociales) {
		return nil, false
	}
	return o.SalairesChargesSociales, true
}

// HasSalairesChargesSociales returns a boolean if a field has been set.
func (o *Ratios) HasSalairesChargesSociales() bool {
	if o != nil && !IsNil(o.SalairesChargesSociales) {
		return true
	}

	return false
}

// SetSalairesChargesSociales gets a reference to the given float32 and assigns it to the SalairesChargesSociales field.
func (o *Ratios) SetSalairesChargesSociales(v float32) {
	o.SalairesChargesSociales = &v
}

// GetSalairesCA returns the SalairesCA field value if set, zero value otherwise.
func (o *Ratios) GetSalairesCA() float32 {
	if o == nil || IsNil(o.SalairesCA) {
		var ret float32
		return ret
	}
	return *o.SalairesCA
}

// GetSalairesCAOk returns a tuple with the SalairesCA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetSalairesCAOk() (*float32, bool) {
	if o == nil || IsNil(o.SalairesCA) {
		return nil, false
	}
	return o.SalairesCA, true
}

// HasSalairesCA returns a boolean if a field has been set.
func (o *Ratios) HasSalairesCA() bool {
	if o != nil && !IsNil(o.SalairesCA) {
		return true
	}

	return false
}

// SetSalairesCA gets a reference to the given float32 and assigns it to the SalairesCA field.
func (o *Ratios) SetSalairesCA(v float32) {
	o.SalairesCA = &v
}

// GetImpotsTaxes returns the ImpotsTaxes field value if set, zero value otherwise.
func (o *Ratios) GetImpotsTaxes() float32 {
	if o == nil || IsNil(o.ImpotsTaxes) {
		var ret float32
		return ret
	}
	return *o.ImpotsTaxes
}

// GetImpotsTaxesOk returns a tuple with the ImpotsTaxes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ratios) GetImpotsTaxesOk() (*float32, bool) {
	if o == nil || IsNil(o.ImpotsTaxes) {
		return nil, false
	}
	return o.ImpotsTaxes, true
}

// HasImpotsTaxes returns a boolean if a field has been set.
func (o *Ratios) HasImpotsTaxes() bool {
	if o != nil && !IsNil(o.ImpotsTaxes) {
		return true
	}

	return false
}

// SetImpotsTaxes gets a reference to the given float32 and assigns it to the ImpotsTaxes field.
func (o *Ratios) SetImpotsTaxes(v float32) {
	o.ImpotsTaxes = &v
}

func (o Ratios) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Ratios) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChiffreAffaires) {
		toSerialize["chiffre_affaires"] = o.ChiffreAffaires
	}
	if !IsNil(o.Resultat) {
		toSerialize["resultat"] = o.Resultat
	}
	if !IsNil(o.Effectif) {
		toSerialize["effectif"] = o.Effectif
	}
	if !IsNil(o.MargeBrute) {
		toSerialize["marge_brute"] = o.MargeBrute
	}
	if !IsNil(o.ExcedentBrutExploitation) {
		toSerialize["excedent_brut_exploitation"] = o.ExcedentBrutExploitation
	}
	if !IsNil(o.ResultatExploitation) {
		toSerialize["resultat_exploitation"] = o.ResultatExploitation
	}
	if !IsNil(o.TauxCroissanceChiffreAffaires) {
		toSerialize["taux_croissance_chiffre_affaires"] = o.TauxCroissanceChiffreAffaires
	}
	if !IsNil(o.TauxMargeBrute) {
		toSerialize["taux_marge_brute"] = o.TauxMargeBrute
	}
	if !IsNil(o.TauxMargeEBITDA) {
		toSerialize["taux_marge_EBITDA"] = o.TauxMargeEBITDA
	}
	if !IsNil(o.TauxMargeOperationnelle) {
		toSerialize["taux_marge_operationnelle"] = o.TauxMargeOperationnelle
	}
	if !IsNil(o.BFR) {
		toSerialize["BFR"] = o.BFR
	}
	if !IsNil(o.BFRExploitation) {
		toSerialize["BFR_exploitation"] = o.BFRExploitation
	}
	if !IsNil(o.BFRHorsExploitation) {
		toSerialize["BFR_hors_exploitation"] = o.BFRHorsExploitation
	}
	if !IsNil(o.BFRJoursCA) {
		toSerialize["BFR_jours_CA"] = o.BFRJoursCA
	}
	if !IsNil(o.BFRExploitationJoursCA) {
		toSerialize["BFR_exploitation_jours_CA"] = o.BFRExploitationJoursCA
	}
	if !IsNil(o.BFRHorsExploitationJoursCA) {
		toSerialize["BFR_hors_exploitation_jours_CA"] = o.BFRHorsExploitationJoursCA
	}
	if !IsNil(o.DelaiPaiementClientsJours) {
		toSerialize["delai_paiement_clients_jours"] = o.DelaiPaiementClientsJours
	}
	if !IsNil(o.DelaiPaiementFournisseursJours) {
		toSerialize["delai_paiement_fournisseurs_jours"] = o.DelaiPaiementFournisseursJours
	}
	if !IsNil(o.RatioStockCAJours) {
		toSerialize["ratio_stock_CA_jours"] = o.RatioStockCAJours
	}
	if !IsNil(o.CapaciteAutofinancement) {
		toSerialize["capacite_autofinancement"] = o.CapaciteAutofinancement
	}
	if !IsNil(o.CapaciteAutofinancementCA) {
		toSerialize["capacite_autofinancement_CA"] = o.CapaciteAutofinancementCA
	}
	if !IsNil(o.FondsRoulementNetGlobal) {
		toSerialize["fonds_roulement_net_global"] = o.FondsRoulementNetGlobal
	}
	if !IsNil(o.CouvertureBFR) {
		toSerialize["couverture_BFR"] = o.CouvertureBFR
	}
	if !IsNil(o.Tresorerie) {
		toSerialize["tresorerie"] = o.Tresorerie
	}
	if !IsNil(o.DettesFinancieres) {
		toSerialize["dettes_financieres"] = o.DettesFinancieres
	}
	if !IsNil(o.CapaciteRemboursement) {
		toSerialize["capacite_remboursement"] = o.CapaciteRemboursement
	}
	if !IsNil(o.RatioEndettement) {
		toSerialize["ratio_endettement"] = o.RatioEndettement
	}
	if !IsNil(o.AutonomieFinanciere) {
		toSerialize["autonomie_financiere"] = o.AutonomieFinanciere
	}
	if !IsNil(o.TauxLevier) {
		toSerialize["taux_levier"] = o.TauxLevier
	}
	if !IsNil(o.EtatDettes1AnAuPlus) {
		toSerialize["etat_dettes_1_an_au_plus"] = o.EtatDettes1AnAuPlus
	}
	if !IsNil(o.LiquiditeGenerale) {
		toSerialize["liquidite_generale"] = o.LiquiditeGenerale
	}
	if !IsNil(o.CouvertureDettes) {
		toSerialize["couverture_dettes"] = o.CouvertureDettes
	}
	if !IsNil(o.MargeNette) {
		toSerialize["marge_nette"] = o.MargeNette
	}
	if !IsNil(o.RentabiliteFondsPropres) {
		toSerialize["rentabilite_fonds_propres"] = o.RentabiliteFondsPropres
	}
	if !IsNil(o.RentabiliteEconomique) {
		toSerialize["rentabilite_economique"] = o.RentabiliteEconomique
	}
	if !IsNil(o.ValeurAjoutee) {
		toSerialize["valeur_ajoutee"] = o.ValeurAjoutee
	}
	if !IsNil(o.ValeurAjouteeCA) {
		toSerialize["valeur_ajoutee_CA"] = o.ValeurAjouteeCA
	}
	if !IsNil(o.SalairesChargesSociales) {
		toSerialize["salaires_charges_sociales"] = o.SalairesChargesSociales
	}
	if !IsNil(o.SalairesCA) {
		toSerialize["salaires_CA"] = o.SalairesCA
	}
	if !IsNil(o.ImpotsTaxes) {
		toSerialize["impots_taxes"] = o.ImpotsTaxes
	}
	return toSerialize, nil
}

type NullableRatios struct {
	value *Ratios
	isSet bool
}

func (v NullableRatios) Get() *Ratios {
	return v.value
}

func (v *NullableRatios) Set(val *Ratios) {
	v.value = val
	v.isSet = true
}

func (v NullableRatios) IsSet() bool {
	return v.isSet
}

func (v *NullableRatios) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRatios(val *Ratios) *NullableRatios {
	return &NullableRatios{value: val, isSet: true}
}

func (v NullableRatios) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRatios) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


