/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EntrepriseFicheAllOfDetailsPartsVocationTitulaire type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntrepriseFicheAllOfDetailsPartsVocationTitulaire{}

// EntrepriseFicheAllOfDetailsPartsVocationTitulaire Détails des parts dont le bénéficiaire effectif a vocation à devenir titulaire.
type EntrepriseFicheAllOfDetailsPartsVocationTitulaire struct {
	// Parts dont le bénéficiaire effectif a vocation à devenir titulaire de façon directe, en pourcentage des parts totales.
	PourcentageDirectes *float32 `json:"pourcentage_directes,omitempty"`
	// Parts dont le bénéficiaire effectif a vocation à devenir titulaire de façon indirecte, en pourcentage des parts totales.
	PourcentageIndirectes *float32 `json:"pourcentage_indirectes,omitempty"`
	DetailsDirectes *EntrepriseFicheAllOfDetailsPartsVocationTitulaireDetailsDirectes `json:"details_directes,omitempty"`
	DetailsIndirectes *EntrepriseFicheAllOfDetailsPartsVocationTitulaireDetailsIndirectes `json:"details_indirectes,omitempty"`
}

// NewEntrepriseFicheAllOfDetailsPartsVocationTitulaire instantiates a new EntrepriseFicheAllOfDetailsPartsVocationTitulaire object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntrepriseFicheAllOfDetailsPartsVocationTitulaire() *EntrepriseFicheAllOfDetailsPartsVocationTitulaire {
	this := EntrepriseFicheAllOfDetailsPartsVocationTitulaire{}
	return &this
}

// NewEntrepriseFicheAllOfDetailsPartsVocationTitulaireWithDefaults instantiates a new EntrepriseFicheAllOfDetailsPartsVocationTitulaire object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntrepriseFicheAllOfDetailsPartsVocationTitulaireWithDefaults() *EntrepriseFicheAllOfDetailsPartsVocationTitulaire {
	this := EntrepriseFicheAllOfDetailsPartsVocationTitulaire{}
	return &this
}

// GetPourcentageDirectes returns the PourcentageDirectes field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) GetPourcentageDirectes() float32 {
	if o == nil || IsNil(o.PourcentageDirectes) {
		var ret float32
		return ret
	}
	return *o.PourcentageDirectes
}

// GetPourcentageDirectesOk returns a tuple with the PourcentageDirectes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) GetPourcentageDirectesOk() (*float32, bool) {
	if o == nil || IsNil(o.PourcentageDirectes) {
		return nil, false
	}
	return o.PourcentageDirectes, true
}

// HasPourcentageDirectes returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) HasPourcentageDirectes() bool {
	if o != nil && !IsNil(o.PourcentageDirectes) {
		return true
	}

	return false
}

// SetPourcentageDirectes gets a reference to the given float32 and assigns it to the PourcentageDirectes field.
func (o *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) SetPourcentageDirectes(v float32) {
	o.PourcentageDirectes = &v
}

// GetPourcentageIndirectes returns the PourcentageIndirectes field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) GetPourcentageIndirectes() float32 {
	if o == nil || IsNil(o.PourcentageIndirectes) {
		var ret float32
		return ret
	}
	return *o.PourcentageIndirectes
}

// GetPourcentageIndirectesOk returns a tuple with the PourcentageIndirectes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) GetPourcentageIndirectesOk() (*float32, bool) {
	if o == nil || IsNil(o.PourcentageIndirectes) {
		return nil, false
	}
	return o.PourcentageIndirectes, true
}

// HasPourcentageIndirectes returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) HasPourcentageIndirectes() bool {
	if o != nil && !IsNil(o.PourcentageIndirectes) {
		return true
	}

	return false
}

// SetPourcentageIndirectes gets a reference to the given float32 and assigns it to the PourcentageIndirectes field.
func (o *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) SetPourcentageIndirectes(v float32) {
	o.PourcentageIndirectes = &v
}

// GetDetailsDirectes returns the DetailsDirectes field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) GetDetailsDirectes() EntrepriseFicheAllOfDetailsPartsVocationTitulaireDetailsDirectes {
	if o == nil || IsNil(o.DetailsDirectes) {
		var ret EntrepriseFicheAllOfDetailsPartsVocationTitulaireDetailsDirectes
		return ret
	}
	return *o.DetailsDirectes
}

// GetDetailsDirectesOk returns a tuple with the DetailsDirectes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) GetDetailsDirectesOk() (*EntrepriseFicheAllOfDetailsPartsVocationTitulaireDetailsDirectes, bool) {
	if o == nil || IsNil(o.DetailsDirectes) {
		return nil, false
	}
	return o.DetailsDirectes, true
}

// HasDetailsDirectes returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) HasDetailsDirectes() bool {
	if o != nil && !IsNil(o.DetailsDirectes) {
		return true
	}

	return false
}

// SetDetailsDirectes gets a reference to the given EntrepriseFicheAllOfDetailsPartsVocationTitulaireDetailsDirectes and assigns it to the DetailsDirectes field.
func (o *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) SetDetailsDirectes(v EntrepriseFicheAllOfDetailsPartsVocationTitulaireDetailsDirectes) {
	o.DetailsDirectes = &v
}

// GetDetailsIndirectes returns the DetailsIndirectes field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) GetDetailsIndirectes() EntrepriseFicheAllOfDetailsPartsVocationTitulaireDetailsIndirectes {
	if o == nil || IsNil(o.DetailsIndirectes) {
		var ret EntrepriseFicheAllOfDetailsPartsVocationTitulaireDetailsIndirectes
		return ret
	}
	return *o.DetailsIndirectes
}

// GetDetailsIndirectesOk returns a tuple with the DetailsIndirectes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) GetDetailsIndirectesOk() (*EntrepriseFicheAllOfDetailsPartsVocationTitulaireDetailsIndirectes, bool) {
	if o == nil || IsNil(o.DetailsIndirectes) {
		return nil, false
	}
	return o.DetailsIndirectes, true
}

// HasDetailsIndirectes returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) HasDetailsIndirectes() bool {
	if o != nil && !IsNil(o.DetailsIndirectes) {
		return true
	}

	return false
}

// SetDetailsIndirectes gets a reference to the given EntrepriseFicheAllOfDetailsPartsVocationTitulaireDetailsIndirectes and assigns it to the DetailsIndirectes field.
func (o *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) SetDetailsIndirectes(v EntrepriseFicheAllOfDetailsPartsVocationTitulaireDetailsIndirectes) {
	o.DetailsIndirectes = &v
}

func (o EntrepriseFicheAllOfDetailsPartsVocationTitulaire) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntrepriseFicheAllOfDetailsPartsVocationTitulaire) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PourcentageDirectes) {
		toSerialize["pourcentage_directes"] = o.PourcentageDirectes
	}
	if !IsNil(o.PourcentageIndirectes) {
		toSerialize["pourcentage_indirectes"] = o.PourcentageIndirectes
	}
	if !IsNil(o.DetailsDirectes) {
		toSerialize["details_directes"] = o.DetailsDirectes
	}
	if !IsNil(o.DetailsIndirectes) {
		toSerialize["details_indirectes"] = o.DetailsIndirectes
	}
	return toSerialize, nil
}

type NullableEntrepriseFicheAllOfDetailsPartsVocationTitulaire struct {
	value *EntrepriseFicheAllOfDetailsPartsVocationTitulaire
	isSet bool
}

func (v NullableEntrepriseFicheAllOfDetailsPartsVocationTitulaire) Get() *EntrepriseFicheAllOfDetailsPartsVocationTitulaire {
	return v.value
}

func (v *NullableEntrepriseFicheAllOfDetailsPartsVocationTitulaire) Set(val *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) {
	v.value = val
	v.isSet = true
}

func (v NullableEntrepriseFicheAllOfDetailsPartsVocationTitulaire) IsSet() bool {
	return v.isSet
}

func (v *NullableEntrepriseFicheAllOfDetailsPartsVocationTitulaire) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntrepriseFicheAllOfDetailsPartsVocationTitulaire(val *EntrepriseFicheAllOfDetailsPartsVocationTitulaire) *NullableEntrepriseFicheAllOfDetailsPartsVocationTitulaire {
	return &NullableEntrepriseFicheAllOfDetailsPartsVocationTitulaire{value: val, isSet: true}
}

func (v NullableEntrepriseFicheAllOfDetailsPartsVocationTitulaire) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntrepriseFicheAllOfDetailsPartsVocationTitulaire) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


