/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EntrepriseFicheAllOfDetailsVotesDirects type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntrepriseFicheAllOfDetailsVotesDirects{}

// EntrepriseFicheAllOfDetailsVotesDirects Détails des droits de vote détenus de façon directe par le bénéficiaire effectif.
type EntrepriseFicheAllOfDetailsVotesDirects struct {
	// Droits de vote détenus de façon directe en pleine propriété par le bénéficiaire effectif, en pourcentage des droits de vote totaux.
	PourcentagePleinePropriete *float32 `json:"pourcentage_pleine_propriete,omitempty"`
	// Droits de vote détenus de façon directe en nue propriété par le bénéficiaire effectif, en pourcentage des droits de vote totaux.
	PourcentageNuePropriete *float32 `json:"pourcentage_nue_propriete,omitempty"`
	// Droits de vote détenus de façon directe en usufruit par le bénéficiaire effectif, en pourcentage des droits de vote totaux.
	PourcentageUsufruit *float32 `json:"pourcentage_usufruit,omitempty"`
}

// NewEntrepriseFicheAllOfDetailsVotesDirects instantiates a new EntrepriseFicheAllOfDetailsVotesDirects object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntrepriseFicheAllOfDetailsVotesDirects() *EntrepriseFicheAllOfDetailsVotesDirects {
	this := EntrepriseFicheAllOfDetailsVotesDirects{}
	return &this
}

// NewEntrepriseFicheAllOfDetailsVotesDirectsWithDefaults instantiates a new EntrepriseFicheAllOfDetailsVotesDirects object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntrepriseFicheAllOfDetailsVotesDirectsWithDefaults() *EntrepriseFicheAllOfDetailsVotesDirects {
	this := EntrepriseFicheAllOfDetailsVotesDirects{}
	return &this
}

// GetPourcentagePleinePropriete returns the PourcentagePleinePropriete field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfDetailsVotesDirects) GetPourcentagePleinePropriete() float32 {
	if o == nil || IsNil(o.PourcentagePleinePropriete) {
		var ret float32
		return ret
	}
	return *o.PourcentagePleinePropriete
}

// GetPourcentagePleineProprieteOk returns a tuple with the PourcentagePleinePropriete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfDetailsVotesDirects) GetPourcentagePleineProprieteOk() (*float32, bool) {
	if o == nil || IsNil(o.PourcentagePleinePropriete) {
		return nil, false
	}
	return o.PourcentagePleinePropriete, true
}

// HasPourcentagePleinePropriete returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfDetailsVotesDirects) HasPourcentagePleinePropriete() bool {
	if o != nil && !IsNil(o.PourcentagePleinePropriete) {
		return true
	}

	return false
}

// SetPourcentagePleinePropriete gets a reference to the given float32 and assigns it to the PourcentagePleinePropriete field.
func (o *EntrepriseFicheAllOfDetailsVotesDirects) SetPourcentagePleinePropriete(v float32) {
	o.PourcentagePleinePropriete = &v
}

// GetPourcentageNuePropriete returns the PourcentageNuePropriete field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfDetailsVotesDirects) GetPourcentageNuePropriete() float32 {
	if o == nil || IsNil(o.PourcentageNuePropriete) {
		var ret float32
		return ret
	}
	return *o.PourcentageNuePropriete
}

// GetPourcentageNueProprieteOk returns a tuple with the PourcentageNuePropriete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfDetailsVotesDirects) GetPourcentageNueProprieteOk() (*float32, bool) {
	if o == nil || IsNil(o.PourcentageNuePropriete) {
		return nil, false
	}
	return o.PourcentageNuePropriete, true
}

// HasPourcentageNuePropriete returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfDetailsVotesDirects) HasPourcentageNuePropriete() bool {
	if o != nil && !IsNil(o.PourcentageNuePropriete) {
		return true
	}

	return false
}

// SetPourcentageNuePropriete gets a reference to the given float32 and assigns it to the PourcentageNuePropriete field.
func (o *EntrepriseFicheAllOfDetailsVotesDirects) SetPourcentageNuePropriete(v float32) {
	o.PourcentageNuePropriete = &v
}

// GetPourcentageUsufruit returns the PourcentageUsufruit field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfDetailsVotesDirects) GetPourcentageUsufruit() float32 {
	if o == nil || IsNil(o.PourcentageUsufruit) {
		var ret float32
		return ret
	}
	return *o.PourcentageUsufruit
}

// GetPourcentageUsufruitOk returns a tuple with the PourcentageUsufruit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfDetailsVotesDirects) GetPourcentageUsufruitOk() (*float32, bool) {
	if o == nil || IsNil(o.PourcentageUsufruit) {
		return nil, false
	}
	return o.PourcentageUsufruit, true
}

// HasPourcentageUsufruit returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfDetailsVotesDirects) HasPourcentageUsufruit() bool {
	if o != nil && !IsNil(o.PourcentageUsufruit) {
		return true
	}

	return false
}

// SetPourcentageUsufruit gets a reference to the given float32 and assigns it to the PourcentageUsufruit field.
func (o *EntrepriseFicheAllOfDetailsVotesDirects) SetPourcentageUsufruit(v float32) {
	o.PourcentageUsufruit = &v
}

func (o EntrepriseFicheAllOfDetailsVotesDirects) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntrepriseFicheAllOfDetailsVotesDirects) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PourcentagePleinePropriete) {
		toSerialize["pourcentage_pleine_propriete"] = o.PourcentagePleinePropriete
	}
	if !IsNil(o.PourcentageNuePropriete) {
		toSerialize["pourcentage_nue_propriete"] = o.PourcentageNuePropriete
	}
	if !IsNil(o.PourcentageUsufruit) {
		toSerialize["pourcentage_usufruit"] = o.PourcentageUsufruit
	}
	return toSerialize, nil
}

type NullableEntrepriseFicheAllOfDetailsVotesDirects struct {
	value *EntrepriseFicheAllOfDetailsVotesDirects
	isSet bool
}

func (v NullableEntrepriseFicheAllOfDetailsVotesDirects) Get() *EntrepriseFicheAllOfDetailsVotesDirects {
	return v.value
}

func (v *NullableEntrepriseFicheAllOfDetailsVotesDirects) Set(val *EntrepriseFicheAllOfDetailsVotesDirects) {
	v.value = val
	v.isSet = true
}

func (v NullableEntrepriseFicheAllOfDetailsVotesDirects) IsSet() bool {
	return v.isSet
}

func (v *NullableEntrepriseFicheAllOfDetailsVotesDirects) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntrepriseFicheAllOfDetailsVotesDirects(val *EntrepriseFicheAllOfDetailsVotesDirects) *NullableEntrepriseFicheAllOfDetailsVotesDirects {
	return &NullableEntrepriseFicheAllOfDetailsVotesDirects{value: val, isSet: true}
}

func (v NullableEntrepriseFicheAllOfDetailsVotesDirects) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntrepriseFicheAllOfDetailsVotesDirects) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


