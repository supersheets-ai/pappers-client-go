/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BodaccRadiation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BodaccRadiation{}

// BodaccRadiation struct for BodaccRadiation
type BodaccRadiation struct {
	Bodacc
}

// NewBodaccRadiation instantiates a new BodaccRadiation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBodaccRadiation() *BodaccRadiation {
	this := BodaccRadiation{}
	return &this
}

// NewBodaccRadiationWithDefaults instantiates a new BodaccRadiation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBodaccRadiationWithDefaults() *BodaccRadiation {
	this := BodaccRadiation{}
	return &this
}

func (o BodaccRadiation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BodaccRadiation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedBodacc, errBodacc := json.Marshal(o.Bodacc)
	if errBodacc != nil {
		return map[string]interface{}{}, errBodacc
	}
	errBodacc = json.Unmarshal([]byte(serializedBodacc), &toSerialize)
	if errBodacc != nil {
		return map[string]interface{}{}, errBodacc
	}
	return toSerialize, nil
}

type NullableBodaccRadiation struct {
	value *BodaccRadiation
	isSet bool
}

func (v NullableBodaccRadiation) Get() *BodaccRadiation {
	return v.value
}

func (v *NullableBodaccRadiation) Set(val *BodaccRadiation) {
	v.value = val
	v.isSet = true
}

func (v NullableBodaccRadiation) IsSet() bool {
	return v.isSet
}

func (v *NullableBodaccRadiation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBodaccRadiation(val *BodaccRadiation) *NullableBodaccRadiation {
	return &NullableBodaccRadiation{value: val, isSet: true}
}

func (v NullableBodaccRadiation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBodaccRadiation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


