/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SurveillanceListeInformationsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SurveillanceListeInformationsRequest{}

// SurveillanceListeInformationsRequest struct for SurveillanceListeInformationsRequest
type SurveillanceListeInformationsRequest struct {
	// Tableau d'identifiant de notifications
	Notifications []string `json:"notifications,omitempty"`
	// Information à rajouter sur les notifications
	Informations *string `json:"informations,omitempty"`
}

// NewSurveillanceListeInformationsRequest instantiates a new SurveillanceListeInformationsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSurveillanceListeInformationsRequest() *SurveillanceListeInformationsRequest {
	this := SurveillanceListeInformationsRequest{}
	return &this
}

// NewSurveillanceListeInformationsRequestWithDefaults instantiates a new SurveillanceListeInformationsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSurveillanceListeInformationsRequestWithDefaults() *SurveillanceListeInformationsRequest {
	this := SurveillanceListeInformationsRequest{}
	return &this
}

// GetNotifications returns the Notifications field value if set, zero value otherwise.
func (o *SurveillanceListeInformationsRequest) GetNotifications() []string {
	if o == nil || IsNil(o.Notifications) {
		var ret []string
		return ret
	}
	return o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SurveillanceListeInformationsRequest) GetNotificationsOk() ([]string, bool) {
	if o == nil || IsNil(o.Notifications) {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *SurveillanceListeInformationsRequest) HasNotifications() bool {
	if o != nil && !IsNil(o.Notifications) {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given []string and assigns it to the Notifications field.
func (o *SurveillanceListeInformationsRequest) SetNotifications(v []string) {
	o.Notifications = v
}

// GetInformations returns the Informations field value if set, zero value otherwise.
func (o *SurveillanceListeInformationsRequest) GetInformations() string {
	if o == nil || IsNil(o.Informations) {
		var ret string
		return ret
	}
	return *o.Informations
}

// GetInformationsOk returns a tuple with the Informations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SurveillanceListeInformationsRequest) GetInformationsOk() (*string, bool) {
	if o == nil || IsNil(o.Informations) {
		return nil, false
	}
	return o.Informations, true
}

// HasInformations returns a boolean if a field has been set.
func (o *SurveillanceListeInformationsRequest) HasInformations() bool {
	if o != nil && !IsNil(o.Informations) {
		return true
	}

	return false
}

// SetInformations gets a reference to the given string and assigns it to the Informations field.
func (o *SurveillanceListeInformationsRequest) SetInformations(v string) {
	o.Informations = &v
}

func (o SurveillanceListeInformationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SurveillanceListeInformationsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Notifications) {
		toSerialize["notifications"] = o.Notifications
	}
	if !IsNil(o.Informations) {
		toSerialize["informations"] = o.Informations
	}
	return toSerialize, nil
}

type NullableSurveillanceListeInformationsRequest struct {
	value *SurveillanceListeInformationsRequest
	isSet bool
}

func (v NullableSurveillanceListeInformationsRequest) Get() *SurveillanceListeInformationsRequest {
	return v.value
}

func (v *NullableSurveillanceListeInformationsRequest) Set(val *SurveillanceListeInformationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSurveillanceListeInformationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSurveillanceListeInformationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSurveillanceListeInformationsRequest(val *SurveillanceListeInformationsRequest) *NullableSurveillanceListeInformationsRequest {
	return &NullableSurveillanceListeInformationsRequest{value: val, isSet: true}
}

func (v NullableSurveillanceListeInformationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSurveillanceListeInformationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


