/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RechercheDirigeants200ResponseResultatsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RechercheDirigeants200ResponseResultatsInner{}

// RechercheDirigeants200ResponseResultatsInner struct for RechercheDirigeants200ResponseResultatsInner
type RechercheDirigeants200ResponseResultatsInner struct {
	// Qualité du représentant.
	Qualite *string `json:"qualite,omitempty"`
	// Vrai si le représentant est une personne morale, faux si personne physique.
	PersonneMorale *bool `json:"personne_morale,omitempty"`
	// Date de prise de poste du représentant.
	DatePriseDePoste *string `json:"date_prise_de_poste,omitempty"`
	// Dénomination du représentant si personne morale.
	Denomination *string `json:"denomination,omitempty"`
	// Siren du représentant si personne morale.
	Siren *string `json:"siren,omitempty"`
	// Forme juridique du représentant dans le cas d'une personne morale.
	FormeJuridique *string `json:"forme_juridique,omitempty"`
	// Sexe supposé du représentant si personne physique. F pour féminin, M pour masculin. Ce champ est estimé à partir du prénom du représentant.
	Sexe *string `json:"sexe,omitempty"`
	// Nom du représentant.
	Nom *string `json:"nom,omitempty"`
	// Prénoms du représentant.
	Prenom *string `json:"prenom,omitempty"`
	// Prénom usuel du représentant.
	PrenomUsuel *string `json:"prenom_usuel,omitempty"`
	// Nom complet du représentant.
	NomComplet *string `json:"nom_complet,omitempty"`
	// Date de naissance du représentant.
	DateDeNaissance *string `json:"date_de_naissance,omitempty"`
	// Date de naissance formatée du représentant.
	DateDeNaissanceFormate *string `json:"date_de_naissance_formate,omitempty"`
	// Age du représentant.
	Age *int32 `json:"age,omitempty"`
	// Nationalité du représentant.
	Nationalite *string `json:"nationalite,omitempty"`
	// Code nationalité du représentant
	CodeNationalite *string `json:"code_nationalite,omitempty"`
	// Ville de naissance du représentant.
	VilleDeNaissance *string `json:"ville_de_naissance,omitempty"`
	// Pays de naissance du représentant.
	PaysDeNaissance *string `json:"pays_de_naissance,omitempty"`
	// Code du pays de naissance du représentant.
	CodePaysDeNaissance *string `json:"code_pays_de_naissance,omitempty"`
	// Première ligne de l'adresse du représentant.
	AdresseLigne1 *string `json:"adresse_ligne_1,omitempty"`
	// Deuxième ligne de l'adresse du représentant.
	AdresseLigne2 *string `json:"adresse_ligne_2,omitempty"`
	// Troisième ligne de l'adresse du représentant.
	AdresseLigne3 *string `json:"adresse_ligne_3,omitempty"`
	// Code postal du représentant.
	CodePostal *string `json:"code_postal,omitempty"`
	// Ville du représentant.
	Ville *string `json:"ville,omitempty"`
	// Pays du représentant.
	Pays *string `json:"pays,omitempty"`
	// Code du pays du représentant
	CodePays *string `json:"code_pays,omitempty"`
	// Vaut vrai si le représentant est toujours à son poste.
	Actuel *bool `json:"actuel,omitempty"`
	// Date de départ de poste dans le cas où le représentant n'est plus un représentant actuel, au format AAAA-MM-JJ.
	DateDepartDePoste *string `json:"date_depart_de_poste,omitempty"`
	// Liste des entreprises du dirigeant, dans la limite de 100 entreprises.
	Entreprises []EntrepriseRecherche `json:"entreprises,omitempty"`
	// Nombre d'entreprises du dirigeant au total
	NbEntreprisesTotal *int32 `json:"nb_entreprises_total,omitempty"`
}

// NewRechercheDirigeants200ResponseResultatsInner instantiates a new RechercheDirigeants200ResponseResultatsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRechercheDirigeants200ResponseResultatsInner() *RechercheDirigeants200ResponseResultatsInner {
	this := RechercheDirigeants200ResponseResultatsInner{}
	return &this
}

// NewRechercheDirigeants200ResponseResultatsInnerWithDefaults instantiates a new RechercheDirigeants200ResponseResultatsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRechercheDirigeants200ResponseResultatsInnerWithDefaults() *RechercheDirigeants200ResponseResultatsInner {
	this := RechercheDirigeants200ResponseResultatsInner{}
	return &this
}

// GetQualite returns the Qualite field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetQualite() string {
	if o == nil || IsNil(o.Qualite) {
		var ret string
		return ret
	}
	return *o.Qualite
}

// GetQualiteOk returns a tuple with the Qualite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetQualiteOk() (*string, bool) {
	if o == nil || IsNil(o.Qualite) {
		return nil, false
	}
	return o.Qualite, true
}

// HasQualite returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasQualite() bool {
	if o != nil && !IsNil(o.Qualite) {
		return true
	}

	return false
}

// SetQualite gets a reference to the given string and assigns it to the Qualite field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetQualite(v string) {
	o.Qualite = &v
}

// GetPersonneMorale returns the PersonneMorale field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetPersonneMorale() bool {
	if o == nil || IsNil(o.PersonneMorale) {
		var ret bool
		return ret
	}
	return *o.PersonneMorale
}

// GetPersonneMoraleOk returns a tuple with the PersonneMorale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetPersonneMoraleOk() (*bool, bool) {
	if o == nil || IsNil(o.PersonneMorale) {
		return nil, false
	}
	return o.PersonneMorale, true
}

// HasPersonneMorale returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasPersonneMorale() bool {
	if o != nil && !IsNil(o.PersonneMorale) {
		return true
	}

	return false
}

// SetPersonneMorale gets a reference to the given bool and assigns it to the PersonneMorale field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetPersonneMorale(v bool) {
	o.PersonneMorale = &v
}

// GetDatePriseDePoste returns the DatePriseDePoste field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetDatePriseDePoste() string {
	if o == nil || IsNil(o.DatePriseDePoste) {
		var ret string
		return ret
	}
	return *o.DatePriseDePoste
}

// GetDatePriseDePosteOk returns a tuple with the DatePriseDePoste field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetDatePriseDePosteOk() (*string, bool) {
	if o == nil || IsNil(o.DatePriseDePoste) {
		return nil, false
	}
	return o.DatePriseDePoste, true
}

// HasDatePriseDePoste returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasDatePriseDePoste() bool {
	if o != nil && !IsNil(o.DatePriseDePoste) {
		return true
	}

	return false
}

// SetDatePriseDePoste gets a reference to the given string and assigns it to the DatePriseDePoste field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetDatePriseDePoste(v string) {
	o.DatePriseDePoste = &v
}

// GetDenomination returns the Denomination field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetDenomination() string {
	if o == nil || IsNil(o.Denomination) {
		var ret string
		return ret
	}
	return *o.Denomination
}

// GetDenominationOk returns a tuple with the Denomination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetDenominationOk() (*string, bool) {
	if o == nil || IsNil(o.Denomination) {
		return nil, false
	}
	return o.Denomination, true
}

// HasDenomination returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasDenomination() bool {
	if o != nil && !IsNil(o.Denomination) {
		return true
	}

	return false
}

// SetDenomination gets a reference to the given string and assigns it to the Denomination field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetDenomination(v string) {
	o.Denomination = &v
}

// GetSiren returns the Siren field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetSiren() string {
	if o == nil || IsNil(o.Siren) {
		var ret string
		return ret
	}
	return *o.Siren
}

// GetSirenOk returns a tuple with the Siren field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetSirenOk() (*string, bool) {
	if o == nil || IsNil(o.Siren) {
		return nil, false
	}
	return o.Siren, true
}

// HasSiren returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasSiren() bool {
	if o != nil && !IsNil(o.Siren) {
		return true
	}

	return false
}

// SetSiren gets a reference to the given string and assigns it to the Siren field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetSiren(v string) {
	o.Siren = &v
}

// GetFormeJuridique returns the FormeJuridique field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetFormeJuridique() string {
	if o == nil || IsNil(o.FormeJuridique) {
		var ret string
		return ret
	}
	return *o.FormeJuridique
}

// GetFormeJuridiqueOk returns a tuple with the FormeJuridique field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetFormeJuridiqueOk() (*string, bool) {
	if o == nil || IsNil(o.FormeJuridique) {
		return nil, false
	}
	return o.FormeJuridique, true
}

// HasFormeJuridique returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasFormeJuridique() bool {
	if o != nil && !IsNil(o.FormeJuridique) {
		return true
	}

	return false
}

// SetFormeJuridique gets a reference to the given string and assigns it to the FormeJuridique field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetFormeJuridique(v string) {
	o.FormeJuridique = &v
}

// GetSexe returns the Sexe field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetSexe() string {
	if o == nil || IsNil(o.Sexe) {
		var ret string
		return ret
	}
	return *o.Sexe
}

// GetSexeOk returns a tuple with the Sexe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetSexeOk() (*string, bool) {
	if o == nil || IsNil(o.Sexe) {
		return nil, false
	}
	return o.Sexe, true
}

// HasSexe returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasSexe() bool {
	if o != nil && !IsNil(o.Sexe) {
		return true
	}

	return false
}

// SetSexe gets a reference to the given string and assigns it to the Sexe field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetSexe(v string) {
	o.Sexe = &v
}

// GetNom returns the Nom field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetNom() string {
	if o == nil || IsNil(o.Nom) {
		var ret string
		return ret
	}
	return *o.Nom
}

// GetNomOk returns a tuple with the Nom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetNomOk() (*string, bool) {
	if o == nil || IsNil(o.Nom) {
		return nil, false
	}
	return o.Nom, true
}

// HasNom returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasNom() bool {
	if o != nil && !IsNil(o.Nom) {
		return true
	}

	return false
}

// SetNom gets a reference to the given string and assigns it to the Nom field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetNom(v string) {
	o.Nom = &v
}

// GetPrenom returns the Prenom field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetPrenom() string {
	if o == nil || IsNil(o.Prenom) {
		var ret string
		return ret
	}
	return *o.Prenom
}

// GetPrenomOk returns a tuple with the Prenom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetPrenomOk() (*string, bool) {
	if o == nil || IsNil(o.Prenom) {
		return nil, false
	}
	return o.Prenom, true
}

// HasPrenom returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasPrenom() bool {
	if o != nil && !IsNil(o.Prenom) {
		return true
	}

	return false
}

// SetPrenom gets a reference to the given string and assigns it to the Prenom field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetPrenom(v string) {
	o.Prenom = &v
}

// GetPrenomUsuel returns the PrenomUsuel field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetPrenomUsuel() string {
	if o == nil || IsNil(o.PrenomUsuel) {
		var ret string
		return ret
	}
	return *o.PrenomUsuel
}

// GetPrenomUsuelOk returns a tuple with the PrenomUsuel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetPrenomUsuelOk() (*string, bool) {
	if o == nil || IsNil(o.PrenomUsuel) {
		return nil, false
	}
	return o.PrenomUsuel, true
}

// HasPrenomUsuel returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasPrenomUsuel() bool {
	if o != nil && !IsNil(o.PrenomUsuel) {
		return true
	}

	return false
}

// SetPrenomUsuel gets a reference to the given string and assigns it to the PrenomUsuel field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetPrenomUsuel(v string) {
	o.PrenomUsuel = &v
}

// GetNomComplet returns the NomComplet field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetNomComplet() string {
	if o == nil || IsNil(o.NomComplet) {
		var ret string
		return ret
	}
	return *o.NomComplet
}

// GetNomCompletOk returns a tuple with the NomComplet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetNomCompletOk() (*string, bool) {
	if o == nil || IsNil(o.NomComplet) {
		return nil, false
	}
	return o.NomComplet, true
}

// HasNomComplet returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasNomComplet() bool {
	if o != nil && !IsNil(o.NomComplet) {
		return true
	}

	return false
}

// SetNomComplet gets a reference to the given string and assigns it to the NomComplet field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetNomComplet(v string) {
	o.NomComplet = &v
}

// GetDateDeNaissance returns the DateDeNaissance field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetDateDeNaissance() string {
	if o == nil || IsNil(o.DateDeNaissance) {
		var ret string
		return ret
	}
	return *o.DateDeNaissance
}

// GetDateDeNaissanceOk returns a tuple with the DateDeNaissance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetDateDeNaissanceOk() (*string, bool) {
	if o == nil || IsNil(o.DateDeNaissance) {
		return nil, false
	}
	return o.DateDeNaissance, true
}

// HasDateDeNaissance returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasDateDeNaissance() bool {
	if o != nil && !IsNil(o.DateDeNaissance) {
		return true
	}

	return false
}

// SetDateDeNaissance gets a reference to the given string and assigns it to the DateDeNaissance field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetDateDeNaissance(v string) {
	o.DateDeNaissance = &v
}

// GetDateDeNaissanceFormate returns the DateDeNaissanceFormate field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetDateDeNaissanceFormate() string {
	if o == nil || IsNil(o.DateDeNaissanceFormate) {
		var ret string
		return ret
	}
	return *o.DateDeNaissanceFormate
}

// GetDateDeNaissanceFormateOk returns a tuple with the DateDeNaissanceFormate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetDateDeNaissanceFormateOk() (*string, bool) {
	if o == nil || IsNil(o.DateDeNaissanceFormate) {
		return nil, false
	}
	return o.DateDeNaissanceFormate, true
}

// HasDateDeNaissanceFormate returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasDateDeNaissanceFormate() bool {
	if o != nil && !IsNil(o.DateDeNaissanceFormate) {
		return true
	}

	return false
}

// SetDateDeNaissanceFormate gets a reference to the given string and assigns it to the DateDeNaissanceFormate field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetDateDeNaissanceFormate(v string) {
	o.DateDeNaissanceFormate = &v
}

// GetAge returns the Age field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetAge() int32 {
	if o == nil || IsNil(o.Age) {
		var ret int32
		return ret
	}
	return *o.Age
}

// GetAgeOk returns a tuple with the Age field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetAgeOk() (*int32, bool) {
	if o == nil || IsNil(o.Age) {
		return nil, false
	}
	return o.Age, true
}

// HasAge returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasAge() bool {
	if o != nil && !IsNil(o.Age) {
		return true
	}

	return false
}

// SetAge gets a reference to the given int32 and assigns it to the Age field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetAge(v int32) {
	o.Age = &v
}

// GetNationalite returns the Nationalite field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetNationalite() string {
	if o == nil || IsNil(o.Nationalite) {
		var ret string
		return ret
	}
	return *o.Nationalite
}

// GetNationaliteOk returns a tuple with the Nationalite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetNationaliteOk() (*string, bool) {
	if o == nil || IsNil(o.Nationalite) {
		return nil, false
	}
	return o.Nationalite, true
}

// HasNationalite returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasNationalite() bool {
	if o != nil && !IsNil(o.Nationalite) {
		return true
	}

	return false
}

// SetNationalite gets a reference to the given string and assigns it to the Nationalite field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetNationalite(v string) {
	o.Nationalite = &v
}

// GetCodeNationalite returns the CodeNationalite field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetCodeNationalite() string {
	if o == nil || IsNil(o.CodeNationalite) {
		var ret string
		return ret
	}
	return *o.CodeNationalite
}

// GetCodeNationaliteOk returns a tuple with the CodeNationalite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetCodeNationaliteOk() (*string, bool) {
	if o == nil || IsNil(o.CodeNationalite) {
		return nil, false
	}
	return o.CodeNationalite, true
}

// HasCodeNationalite returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasCodeNationalite() bool {
	if o != nil && !IsNil(o.CodeNationalite) {
		return true
	}

	return false
}

// SetCodeNationalite gets a reference to the given string and assigns it to the CodeNationalite field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetCodeNationalite(v string) {
	o.CodeNationalite = &v
}

// GetVilleDeNaissance returns the VilleDeNaissance field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetVilleDeNaissance() string {
	if o == nil || IsNil(o.VilleDeNaissance) {
		var ret string
		return ret
	}
	return *o.VilleDeNaissance
}

// GetVilleDeNaissanceOk returns a tuple with the VilleDeNaissance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetVilleDeNaissanceOk() (*string, bool) {
	if o == nil || IsNil(o.VilleDeNaissance) {
		return nil, false
	}
	return o.VilleDeNaissance, true
}

// HasVilleDeNaissance returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasVilleDeNaissance() bool {
	if o != nil && !IsNil(o.VilleDeNaissance) {
		return true
	}

	return false
}

// SetVilleDeNaissance gets a reference to the given string and assigns it to the VilleDeNaissance field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetVilleDeNaissance(v string) {
	o.VilleDeNaissance = &v
}

// GetPaysDeNaissance returns the PaysDeNaissance field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetPaysDeNaissance() string {
	if o == nil || IsNil(o.PaysDeNaissance) {
		var ret string
		return ret
	}
	return *o.PaysDeNaissance
}

// GetPaysDeNaissanceOk returns a tuple with the PaysDeNaissance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetPaysDeNaissanceOk() (*string, bool) {
	if o == nil || IsNil(o.PaysDeNaissance) {
		return nil, false
	}
	return o.PaysDeNaissance, true
}

// HasPaysDeNaissance returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasPaysDeNaissance() bool {
	if o != nil && !IsNil(o.PaysDeNaissance) {
		return true
	}

	return false
}

// SetPaysDeNaissance gets a reference to the given string and assigns it to the PaysDeNaissance field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetPaysDeNaissance(v string) {
	o.PaysDeNaissance = &v
}

// GetCodePaysDeNaissance returns the CodePaysDeNaissance field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetCodePaysDeNaissance() string {
	if o == nil || IsNil(o.CodePaysDeNaissance) {
		var ret string
		return ret
	}
	return *o.CodePaysDeNaissance
}

// GetCodePaysDeNaissanceOk returns a tuple with the CodePaysDeNaissance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetCodePaysDeNaissanceOk() (*string, bool) {
	if o == nil || IsNil(o.CodePaysDeNaissance) {
		return nil, false
	}
	return o.CodePaysDeNaissance, true
}

// HasCodePaysDeNaissance returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasCodePaysDeNaissance() bool {
	if o != nil && !IsNil(o.CodePaysDeNaissance) {
		return true
	}

	return false
}

// SetCodePaysDeNaissance gets a reference to the given string and assigns it to the CodePaysDeNaissance field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetCodePaysDeNaissance(v string) {
	o.CodePaysDeNaissance = &v
}

// GetAdresseLigne1 returns the AdresseLigne1 field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetAdresseLigne1() string {
	if o == nil || IsNil(o.AdresseLigne1) {
		var ret string
		return ret
	}
	return *o.AdresseLigne1
}

// GetAdresseLigne1Ok returns a tuple with the AdresseLigne1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetAdresseLigne1Ok() (*string, bool) {
	if o == nil || IsNil(o.AdresseLigne1) {
		return nil, false
	}
	return o.AdresseLigne1, true
}

// HasAdresseLigne1 returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasAdresseLigne1() bool {
	if o != nil && !IsNil(o.AdresseLigne1) {
		return true
	}

	return false
}

// SetAdresseLigne1 gets a reference to the given string and assigns it to the AdresseLigne1 field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetAdresseLigne1(v string) {
	o.AdresseLigne1 = &v
}

// GetAdresseLigne2 returns the AdresseLigne2 field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetAdresseLigne2() string {
	if o == nil || IsNil(o.AdresseLigne2) {
		var ret string
		return ret
	}
	return *o.AdresseLigne2
}

// GetAdresseLigne2Ok returns a tuple with the AdresseLigne2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetAdresseLigne2Ok() (*string, bool) {
	if o == nil || IsNil(o.AdresseLigne2) {
		return nil, false
	}
	return o.AdresseLigne2, true
}

// HasAdresseLigne2 returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasAdresseLigne2() bool {
	if o != nil && !IsNil(o.AdresseLigne2) {
		return true
	}

	return false
}

// SetAdresseLigne2 gets a reference to the given string and assigns it to the AdresseLigne2 field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetAdresseLigne2(v string) {
	o.AdresseLigne2 = &v
}

// GetAdresseLigne3 returns the AdresseLigne3 field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetAdresseLigne3() string {
	if o == nil || IsNil(o.AdresseLigne3) {
		var ret string
		return ret
	}
	return *o.AdresseLigne3
}

// GetAdresseLigne3Ok returns a tuple with the AdresseLigne3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetAdresseLigne3Ok() (*string, bool) {
	if o == nil || IsNil(o.AdresseLigne3) {
		return nil, false
	}
	return o.AdresseLigne3, true
}

// HasAdresseLigne3 returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasAdresseLigne3() bool {
	if o != nil && !IsNil(o.AdresseLigne3) {
		return true
	}

	return false
}

// SetAdresseLigne3 gets a reference to the given string and assigns it to the AdresseLigne3 field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetAdresseLigne3(v string) {
	o.AdresseLigne3 = &v
}

// GetCodePostal returns the CodePostal field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetCodePostal() string {
	if o == nil || IsNil(o.CodePostal) {
		var ret string
		return ret
	}
	return *o.CodePostal
}

// GetCodePostalOk returns a tuple with the CodePostal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetCodePostalOk() (*string, bool) {
	if o == nil || IsNil(o.CodePostal) {
		return nil, false
	}
	return o.CodePostal, true
}

// HasCodePostal returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasCodePostal() bool {
	if o != nil && !IsNil(o.CodePostal) {
		return true
	}

	return false
}

// SetCodePostal gets a reference to the given string and assigns it to the CodePostal field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetCodePostal(v string) {
	o.CodePostal = &v
}

// GetVille returns the Ville field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetVille() string {
	if o == nil || IsNil(o.Ville) {
		var ret string
		return ret
	}
	return *o.Ville
}

// GetVilleOk returns a tuple with the Ville field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetVilleOk() (*string, bool) {
	if o == nil || IsNil(o.Ville) {
		return nil, false
	}
	return o.Ville, true
}

// HasVille returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasVille() bool {
	if o != nil && !IsNil(o.Ville) {
		return true
	}

	return false
}

// SetVille gets a reference to the given string and assigns it to the Ville field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetVille(v string) {
	o.Ville = &v
}

// GetPays returns the Pays field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetPays() string {
	if o == nil || IsNil(o.Pays) {
		var ret string
		return ret
	}
	return *o.Pays
}

// GetPaysOk returns a tuple with the Pays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetPaysOk() (*string, bool) {
	if o == nil || IsNil(o.Pays) {
		return nil, false
	}
	return o.Pays, true
}

// HasPays returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasPays() bool {
	if o != nil && !IsNil(o.Pays) {
		return true
	}

	return false
}

// SetPays gets a reference to the given string and assigns it to the Pays field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetPays(v string) {
	o.Pays = &v
}

// GetCodePays returns the CodePays field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetCodePays() string {
	if o == nil || IsNil(o.CodePays) {
		var ret string
		return ret
	}
	return *o.CodePays
}

// GetCodePaysOk returns a tuple with the CodePays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetCodePaysOk() (*string, bool) {
	if o == nil || IsNil(o.CodePays) {
		return nil, false
	}
	return o.CodePays, true
}

// HasCodePays returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasCodePays() bool {
	if o != nil && !IsNil(o.CodePays) {
		return true
	}

	return false
}

// SetCodePays gets a reference to the given string and assigns it to the CodePays field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetCodePays(v string) {
	o.CodePays = &v
}

// GetActuel returns the Actuel field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetActuel() bool {
	if o == nil || IsNil(o.Actuel) {
		var ret bool
		return ret
	}
	return *o.Actuel
}

// GetActuelOk returns a tuple with the Actuel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetActuelOk() (*bool, bool) {
	if o == nil || IsNil(o.Actuel) {
		return nil, false
	}
	return o.Actuel, true
}

// HasActuel returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasActuel() bool {
	if o != nil && !IsNil(o.Actuel) {
		return true
	}

	return false
}

// SetActuel gets a reference to the given bool and assigns it to the Actuel field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetActuel(v bool) {
	o.Actuel = &v
}

// GetDateDepartDePoste returns the DateDepartDePoste field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetDateDepartDePoste() string {
	if o == nil || IsNil(o.DateDepartDePoste) {
		var ret string
		return ret
	}
	return *o.DateDepartDePoste
}

// GetDateDepartDePosteOk returns a tuple with the DateDepartDePoste field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetDateDepartDePosteOk() (*string, bool) {
	if o == nil || IsNil(o.DateDepartDePoste) {
		return nil, false
	}
	return o.DateDepartDePoste, true
}

// HasDateDepartDePoste returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasDateDepartDePoste() bool {
	if o != nil && !IsNil(o.DateDepartDePoste) {
		return true
	}

	return false
}

// SetDateDepartDePoste gets a reference to the given string and assigns it to the DateDepartDePoste field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetDateDepartDePoste(v string) {
	o.DateDepartDePoste = &v
}

// GetEntreprises returns the Entreprises field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetEntreprises() []EntrepriseRecherche {
	if o == nil || IsNil(o.Entreprises) {
		var ret []EntrepriseRecherche
		return ret
	}
	return o.Entreprises
}

// GetEntreprisesOk returns a tuple with the Entreprises field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetEntreprisesOk() ([]EntrepriseRecherche, bool) {
	if o == nil || IsNil(o.Entreprises) {
		return nil, false
	}
	return o.Entreprises, true
}

// HasEntreprises returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasEntreprises() bool {
	if o != nil && !IsNil(o.Entreprises) {
		return true
	}

	return false
}

// SetEntreprises gets a reference to the given []EntrepriseRecherche and assigns it to the Entreprises field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetEntreprises(v []EntrepriseRecherche) {
	o.Entreprises = v
}

// GetNbEntreprisesTotal returns the NbEntreprisesTotal field value if set, zero value otherwise.
func (o *RechercheDirigeants200ResponseResultatsInner) GetNbEntreprisesTotal() int32 {
	if o == nil || IsNil(o.NbEntreprisesTotal) {
		var ret int32
		return ret
	}
	return *o.NbEntreprisesTotal
}

// GetNbEntreprisesTotalOk returns a tuple with the NbEntreprisesTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) GetNbEntreprisesTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.NbEntreprisesTotal) {
		return nil, false
	}
	return o.NbEntreprisesTotal, true
}

// HasNbEntreprisesTotal returns a boolean if a field has been set.
func (o *RechercheDirigeants200ResponseResultatsInner) HasNbEntreprisesTotal() bool {
	if o != nil && !IsNil(o.NbEntreprisesTotal) {
		return true
	}

	return false
}

// SetNbEntreprisesTotal gets a reference to the given int32 and assigns it to the NbEntreprisesTotal field.
func (o *RechercheDirigeants200ResponseResultatsInner) SetNbEntreprisesTotal(v int32) {
	o.NbEntreprisesTotal = &v
}

func (o RechercheDirigeants200ResponseResultatsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RechercheDirigeants200ResponseResultatsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Qualite) {
		toSerialize["qualite"] = o.Qualite
	}
	if !IsNil(o.PersonneMorale) {
		toSerialize["personne_morale"] = o.PersonneMorale
	}
	if !IsNil(o.DatePriseDePoste) {
		toSerialize["date_prise_de_poste"] = o.DatePriseDePoste
	}
	if !IsNil(o.Denomination) {
		toSerialize["denomination"] = o.Denomination
	}
	if !IsNil(o.Siren) {
		toSerialize["siren"] = o.Siren
	}
	if !IsNil(o.FormeJuridique) {
		toSerialize["forme_juridique"] = o.FormeJuridique
	}
	if !IsNil(o.Sexe) {
		toSerialize["sexe"] = o.Sexe
	}
	if !IsNil(o.Nom) {
		toSerialize["nom"] = o.Nom
	}
	if !IsNil(o.Prenom) {
		toSerialize["prenom"] = o.Prenom
	}
	if !IsNil(o.PrenomUsuel) {
		toSerialize["prenom_usuel"] = o.PrenomUsuel
	}
	if !IsNil(o.NomComplet) {
		toSerialize["nom_complet"] = o.NomComplet
	}
	if !IsNil(o.DateDeNaissance) {
		toSerialize["date_de_naissance"] = o.DateDeNaissance
	}
	if !IsNil(o.DateDeNaissanceFormate) {
		toSerialize["date_de_naissance_formate"] = o.DateDeNaissanceFormate
	}
	if !IsNil(o.Age) {
		toSerialize["age"] = o.Age
	}
	if !IsNil(o.Nationalite) {
		toSerialize["nationalite"] = o.Nationalite
	}
	if !IsNil(o.CodeNationalite) {
		toSerialize["code_nationalite"] = o.CodeNationalite
	}
	if !IsNil(o.VilleDeNaissance) {
		toSerialize["ville_de_naissance"] = o.VilleDeNaissance
	}
	if !IsNil(o.PaysDeNaissance) {
		toSerialize["pays_de_naissance"] = o.PaysDeNaissance
	}
	if !IsNil(o.CodePaysDeNaissance) {
		toSerialize["code_pays_de_naissance"] = o.CodePaysDeNaissance
	}
	if !IsNil(o.AdresseLigne1) {
		toSerialize["adresse_ligne_1"] = o.AdresseLigne1
	}
	if !IsNil(o.AdresseLigne2) {
		toSerialize["adresse_ligne_2"] = o.AdresseLigne2
	}
	if !IsNil(o.AdresseLigne3) {
		toSerialize["adresse_ligne_3"] = o.AdresseLigne3
	}
	if !IsNil(o.CodePostal) {
		toSerialize["code_postal"] = o.CodePostal
	}
	if !IsNil(o.Ville) {
		toSerialize["ville"] = o.Ville
	}
	if !IsNil(o.Pays) {
		toSerialize["pays"] = o.Pays
	}
	if !IsNil(o.CodePays) {
		toSerialize["code_pays"] = o.CodePays
	}
	if !IsNil(o.Actuel) {
		toSerialize["actuel"] = o.Actuel
	}
	if !IsNil(o.DateDepartDePoste) {
		toSerialize["date_depart_de_poste"] = o.DateDepartDePoste
	}
	if !IsNil(o.Entreprises) {
		toSerialize["entreprises"] = o.Entreprises
	}
	if !IsNil(o.NbEntreprisesTotal) {
		toSerialize["nb_entreprises_total"] = o.NbEntreprisesTotal
	}
	return toSerialize, nil
}

type NullableRechercheDirigeants200ResponseResultatsInner struct {
	value *RechercheDirigeants200ResponseResultatsInner
	isSet bool
}

func (v NullableRechercheDirigeants200ResponseResultatsInner) Get() *RechercheDirigeants200ResponseResultatsInner {
	return v.value
}

func (v *NullableRechercheDirigeants200ResponseResultatsInner) Set(val *RechercheDirigeants200ResponseResultatsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRechercheDirigeants200ResponseResultatsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRechercheDirigeants200ResponseResultatsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRechercheDirigeants200ResponseResultatsInner(val *RechercheDirigeants200ResponseResultatsInner) *NullableRechercheDirigeants200ResponseResultatsInner {
	return &NullableRechercheDirigeants200ResponseResultatsInner{value: val, isSet: true}
}

func (v NullableRechercheDirigeants200ResponseResultatsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRechercheDirigeants200ResponseResultatsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


