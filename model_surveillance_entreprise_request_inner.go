/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SurveillanceEntrepriseRequestInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SurveillanceEntrepriseRequestInner{}

// SurveillanceEntrepriseRequestInner struct for SurveillanceEntrepriseRequestInner
type SurveillanceEntrepriseRequestInner struct {
	// SIREN de l'entreprise
	Siren string `json:"siren"`
}

type _SurveillanceEntrepriseRequestInner SurveillanceEntrepriseRequestInner

// NewSurveillanceEntrepriseRequestInner instantiates a new SurveillanceEntrepriseRequestInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSurveillanceEntrepriseRequestInner(siren string) *SurveillanceEntrepriseRequestInner {
	this := SurveillanceEntrepriseRequestInner{}
	this.Siren = siren
	return &this
}

// NewSurveillanceEntrepriseRequestInnerWithDefaults instantiates a new SurveillanceEntrepriseRequestInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSurveillanceEntrepriseRequestInnerWithDefaults() *SurveillanceEntrepriseRequestInner {
	this := SurveillanceEntrepriseRequestInner{}
	return &this
}

// GetSiren returns the Siren field value
func (o *SurveillanceEntrepriseRequestInner) GetSiren() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Siren
}

// GetSirenOk returns a tuple with the Siren field value
// and a boolean to check if the value has been set.
func (o *SurveillanceEntrepriseRequestInner) GetSirenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Siren, true
}

// SetSiren sets field value
func (o *SurveillanceEntrepriseRequestInner) SetSiren(v string) {
	o.Siren = v
}

func (o SurveillanceEntrepriseRequestInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SurveillanceEntrepriseRequestInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["siren"] = o.Siren
	return toSerialize, nil
}

func (o *SurveillanceEntrepriseRequestInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"siren",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSurveillanceEntrepriseRequestInner := _SurveillanceEntrepriseRequestInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSurveillanceEntrepriseRequestInner)

	if err != nil {
		return err
	}

	*o = SurveillanceEntrepriseRequestInner(varSurveillanceEntrepriseRequestInner)

	return err
}

type NullableSurveillanceEntrepriseRequestInner struct {
	value *SurveillanceEntrepriseRequestInner
	isSet bool
}

func (v NullableSurveillanceEntrepriseRequestInner) Get() *SurveillanceEntrepriseRequestInner {
	return v.value
}

func (v *NullableSurveillanceEntrepriseRequestInner) Set(val *SurveillanceEntrepriseRequestInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSurveillanceEntrepriseRequestInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSurveillanceEntrepriseRequestInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSurveillanceEntrepriseRequestInner(val *SurveillanceEntrepriseRequestInner) *NullableSurveillanceEntrepriseRequestInner {
	return &NullableSurveillanceEntrepriseRequestInner{value: val, isSet: true}
}

func (v NullableSurveillanceEntrepriseRequestInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSurveillanceEntrepriseRequestInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


