/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EtablissementFiche type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EtablissementFiche{}

// EtablissementFiche struct for EtablissementFiche
type EtablissementFiche struct {
	// Numéro siret de l'établissement au format xxxxxxxxxxxxxx.
	Siret *string `json:"siret,omitempty"`
	// Numéro siret de l'établissement au format xxx xxx xxx xxxxx.
	SiretFormate *string `json:"siret_formate,omitempty"`
	// Si vrai, l'établissement est en diffusion partielle. Dans ce cas, tous les champs relatifs à son adresse - en dehors de la ville et du pays - sont à `null`.
	DiffusionPartielle *bool `json:"diffusion_partielle,omitempty"`
	// Numéro NIC de l'établissement.
	Nic *string `json:"nic,omitempty"`
	// Code postal de l'établissement.
	CodePostal *string `json:"code_postal,omitempty"`
	// Ville de l'établissement.
	Ville *string `json:"ville,omitempty"`
	// Pays de l'établissement
	Pays *string `json:"pays,omitempty"`
	// Code du pays de l'établissement
	CodePays *string `json:"code_pays,omitempty"`
	// Latitude de l'établissement.
	Latitude *float32 `json:"latitude,omitempty"`
	// Longitude de l'établissement.
	Longitude *float32 `json:"longitude,omitempty"`
	// Vrai si l'établissement est cessé, faux si il est en activité.
	EtablissementCesse *bool `json:"etablissement_cesse,omitempty"`
	// Vrai si l'établissement est siège, faux s'il ne l'est pas.
	Siege *bool `json:"siege,omitempty"`
	// Si vrai, l'établissement a au moins un employé.
	EtablissementEmployeur *bool `json:"etablissement_employeur,omitempty"`
	// Tranche d'effectif de l'établissement.
	Effectif *string `json:"effectif,omitempty"`
	// Effectif minimal de l'établissement.
	EffectifMin *int32 `json:"effectif_min,omitempty"`
	// Effectif maximal de l'établissement.
	EffectifMax *int32 `json:"effectif_max,omitempty"`
	// Tranche d'effectif de l'établissement, selon la [nomenclature Sirene](https://www.sirene.fr/static-resources/documentation/v_sommaire_311.htm#73).
	TrancheEffectif *string `json:"tranche_effectif,omitempty"`
	// Année correspondante à la tranche d'effectif de l'établissement.
	AnneeEffectif *int32 `json:"annee_effectif,omitempty"`
	// Code NAF de l'établissement.
	CodeNaf *string `json:"code_naf,omitempty"`
	// Libellé du code NAF de l'établissement.
	LibelleCodeNaf *string `json:"libelle_code_naf,omitempty"`
	// Nomenclature code NAF de l'établissement. Uniquement présent si demandé dans les champs supplémentaires.
	NomenclatureCodeNaf *string `json:"nomenclature_code_naf,omitempty"`
	DateDeCreation *string `json:"date_de_creation,omitempty"`
	// Numéro de voie de l'établissement.
	NumeroVoie *int32 `json:"numero_voie,omitempty"`
	// Indice de répétition de l'établissement.
	IndiceRepetition *string `json:"indice_repetition,omitempty"`
	// Type de voie de l'établissement.
	TypeVoie *string `json:"type_voie,omitempty"`
	// Libellé de la voie de l'établissement.
	LibelleVoie *string `json:"libelle_voie,omitempty"`
	// Complément d'adresse de l'établissement.
	ComplementAdresse *string `json:"complement_adresse,omitempty"`
	// Première ligne de l'adresse de l'établissement. Correspond à l'ensemble des données numero_voie, indice_repetition, type_voie et libelle_voie.
	AdresseLigne1 *string `json:"adresse_ligne_1,omitempty"`
	// Seconde ligne de l'adresse de l'établissement. Est égal à complement_adresse
	AdresseLigne2 *string `json:"adresse_ligne_2,omitempty"`
	// Date de fermeture de l'établissement
	DateCessation *string `json:"date_cessation,omitempty"`
	// Enseigne de l'établissement
	Enseigne *string `json:"enseigne,omitempty"`
	// Nom commercial de l'établissement
	NomCommercial *string `json:"nom_commercial,omitempty"`
	Domiciliation *EtablissementFicheDomiciliation `json:"domiciliation,omitempty"`
	// Liste des labels de l'entreprise. Uniquement présent si demandé dans les champs supplémentaires.
	Labels []LabelsBase `json:"labels,omitempty"`
	// Liste des prédécesseurs de l'établissement.
	Predecesseurs []LienSuccession `json:"predecesseurs,omitempty"`
	// Liste des successeurs de l'établissement.
	Successeurs []LienSuccession `json:"successeurs,omitempty"`
	// Enseigne 1 de l'établissement. Uniquement présent si demandé dans les champs supplémentaires
	Enseigne1 *string `json:"enseigne_1,omitempty"`
	// Enseigne 2 de l'établissement. Uniquement présent si demandé dans les champs supplémentaires
	Enseigne2 *string `json:"enseigne_2,omitempty"`
	// Enseigne 3 de l'établissement. Uniquement présent si demandé dans les champs supplémentaires
	Enseigne3 *string `json:"enseigne_3,omitempty"`
	// Distribution spéciale de l'établissement. La distribution spéciale reprend les éléments particuliers qui accompagnent une adresse de distribution spéciale. Uniquement présent si demandé dans les champs supplémentaires
	DistributionSpeciale *string `json:"distribution_speciale,omitempty"`
	// Code cedex de l'établissement. Uniquement présent si demandé dans les champs supplémentaires
	CodeCedex *string `json:"code_cedex,omitempty"`
	// Ce champ indique le libellé correspondant au code cedex de l'établissement. Si le code cedex est à 'null', ce champ est également à 'null'. Uniquement présent si demandé dans les champs supplémentaires
	LibelleCedex *string `json:"libelle_cedex,omitempty"`
	// Le code commune désigne le code de la commune de localisation de l'établissement. Cette valeur est à 'null' pour les entreprises à l'étranger. Uniquement présent si demandé dans les champs supplémentaires
	CodeCommune *string `json:"code_commune,omitempty"`
	// Libellé du département. Uniquement présent si demandé dans les champs supplémentaires
	Departement *string `json:"departement,omitempty"`
	// Code du département. Uniquement présent si demandé dans les champs supplémentaires
	CodeDepartement *string `json:"code_departement,omitempty"`
	// Région dans laquelle est situé l'établissement. Uniquement présent si demandé dans les champs supplémentaires
	Region *string `json:"region,omitempty"`
	// Code région. Uniquement présent si demandé dans les champs supplémentaires
	CodeRegion *string `json:"code_region,omitempty"`
}

// NewEtablissementFiche instantiates a new EtablissementFiche object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEtablissementFiche() *EtablissementFiche {
	this := EtablissementFiche{}
	return &this
}

// NewEtablissementFicheWithDefaults instantiates a new EtablissementFiche object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEtablissementFicheWithDefaults() *EtablissementFiche {
	this := EtablissementFiche{}
	return &this
}

// GetSiret returns the Siret field value if set, zero value otherwise.
func (o *EtablissementFiche) GetSiret() string {
	if o == nil || IsNil(o.Siret) {
		var ret string
		return ret
	}
	return *o.Siret
}

// GetSiretOk returns a tuple with the Siret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetSiretOk() (*string, bool) {
	if o == nil || IsNil(o.Siret) {
		return nil, false
	}
	return o.Siret, true
}

// HasSiret returns a boolean if a field has been set.
func (o *EtablissementFiche) HasSiret() bool {
	if o != nil && !IsNil(o.Siret) {
		return true
	}

	return false
}

// SetSiret gets a reference to the given string and assigns it to the Siret field.
func (o *EtablissementFiche) SetSiret(v string) {
	o.Siret = &v
}

// GetSiretFormate returns the SiretFormate field value if set, zero value otherwise.
func (o *EtablissementFiche) GetSiretFormate() string {
	if o == nil || IsNil(o.SiretFormate) {
		var ret string
		return ret
	}
	return *o.SiretFormate
}

// GetSiretFormateOk returns a tuple with the SiretFormate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetSiretFormateOk() (*string, bool) {
	if o == nil || IsNil(o.SiretFormate) {
		return nil, false
	}
	return o.SiretFormate, true
}

// HasSiretFormate returns a boolean if a field has been set.
func (o *EtablissementFiche) HasSiretFormate() bool {
	if o != nil && !IsNil(o.SiretFormate) {
		return true
	}

	return false
}

// SetSiretFormate gets a reference to the given string and assigns it to the SiretFormate field.
func (o *EtablissementFiche) SetSiretFormate(v string) {
	o.SiretFormate = &v
}

// GetDiffusionPartielle returns the DiffusionPartielle field value if set, zero value otherwise.
func (o *EtablissementFiche) GetDiffusionPartielle() bool {
	if o == nil || IsNil(o.DiffusionPartielle) {
		var ret bool
		return ret
	}
	return *o.DiffusionPartielle
}

// GetDiffusionPartielleOk returns a tuple with the DiffusionPartielle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetDiffusionPartielleOk() (*bool, bool) {
	if o == nil || IsNil(o.DiffusionPartielle) {
		return nil, false
	}
	return o.DiffusionPartielle, true
}

// HasDiffusionPartielle returns a boolean if a field has been set.
func (o *EtablissementFiche) HasDiffusionPartielle() bool {
	if o != nil && !IsNil(o.DiffusionPartielle) {
		return true
	}

	return false
}

// SetDiffusionPartielle gets a reference to the given bool and assigns it to the DiffusionPartielle field.
func (o *EtablissementFiche) SetDiffusionPartielle(v bool) {
	o.DiffusionPartielle = &v
}

// GetNic returns the Nic field value if set, zero value otherwise.
func (o *EtablissementFiche) GetNic() string {
	if o == nil || IsNil(o.Nic) {
		var ret string
		return ret
	}
	return *o.Nic
}

// GetNicOk returns a tuple with the Nic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetNicOk() (*string, bool) {
	if o == nil || IsNil(o.Nic) {
		return nil, false
	}
	return o.Nic, true
}

// HasNic returns a boolean if a field has been set.
func (o *EtablissementFiche) HasNic() bool {
	if o != nil && !IsNil(o.Nic) {
		return true
	}

	return false
}

// SetNic gets a reference to the given string and assigns it to the Nic field.
func (o *EtablissementFiche) SetNic(v string) {
	o.Nic = &v
}

// GetCodePostal returns the CodePostal field value if set, zero value otherwise.
func (o *EtablissementFiche) GetCodePostal() string {
	if o == nil || IsNil(o.CodePostal) {
		var ret string
		return ret
	}
	return *o.CodePostal
}

// GetCodePostalOk returns a tuple with the CodePostal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetCodePostalOk() (*string, bool) {
	if o == nil || IsNil(o.CodePostal) {
		return nil, false
	}
	return o.CodePostal, true
}

// HasCodePostal returns a boolean if a field has been set.
func (o *EtablissementFiche) HasCodePostal() bool {
	if o != nil && !IsNil(o.CodePostal) {
		return true
	}

	return false
}

// SetCodePostal gets a reference to the given string and assigns it to the CodePostal field.
func (o *EtablissementFiche) SetCodePostal(v string) {
	o.CodePostal = &v
}

// GetVille returns the Ville field value if set, zero value otherwise.
func (o *EtablissementFiche) GetVille() string {
	if o == nil || IsNil(o.Ville) {
		var ret string
		return ret
	}
	return *o.Ville
}

// GetVilleOk returns a tuple with the Ville field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetVilleOk() (*string, bool) {
	if o == nil || IsNil(o.Ville) {
		return nil, false
	}
	return o.Ville, true
}

// HasVille returns a boolean if a field has been set.
func (o *EtablissementFiche) HasVille() bool {
	if o != nil && !IsNil(o.Ville) {
		return true
	}

	return false
}

// SetVille gets a reference to the given string and assigns it to the Ville field.
func (o *EtablissementFiche) SetVille(v string) {
	o.Ville = &v
}

// GetPays returns the Pays field value if set, zero value otherwise.
func (o *EtablissementFiche) GetPays() string {
	if o == nil || IsNil(o.Pays) {
		var ret string
		return ret
	}
	return *o.Pays
}

// GetPaysOk returns a tuple with the Pays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetPaysOk() (*string, bool) {
	if o == nil || IsNil(o.Pays) {
		return nil, false
	}
	return o.Pays, true
}

// HasPays returns a boolean if a field has been set.
func (o *EtablissementFiche) HasPays() bool {
	if o != nil && !IsNil(o.Pays) {
		return true
	}

	return false
}

// SetPays gets a reference to the given string and assigns it to the Pays field.
func (o *EtablissementFiche) SetPays(v string) {
	o.Pays = &v
}

// GetCodePays returns the CodePays field value if set, zero value otherwise.
func (o *EtablissementFiche) GetCodePays() string {
	if o == nil || IsNil(o.CodePays) {
		var ret string
		return ret
	}
	return *o.CodePays
}

// GetCodePaysOk returns a tuple with the CodePays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetCodePaysOk() (*string, bool) {
	if o == nil || IsNil(o.CodePays) {
		return nil, false
	}
	return o.CodePays, true
}

// HasCodePays returns a boolean if a field has been set.
func (o *EtablissementFiche) HasCodePays() bool {
	if o != nil && !IsNil(o.CodePays) {
		return true
	}

	return false
}

// SetCodePays gets a reference to the given string and assigns it to the CodePays field.
func (o *EtablissementFiche) SetCodePays(v string) {
	o.CodePays = &v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *EtablissementFiche) GetLatitude() float32 {
	if o == nil || IsNil(o.Latitude) {
		var ret float32
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetLatitudeOk() (*float32, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *EtablissementFiche) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given float32 and assigns it to the Latitude field.
func (o *EtablissementFiche) SetLatitude(v float32) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *EtablissementFiche) GetLongitude() float32 {
	if o == nil || IsNil(o.Longitude) {
		var ret float32
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetLongitudeOk() (*float32, bool) {
	if o == nil || IsNil(o.Longitude) {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *EtablissementFiche) HasLongitude() bool {
	if o != nil && !IsNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given float32 and assigns it to the Longitude field.
func (o *EtablissementFiche) SetLongitude(v float32) {
	o.Longitude = &v
}

// GetEtablissementCesse returns the EtablissementCesse field value if set, zero value otherwise.
func (o *EtablissementFiche) GetEtablissementCesse() bool {
	if o == nil || IsNil(o.EtablissementCesse) {
		var ret bool
		return ret
	}
	return *o.EtablissementCesse
}

// GetEtablissementCesseOk returns a tuple with the EtablissementCesse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetEtablissementCesseOk() (*bool, bool) {
	if o == nil || IsNil(o.EtablissementCesse) {
		return nil, false
	}
	return o.EtablissementCesse, true
}

// HasEtablissementCesse returns a boolean if a field has been set.
func (o *EtablissementFiche) HasEtablissementCesse() bool {
	if o != nil && !IsNil(o.EtablissementCesse) {
		return true
	}

	return false
}

// SetEtablissementCesse gets a reference to the given bool and assigns it to the EtablissementCesse field.
func (o *EtablissementFiche) SetEtablissementCesse(v bool) {
	o.EtablissementCesse = &v
}

// GetSiege returns the Siege field value if set, zero value otherwise.
func (o *EtablissementFiche) GetSiege() bool {
	if o == nil || IsNil(o.Siege) {
		var ret bool
		return ret
	}
	return *o.Siege
}

// GetSiegeOk returns a tuple with the Siege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetSiegeOk() (*bool, bool) {
	if o == nil || IsNil(o.Siege) {
		return nil, false
	}
	return o.Siege, true
}

// HasSiege returns a boolean if a field has been set.
func (o *EtablissementFiche) HasSiege() bool {
	if o != nil && !IsNil(o.Siege) {
		return true
	}

	return false
}

// SetSiege gets a reference to the given bool and assigns it to the Siege field.
func (o *EtablissementFiche) SetSiege(v bool) {
	o.Siege = &v
}

// GetEtablissementEmployeur returns the EtablissementEmployeur field value if set, zero value otherwise.
func (o *EtablissementFiche) GetEtablissementEmployeur() bool {
	if o == nil || IsNil(o.EtablissementEmployeur) {
		var ret bool
		return ret
	}
	return *o.EtablissementEmployeur
}

// GetEtablissementEmployeurOk returns a tuple with the EtablissementEmployeur field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetEtablissementEmployeurOk() (*bool, bool) {
	if o == nil || IsNil(o.EtablissementEmployeur) {
		return nil, false
	}
	return o.EtablissementEmployeur, true
}

// HasEtablissementEmployeur returns a boolean if a field has been set.
func (o *EtablissementFiche) HasEtablissementEmployeur() bool {
	if o != nil && !IsNil(o.EtablissementEmployeur) {
		return true
	}

	return false
}

// SetEtablissementEmployeur gets a reference to the given bool and assigns it to the EtablissementEmployeur field.
func (o *EtablissementFiche) SetEtablissementEmployeur(v bool) {
	o.EtablissementEmployeur = &v
}

// GetEffectif returns the Effectif field value if set, zero value otherwise.
func (o *EtablissementFiche) GetEffectif() string {
	if o == nil || IsNil(o.Effectif) {
		var ret string
		return ret
	}
	return *o.Effectif
}

// GetEffectifOk returns a tuple with the Effectif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetEffectifOk() (*string, bool) {
	if o == nil || IsNil(o.Effectif) {
		return nil, false
	}
	return o.Effectif, true
}

// HasEffectif returns a boolean if a field has been set.
func (o *EtablissementFiche) HasEffectif() bool {
	if o != nil && !IsNil(o.Effectif) {
		return true
	}

	return false
}

// SetEffectif gets a reference to the given string and assigns it to the Effectif field.
func (o *EtablissementFiche) SetEffectif(v string) {
	o.Effectif = &v
}

// GetEffectifMin returns the EffectifMin field value if set, zero value otherwise.
func (o *EtablissementFiche) GetEffectifMin() int32 {
	if o == nil || IsNil(o.EffectifMin) {
		var ret int32
		return ret
	}
	return *o.EffectifMin
}

// GetEffectifMinOk returns a tuple with the EffectifMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetEffectifMinOk() (*int32, bool) {
	if o == nil || IsNil(o.EffectifMin) {
		return nil, false
	}
	return o.EffectifMin, true
}

// HasEffectifMin returns a boolean if a field has been set.
func (o *EtablissementFiche) HasEffectifMin() bool {
	if o != nil && !IsNil(o.EffectifMin) {
		return true
	}

	return false
}

// SetEffectifMin gets a reference to the given int32 and assigns it to the EffectifMin field.
func (o *EtablissementFiche) SetEffectifMin(v int32) {
	o.EffectifMin = &v
}

// GetEffectifMax returns the EffectifMax field value if set, zero value otherwise.
func (o *EtablissementFiche) GetEffectifMax() int32 {
	if o == nil || IsNil(o.EffectifMax) {
		var ret int32
		return ret
	}
	return *o.EffectifMax
}

// GetEffectifMaxOk returns a tuple with the EffectifMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetEffectifMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.EffectifMax) {
		return nil, false
	}
	return o.EffectifMax, true
}

// HasEffectifMax returns a boolean if a field has been set.
func (o *EtablissementFiche) HasEffectifMax() bool {
	if o != nil && !IsNil(o.EffectifMax) {
		return true
	}

	return false
}

// SetEffectifMax gets a reference to the given int32 and assigns it to the EffectifMax field.
func (o *EtablissementFiche) SetEffectifMax(v int32) {
	o.EffectifMax = &v
}

// GetTrancheEffectif returns the TrancheEffectif field value if set, zero value otherwise.
func (o *EtablissementFiche) GetTrancheEffectif() string {
	if o == nil || IsNil(o.TrancheEffectif) {
		var ret string
		return ret
	}
	return *o.TrancheEffectif
}

// GetTrancheEffectifOk returns a tuple with the TrancheEffectif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetTrancheEffectifOk() (*string, bool) {
	if o == nil || IsNil(o.TrancheEffectif) {
		return nil, false
	}
	return o.TrancheEffectif, true
}

// HasTrancheEffectif returns a boolean if a field has been set.
func (o *EtablissementFiche) HasTrancheEffectif() bool {
	if o != nil && !IsNil(o.TrancheEffectif) {
		return true
	}

	return false
}

// SetTrancheEffectif gets a reference to the given string and assigns it to the TrancheEffectif field.
func (o *EtablissementFiche) SetTrancheEffectif(v string) {
	o.TrancheEffectif = &v
}

// GetAnneeEffectif returns the AnneeEffectif field value if set, zero value otherwise.
func (o *EtablissementFiche) GetAnneeEffectif() int32 {
	if o == nil || IsNil(o.AnneeEffectif) {
		var ret int32
		return ret
	}
	return *o.AnneeEffectif
}

// GetAnneeEffectifOk returns a tuple with the AnneeEffectif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetAnneeEffectifOk() (*int32, bool) {
	if o == nil || IsNil(o.AnneeEffectif) {
		return nil, false
	}
	return o.AnneeEffectif, true
}

// HasAnneeEffectif returns a boolean if a field has been set.
func (o *EtablissementFiche) HasAnneeEffectif() bool {
	if o != nil && !IsNil(o.AnneeEffectif) {
		return true
	}

	return false
}

// SetAnneeEffectif gets a reference to the given int32 and assigns it to the AnneeEffectif field.
func (o *EtablissementFiche) SetAnneeEffectif(v int32) {
	o.AnneeEffectif = &v
}

// GetCodeNaf returns the CodeNaf field value if set, zero value otherwise.
func (o *EtablissementFiche) GetCodeNaf() string {
	if o == nil || IsNil(o.CodeNaf) {
		var ret string
		return ret
	}
	return *o.CodeNaf
}

// GetCodeNafOk returns a tuple with the CodeNaf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetCodeNafOk() (*string, bool) {
	if o == nil || IsNil(o.CodeNaf) {
		return nil, false
	}
	return o.CodeNaf, true
}

// HasCodeNaf returns a boolean if a field has been set.
func (o *EtablissementFiche) HasCodeNaf() bool {
	if o != nil && !IsNil(o.CodeNaf) {
		return true
	}

	return false
}

// SetCodeNaf gets a reference to the given string and assigns it to the CodeNaf field.
func (o *EtablissementFiche) SetCodeNaf(v string) {
	o.CodeNaf = &v
}

// GetLibelleCodeNaf returns the LibelleCodeNaf field value if set, zero value otherwise.
func (o *EtablissementFiche) GetLibelleCodeNaf() string {
	if o == nil || IsNil(o.LibelleCodeNaf) {
		var ret string
		return ret
	}
	return *o.LibelleCodeNaf
}

// GetLibelleCodeNafOk returns a tuple with the LibelleCodeNaf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetLibelleCodeNafOk() (*string, bool) {
	if o == nil || IsNil(o.LibelleCodeNaf) {
		return nil, false
	}
	return o.LibelleCodeNaf, true
}

// HasLibelleCodeNaf returns a boolean if a field has been set.
func (o *EtablissementFiche) HasLibelleCodeNaf() bool {
	if o != nil && !IsNil(o.LibelleCodeNaf) {
		return true
	}

	return false
}

// SetLibelleCodeNaf gets a reference to the given string and assigns it to the LibelleCodeNaf field.
func (o *EtablissementFiche) SetLibelleCodeNaf(v string) {
	o.LibelleCodeNaf = &v
}

// GetNomenclatureCodeNaf returns the NomenclatureCodeNaf field value if set, zero value otherwise.
func (o *EtablissementFiche) GetNomenclatureCodeNaf() string {
	if o == nil || IsNil(o.NomenclatureCodeNaf) {
		var ret string
		return ret
	}
	return *o.NomenclatureCodeNaf
}

// GetNomenclatureCodeNafOk returns a tuple with the NomenclatureCodeNaf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetNomenclatureCodeNafOk() (*string, bool) {
	if o == nil || IsNil(o.NomenclatureCodeNaf) {
		return nil, false
	}
	return o.NomenclatureCodeNaf, true
}

// HasNomenclatureCodeNaf returns a boolean if a field has been set.
func (o *EtablissementFiche) HasNomenclatureCodeNaf() bool {
	if o != nil && !IsNil(o.NomenclatureCodeNaf) {
		return true
	}

	return false
}

// SetNomenclatureCodeNaf gets a reference to the given string and assigns it to the NomenclatureCodeNaf field.
func (o *EtablissementFiche) SetNomenclatureCodeNaf(v string) {
	o.NomenclatureCodeNaf = &v
}

// GetDateDeCreation returns the DateDeCreation field value if set, zero value otherwise.
func (o *EtablissementFiche) GetDateDeCreation() string {
	if o == nil || IsNil(o.DateDeCreation) {
		var ret string
		return ret
	}
	return *o.DateDeCreation
}

// GetDateDeCreationOk returns a tuple with the DateDeCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetDateDeCreationOk() (*string, bool) {
	if o == nil || IsNil(o.DateDeCreation) {
		return nil, false
	}
	return o.DateDeCreation, true
}

// HasDateDeCreation returns a boolean if a field has been set.
func (o *EtablissementFiche) HasDateDeCreation() bool {
	if o != nil && !IsNil(o.DateDeCreation) {
		return true
	}

	return false
}

// SetDateDeCreation gets a reference to the given string and assigns it to the DateDeCreation field.
func (o *EtablissementFiche) SetDateDeCreation(v string) {
	o.DateDeCreation = &v
}

// GetNumeroVoie returns the NumeroVoie field value if set, zero value otherwise.
func (o *EtablissementFiche) GetNumeroVoie() int32 {
	if o == nil || IsNil(o.NumeroVoie) {
		var ret int32
		return ret
	}
	return *o.NumeroVoie
}

// GetNumeroVoieOk returns a tuple with the NumeroVoie field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetNumeroVoieOk() (*int32, bool) {
	if o == nil || IsNil(o.NumeroVoie) {
		return nil, false
	}
	return o.NumeroVoie, true
}

// HasNumeroVoie returns a boolean if a field has been set.
func (o *EtablissementFiche) HasNumeroVoie() bool {
	if o != nil && !IsNil(o.NumeroVoie) {
		return true
	}

	return false
}

// SetNumeroVoie gets a reference to the given int32 and assigns it to the NumeroVoie field.
func (o *EtablissementFiche) SetNumeroVoie(v int32) {
	o.NumeroVoie = &v
}

// GetIndiceRepetition returns the IndiceRepetition field value if set, zero value otherwise.
func (o *EtablissementFiche) GetIndiceRepetition() string {
	if o == nil || IsNil(o.IndiceRepetition) {
		var ret string
		return ret
	}
	return *o.IndiceRepetition
}

// GetIndiceRepetitionOk returns a tuple with the IndiceRepetition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetIndiceRepetitionOk() (*string, bool) {
	if o == nil || IsNil(o.IndiceRepetition) {
		return nil, false
	}
	return o.IndiceRepetition, true
}

// HasIndiceRepetition returns a boolean if a field has been set.
func (o *EtablissementFiche) HasIndiceRepetition() bool {
	if o != nil && !IsNil(o.IndiceRepetition) {
		return true
	}

	return false
}

// SetIndiceRepetition gets a reference to the given string and assigns it to the IndiceRepetition field.
func (o *EtablissementFiche) SetIndiceRepetition(v string) {
	o.IndiceRepetition = &v
}

// GetTypeVoie returns the TypeVoie field value if set, zero value otherwise.
func (o *EtablissementFiche) GetTypeVoie() string {
	if o == nil || IsNil(o.TypeVoie) {
		var ret string
		return ret
	}
	return *o.TypeVoie
}

// GetTypeVoieOk returns a tuple with the TypeVoie field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetTypeVoieOk() (*string, bool) {
	if o == nil || IsNil(o.TypeVoie) {
		return nil, false
	}
	return o.TypeVoie, true
}

// HasTypeVoie returns a boolean if a field has been set.
func (o *EtablissementFiche) HasTypeVoie() bool {
	if o != nil && !IsNil(o.TypeVoie) {
		return true
	}

	return false
}

// SetTypeVoie gets a reference to the given string and assigns it to the TypeVoie field.
func (o *EtablissementFiche) SetTypeVoie(v string) {
	o.TypeVoie = &v
}

// GetLibelleVoie returns the LibelleVoie field value if set, zero value otherwise.
func (o *EtablissementFiche) GetLibelleVoie() string {
	if o == nil || IsNil(o.LibelleVoie) {
		var ret string
		return ret
	}
	return *o.LibelleVoie
}

// GetLibelleVoieOk returns a tuple with the LibelleVoie field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetLibelleVoieOk() (*string, bool) {
	if o == nil || IsNil(o.LibelleVoie) {
		return nil, false
	}
	return o.LibelleVoie, true
}

// HasLibelleVoie returns a boolean if a field has been set.
func (o *EtablissementFiche) HasLibelleVoie() bool {
	if o != nil && !IsNil(o.LibelleVoie) {
		return true
	}

	return false
}

// SetLibelleVoie gets a reference to the given string and assigns it to the LibelleVoie field.
func (o *EtablissementFiche) SetLibelleVoie(v string) {
	o.LibelleVoie = &v
}

// GetComplementAdresse returns the ComplementAdresse field value if set, zero value otherwise.
func (o *EtablissementFiche) GetComplementAdresse() string {
	if o == nil || IsNil(o.ComplementAdresse) {
		var ret string
		return ret
	}
	return *o.ComplementAdresse
}

// GetComplementAdresseOk returns a tuple with the ComplementAdresse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetComplementAdresseOk() (*string, bool) {
	if o == nil || IsNil(o.ComplementAdresse) {
		return nil, false
	}
	return o.ComplementAdresse, true
}

// HasComplementAdresse returns a boolean if a field has been set.
func (o *EtablissementFiche) HasComplementAdresse() bool {
	if o != nil && !IsNil(o.ComplementAdresse) {
		return true
	}

	return false
}

// SetComplementAdresse gets a reference to the given string and assigns it to the ComplementAdresse field.
func (o *EtablissementFiche) SetComplementAdresse(v string) {
	o.ComplementAdresse = &v
}

// GetAdresseLigne1 returns the AdresseLigne1 field value if set, zero value otherwise.
func (o *EtablissementFiche) GetAdresseLigne1() string {
	if o == nil || IsNil(o.AdresseLigne1) {
		var ret string
		return ret
	}
	return *o.AdresseLigne1
}

// GetAdresseLigne1Ok returns a tuple with the AdresseLigne1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetAdresseLigne1Ok() (*string, bool) {
	if o == nil || IsNil(o.AdresseLigne1) {
		return nil, false
	}
	return o.AdresseLigne1, true
}

// HasAdresseLigne1 returns a boolean if a field has been set.
func (o *EtablissementFiche) HasAdresseLigne1() bool {
	if o != nil && !IsNil(o.AdresseLigne1) {
		return true
	}

	return false
}

// SetAdresseLigne1 gets a reference to the given string and assigns it to the AdresseLigne1 field.
func (o *EtablissementFiche) SetAdresseLigne1(v string) {
	o.AdresseLigne1 = &v
}

// GetAdresseLigne2 returns the AdresseLigne2 field value if set, zero value otherwise.
func (o *EtablissementFiche) GetAdresseLigne2() string {
	if o == nil || IsNil(o.AdresseLigne2) {
		var ret string
		return ret
	}
	return *o.AdresseLigne2
}

// GetAdresseLigne2Ok returns a tuple with the AdresseLigne2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetAdresseLigne2Ok() (*string, bool) {
	if o == nil || IsNil(o.AdresseLigne2) {
		return nil, false
	}
	return o.AdresseLigne2, true
}

// HasAdresseLigne2 returns a boolean if a field has been set.
func (o *EtablissementFiche) HasAdresseLigne2() bool {
	if o != nil && !IsNil(o.AdresseLigne2) {
		return true
	}

	return false
}

// SetAdresseLigne2 gets a reference to the given string and assigns it to the AdresseLigne2 field.
func (o *EtablissementFiche) SetAdresseLigne2(v string) {
	o.AdresseLigne2 = &v
}

// GetDateCessation returns the DateCessation field value if set, zero value otherwise.
func (o *EtablissementFiche) GetDateCessation() string {
	if o == nil || IsNil(o.DateCessation) {
		var ret string
		return ret
	}
	return *o.DateCessation
}

// GetDateCessationOk returns a tuple with the DateCessation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetDateCessationOk() (*string, bool) {
	if o == nil || IsNil(o.DateCessation) {
		return nil, false
	}
	return o.DateCessation, true
}

// HasDateCessation returns a boolean if a field has been set.
func (o *EtablissementFiche) HasDateCessation() bool {
	if o != nil && !IsNil(o.DateCessation) {
		return true
	}

	return false
}

// SetDateCessation gets a reference to the given string and assigns it to the DateCessation field.
func (o *EtablissementFiche) SetDateCessation(v string) {
	o.DateCessation = &v
}

// GetEnseigne returns the Enseigne field value if set, zero value otherwise.
func (o *EtablissementFiche) GetEnseigne() string {
	if o == nil || IsNil(o.Enseigne) {
		var ret string
		return ret
	}
	return *o.Enseigne
}

// GetEnseigneOk returns a tuple with the Enseigne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetEnseigneOk() (*string, bool) {
	if o == nil || IsNil(o.Enseigne) {
		return nil, false
	}
	return o.Enseigne, true
}

// HasEnseigne returns a boolean if a field has been set.
func (o *EtablissementFiche) HasEnseigne() bool {
	if o != nil && !IsNil(o.Enseigne) {
		return true
	}

	return false
}

// SetEnseigne gets a reference to the given string and assigns it to the Enseigne field.
func (o *EtablissementFiche) SetEnseigne(v string) {
	o.Enseigne = &v
}

// GetNomCommercial returns the NomCommercial field value if set, zero value otherwise.
func (o *EtablissementFiche) GetNomCommercial() string {
	if o == nil || IsNil(o.NomCommercial) {
		var ret string
		return ret
	}
	return *o.NomCommercial
}

// GetNomCommercialOk returns a tuple with the NomCommercial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetNomCommercialOk() (*string, bool) {
	if o == nil || IsNil(o.NomCommercial) {
		return nil, false
	}
	return o.NomCommercial, true
}

// HasNomCommercial returns a boolean if a field has been set.
func (o *EtablissementFiche) HasNomCommercial() bool {
	if o != nil && !IsNil(o.NomCommercial) {
		return true
	}

	return false
}

// SetNomCommercial gets a reference to the given string and assigns it to the NomCommercial field.
func (o *EtablissementFiche) SetNomCommercial(v string) {
	o.NomCommercial = &v
}

// GetDomiciliation returns the Domiciliation field value if set, zero value otherwise.
func (o *EtablissementFiche) GetDomiciliation() EtablissementFicheDomiciliation {
	if o == nil || IsNil(o.Domiciliation) {
		var ret EtablissementFicheDomiciliation
		return ret
	}
	return *o.Domiciliation
}

// GetDomiciliationOk returns a tuple with the Domiciliation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetDomiciliationOk() (*EtablissementFicheDomiciliation, bool) {
	if o == nil || IsNil(o.Domiciliation) {
		return nil, false
	}
	return o.Domiciliation, true
}

// HasDomiciliation returns a boolean if a field has been set.
func (o *EtablissementFiche) HasDomiciliation() bool {
	if o != nil && !IsNil(o.Domiciliation) {
		return true
	}

	return false
}

// SetDomiciliation gets a reference to the given EtablissementFicheDomiciliation and assigns it to the Domiciliation field.
func (o *EtablissementFiche) SetDomiciliation(v EtablissementFicheDomiciliation) {
	o.Domiciliation = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *EtablissementFiche) GetLabels() []LabelsBase {
	if o == nil || IsNil(o.Labels) {
		var ret []LabelsBase
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetLabelsOk() ([]LabelsBase, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *EtablissementFiche) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []LabelsBase and assigns it to the Labels field.
func (o *EtablissementFiche) SetLabels(v []LabelsBase) {
	o.Labels = v
}

// GetPredecesseurs returns the Predecesseurs field value if set, zero value otherwise.
func (o *EtablissementFiche) GetPredecesseurs() []LienSuccession {
	if o == nil || IsNil(o.Predecesseurs) {
		var ret []LienSuccession
		return ret
	}
	return o.Predecesseurs
}

// GetPredecesseursOk returns a tuple with the Predecesseurs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetPredecesseursOk() ([]LienSuccession, bool) {
	if o == nil || IsNil(o.Predecesseurs) {
		return nil, false
	}
	return o.Predecesseurs, true
}

// HasPredecesseurs returns a boolean if a field has been set.
func (o *EtablissementFiche) HasPredecesseurs() bool {
	if o != nil && !IsNil(o.Predecesseurs) {
		return true
	}

	return false
}

// SetPredecesseurs gets a reference to the given []LienSuccession and assigns it to the Predecesseurs field.
func (o *EtablissementFiche) SetPredecesseurs(v []LienSuccession) {
	o.Predecesseurs = v
}

// GetSuccesseurs returns the Successeurs field value if set, zero value otherwise.
func (o *EtablissementFiche) GetSuccesseurs() []LienSuccession {
	if o == nil || IsNil(o.Successeurs) {
		var ret []LienSuccession
		return ret
	}
	return o.Successeurs
}

// GetSuccesseursOk returns a tuple with the Successeurs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetSuccesseursOk() ([]LienSuccession, bool) {
	if o == nil || IsNil(o.Successeurs) {
		return nil, false
	}
	return o.Successeurs, true
}

// HasSuccesseurs returns a boolean if a field has been set.
func (o *EtablissementFiche) HasSuccesseurs() bool {
	if o != nil && !IsNil(o.Successeurs) {
		return true
	}

	return false
}

// SetSuccesseurs gets a reference to the given []LienSuccession and assigns it to the Successeurs field.
func (o *EtablissementFiche) SetSuccesseurs(v []LienSuccession) {
	o.Successeurs = v
}

// GetEnseigne1 returns the Enseigne1 field value if set, zero value otherwise.
func (o *EtablissementFiche) GetEnseigne1() string {
	if o == nil || IsNil(o.Enseigne1) {
		var ret string
		return ret
	}
	return *o.Enseigne1
}

// GetEnseigne1Ok returns a tuple with the Enseigne1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetEnseigne1Ok() (*string, bool) {
	if o == nil || IsNil(o.Enseigne1) {
		return nil, false
	}
	return o.Enseigne1, true
}

// HasEnseigne1 returns a boolean if a field has been set.
func (o *EtablissementFiche) HasEnseigne1() bool {
	if o != nil && !IsNil(o.Enseigne1) {
		return true
	}

	return false
}

// SetEnseigne1 gets a reference to the given string and assigns it to the Enseigne1 field.
func (o *EtablissementFiche) SetEnseigne1(v string) {
	o.Enseigne1 = &v
}

// GetEnseigne2 returns the Enseigne2 field value if set, zero value otherwise.
func (o *EtablissementFiche) GetEnseigne2() string {
	if o == nil || IsNil(o.Enseigne2) {
		var ret string
		return ret
	}
	return *o.Enseigne2
}

// GetEnseigne2Ok returns a tuple with the Enseigne2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetEnseigne2Ok() (*string, bool) {
	if o == nil || IsNil(o.Enseigne2) {
		return nil, false
	}
	return o.Enseigne2, true
}

// HasEnseigne2 returns a boolean if a field has been set.
func (o *EtablissementFiche) HasEnseigne2() bool {
	if o != nil && !IsNil(o.Enseigne2) {
		return true
	}

	return false
}

// SetEnseigne2 gets a reference to the given string and assigns it to the Enseigne2 field.
func (o *EtablissementFiche) SetEnseigne2(v string) {
	o.Enseigne2 = &v
}

// GetEnseigne3 returns the Enseigne3 field value if set, zero value otherwise.
func (o *EtablissementFiche) GetEnseigne3() string {
	if o == nil || IsNil(o.Enseigne3) {
		var ret string
		return ret
	}
	return *o.Enseigne3
}

// GetEnseigne3Ok returns a tuple with the Enseigne3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetEnseigne3Ok() (*string, bool) {
	if o == nil || IsNil(o.Enseigne3) {
		return nil, false
	}
	return o.Enseigne3, true
}

// HasEnseigne3 returns a boolean if a field has been set.
func (o *EtablissementFiche) HasEnseigne3() bool {
	if o != nil && !IsNil(o.Enseigne3) {
		return true
	}

	return false
}

// SetEnseigne3 gets a reference to the given string and assigns it to the Enseigne3 field.
func (o *EtablissementFiche) SetEnseigne3(v string) {
	o.Enseigne3 = &v
}

// GetDistributionSpeciale returns the DistributionSpeciale field value if set, zero value otherwise.
func (o *EtablissementFiche) GetDistributionSpeciale() string {
	if o == nil || IsNil(o.DistributionSpeciale) {
		var ret string
		return ret
	}
	return *o.DistributionSpeciale
}

// GetDistributionSpecialeOk returns a tuple with the DistributionSpeciale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetDistributionSpecialeOk() (*string, bool) {
	if o == nil || IsNil(o.DistributionSpeciale) {
		return nil, false
	}
	return o.DistributionSpeciale, true
}

// HasDistributionSpeciale returns a boolean if a field has been set.
func (o *EtablissementFiche) HasDistributionSpeciale() bool {
	if o != nil && !IsNil(o.DistributionSpeciale) {
		return true
	}

	return false
}

// SetDistributionSpeciale gets a reference to the given string and assigns it to the DistributionSpeciale field.
func (o *EtablissementFiche) SetDistributionSpeciale(v string) {
	o.DistributionSpeciale = &v
}

// GetCodeCedex returns the CodeCedex field value if set, zero value otherwise.
func (o *EtablissementFiche) GetCodeCedex() string {
	if o == nil || IsNil(o.CodeCedex) {
		var ret string
		return ret
	}
	return *o.CodeCedex
}

// GetCodeCedexOk returns a tuple with the CodeCedex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetCodeCedexOk() (*string, bool) {
	if o == nil || IsNil(o.CodeCedex) {
		return nil, false
	}
	return o.CodeCedex, true
}

// HasCodeCedex returns a boolean if a field has been set.
func (o *EtablissementFiche) HasCodeCedex() bool {
	if o != nil && !IsNil(o.CodeCedex) {
		return true
	}

	return false
}

// SetCodeCedex gets a reference to the given string and assigns it to the CodeCedex field.
func (o *EtablissementFiche) SetCodeCedex(v string) {
	o.CodeCedex = &v
}

// GetLibelleCedex returns the LibelleCedex field value if set, zero value otherwise.
func (o *EtablissementFiche) GetLibelleCedex() string {
	if o == nil || IsNil(o.LibelleCedex) {
		var ret string
		return ret
	}
	return *o.LibelleCedex
}

// GetLibelleCedexOk returns a tuple with the LibelleCedex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetLibelleCedexOk() (*string, bool) {
	if o == nil || IsNil(o.LibelleCedex) {
		return nil, false
	}
	return o.LibelleCedex, true
}

// HasLibelleCedex returns a boolean if a field has been set.
func (o *EtablissementFiche) HasLibelleCedex() bool {
	if o != nil && !IsNil(o.LibelleCedex) {
		return true
	}

	return false
}

// SetLibelleCedex gets a reference to the given string and assigns it to the LibelleCedex field.
func (o *EtablissementFiche) SetLibelleCedex(v string) {
	o.LibelleCedex = &v
}

// GetCodeCommune returns the CodeCommune field value if set, zero value otherwise.
func (o *EtablissementFiche) GetCodeCommune() string {
	if o == nil || IsNil(o.CodeCommune) {
		var ret string
		return ret
	}
	return *o.CodeCommune
}

// GetCodeCommuneOk returns a tuple with the CodeCommune field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetCodeCommuneOk() (*string, bool) {
	if o == nil || IsNil(o.CodeCommune) {
		return nil, false
	}
	return o.CodeCommune, true
}

// HasCodeCommune returns a boolean if a field has been set.
func (o *EtablissementFiche) HasCodeCommune() bool {
	if o != nil && !IsNil(o.CodeCommune) {
		return true
	}

	return false
}

// SetCodeCommune gets a reference to the given string and assigns it to the CodeCommune field.
func (o *EtablissementFiche) SetCodeCommune(v string) {
	o.CodeCommune = &v
}

// GetDepartement returns the Departement field value if set, zero value otherwise.
func (o *EtablissementFiche) GetDepartement() string {
	if o == nil || IsNil(o.Departement) {
		var ret string
		return ret
	}
	return *o.Departement
}

// GetDepartementOk returns a tuple with the Departement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetDepartementOk() (*string, bool) {
	if o == nil || IsNil(o.Departement) {
		return nil, false
	}
	return o.Departement, true
}

// HasDepartement returns a boolean if a field has been set.
func (o *EtablissementFiche) HasDepartement() bool {
	if o != nil && !IsNil(o.Departement) {
		return true
	}

	return false
}

// SetDepartement gets a reference to the given string and assigns it to the Departement field.
func (o *EtablissementFiche) SetDepartement(v string) {
	o.Departement = &v
}

// GetCodeDepartement returns the CodeDepartement field value if set, zero value otherwise.
func (o *EtablissementFiche) GetCodeDepartement() string {
	if o == nil || IsNil(o.CodeDepartement) {
		var ret string
		return ret
	}
	return *o.CodeDepartement
}

// GetCodeDepartementOk returns a tuple with the CodeDepartement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetCodeDepartementOk() (*string, bool) {
	if o == nil || IsNil(o.CodeDepartement) {
		return nil, false
	}
	return o.CodeDepartement, true
}

// HasCodeDepartement returns a boolean if a field has been set.
func (o *EtablissementFiche) HasCodeDepartement() bool {
	if o != nil && !IsNil(o.CodeDepartement) {
		return true
	}

	return false
}

// SetCodeDepartement gets a reference to the given string and assigns it to the CodeDepartement field.
func (o *EtablissementFiche) SetCodeDepartement(v string) {
	o.CodeDepartement = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *EtablissementFiche) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *EtablissementFiche) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *EtablissementFiche) SetRegion(v string) {
	o.Region = &v
}

// GetCodeRegion returns the CodeRegion field value if set, zero value otherwise.
func (o *EtablissementFiche) GetCodeRegion() string {
	if o == nil || IsNil(o.CodeRegion) {
		var ret string
		return ret
	}
	return *o.CodeRegion
}

// GetCodeRegionOk returns a tuple with the CodeRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EtablissementFiche) GetCodeRegionOk() (*string, bool) {
	if o == nil || IsNil(o.CodeRegion) {
		return nil, false
	}
	return o.CodeRegion, true
}

// HasCodeRegion returns a boolean if a field has been set.
func (o *EtablissementFiche) HasCodeRegion() bool {
	if o != nil && !IsNil(o.CodeRegion) {
		return true
	}

	return false
}

// SetCodeRegion gets a reference to the given string and assigns it to the CodeRegion field.
func (o *EtablissementFiche) SetCodeRegion(v string) {
	o.CodeRegion = &v
}

func (o EtablissementFiche) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EtablissementFiche) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Siret) {
		toSerialize["siret"] = o.Siret
	}
	if !IsNil(o.SiretFormate) {
		toSerialize["siret_formate"] = o.SiretFormate
	}
	if !IsNil(o.DiffusionPartielle) {
		toSerialize["diffusion_partielle"] = o.DiffusionPartielle
	}
	if !IsNil(o.Nic) {
		toSerialize["nic"] = o.Nic
	}
	if !IsNil(o.CodePostal) {
		toSerialize["code_postal"] = o.CodePostal
	}
	if !IsNil(o.Ville) {
		toSerialize["ville"] = o.Ville
	}
	if !IsNil(o.Pays) {
		toSerialize["pays"] = o.Pays
	}
	if !IsNil(o.CodePays) {
		toSerialize["code_pays"] = o.CodePays
	}
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !IsNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	if !IsNil(o.EtablissementCesse) {
		toSerialize["etablissement_cesse"] = o.EtablissementCesse
	}
	if !IsNil(o.Siege) {
		toSerialize["siege"] = o.Siege
	}
	if !IsNil(o.EtablissementEmployeur) {
		toSerialize["etablissement_employeur"] = o.EtablissementEmployeur
	}
	if !IsNil(o.Effectif) {
		toSerialize["effectif"] = o.Effectif
	}
	if !IsNil(o.EffectifMin) {
		toSerialize["effectif_min"] = o.EffectifMin
	}
	if !IsNil(o.EffectifMax) {
		toSerialize["effectif_max"] = o.EffectifMax
	}
	if !IsNil(o.TrancheEffectif) {
		toSerialize["tranche_effectif"] = o.TrancheEffectif
	}
	if !IsNil(o.AnneeEffectif) {
		toSerialize["annee_effectif"] = o.AnneeEffectif
	}
	if !IsNil(o.CodeNaf) {
		toSerialize["code_naf"] = o.CodeNaf
	}
	if !IsNil(o.LibelleCodeNaf) {
		toSerialize["libelle_code_naf"] = o.LibelleCodeNaf
	}
	if !IsNil(o.NomenclatureCodeNaf) {
		toSerialize["nomenclature_code_naf"] = o.NomenclatureCodeNaf
	}
	if !IsNil(o.DateDeCreation) {
		toSerialize["date_de_creation"] = o.DateDeCreation
	}
	if !IsNil(o.NumeroVoie) {
		toSerialize["numero_voie"] = o.NumeroVoie
	}
	if !IsNil(o.IndiceRepetition) {
		toSerialize["indice_repetition"] = o.IndiceRepetition
	}
	if !IsNil(o.TypeVoie) {
		toSerialize["type_voie"] = o.TypeVoie
	}
	if !IsNil(o.LibelleVoie) {
		toSerialize["libelle_voie"] = o.LibelleVoie
	}
	if !IsNil(o.ComplementAdresse) {
		toSerialize["complement_adresse"] = o.ComplementAdresse
	}
	if !IsNil(o.AdresseLigne1) {
		toSerialize["adresse_ligne_1"] = o.AdresseLigne1
	}
	if !IsNil(o.AdresseLigne2) {
		toSerialize["adresse_ligne_2"] = o.AdresseLigne2
	}
	if !IsNil(o.DateCessation) {
		toSerialize["date_cessation"] = o.DateCessation
	}
	if !IsNil(o.Enseigne) {
		toSerialize["enseigne"] = o.Enseigne
	}
	if !IsNil(o.NomCommercial) {
		toSerialize["nom_commercial"] = o.NomCommercial
	}
	if !IsNil(o.Domiciliation) {
		toSerialize["domiciliation"] = o.Domiciliation
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Predecesseurs) {
		toSerialize["predecesseurs"] = o.Predecesseurs
	}
	if !IsNil(o.Successeurs) {
		toSerialize["successeurs"] = o.Successeurs
	}
	if !IsNil(o.Enseigne1) {
		toSerialize["enseigne_1"] = o.Enseigne1
	}
	if !IsNil(o.Enseigne2) {
		toSerialize["enseigne_2"] = o.Enseigne2
	}
	if !IsNil(o.Enseigne3) {
		toSerialize["enseigne_3"] = o.Enseigne3
	}
	if !IsNil(o.DistributionSpeciale) {
		toSerialize["distribution_speciale"] = o.DistributionSpeciale
	}
	if !IsNil(o.CodeCedex) {
		toSerialize["code_cedex"] = o.CodeCedex
	}
	if !IsNil(o.LibelleCedex) {
		toSerialize["libelle_cedex"] = o.LibelleCedex
	}
	if !IsNil(o.CodeCommune) {
		toSerialize["code_commune"] = o.CodeCommune
	}
	if !IsNil(o.Departement) {
		toSerialize["departement"] = o.Departement
	}
	if !IsNil(o.CodeDepartement) {
		toSerialize["code_departement"] = o.CodeDepartement
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.CodeRegion) {
		toSerialize["code_region"] = o.CodeRegion
	}
	return toSerialize, nil
}

type NullableEtablissementFiche struct {
	value *EtablissementFiche
	isSet bool
}

func (v NullableEtablissementFiche) Get() *EtablissementFiche {
	return v.value
}

func (v *NullableEtablissementFiche) Set(val *EtablissementFiche) {
	v.value = val
	v.isSet = true
}

func (v NullableEtablissementFiche) IsSet() bool {
	return v.isSet
}

func (v *NullableEtablissementFiche) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEtablissementFiche(val *EtablissementFiche) *NullableEtablissementFiche {
	return &NullableEtablissementFiche{value: val, isSet: true}
}

func (v NullableEtablissementFiche) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEtablissementFiche) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


