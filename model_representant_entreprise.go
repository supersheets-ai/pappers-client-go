/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RepresentantEntreprise type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RepresentantEntreprise{}

// RepresentantEntreprise struct for RepresentantEntreprise
type RepresentantEntreprise struct {
	// Qualité du représentant.
	Qualite *string `json:"qualite,omitempty"`
	// Vrai si le représentant est une personne morale, faux si personne physique.
	PersonneMorale *bool `json:"personne_morale,omitempty"`
	// Date de prise de poste du représentant.
	DatePriseDePoste *string `json:"date_prise_de_poste,omitempty"`
	// Dénomination du représentant si personne morale.
	Denomination *string `json:"denomination,omitempty"`
	// Siren du représentant si personne morale.
	Siren *string `json:"siren,omitempty"`
	// Forme juridique du représentant si personne morale.
	FormeJuridique *string `json:"forme_juridique,omitempty"`
	// Sexe supposé du représentant si personne physique. F pour féminin, M pour masculin. Ce champ est estimé à partir du prénom du représentant.
	Sexe *string `json:"sexe,omitempty"`
	// Nom du représentant.
	Nom *string `json:"nom,omitempty"`
	// Prénoms du représentant.
	Prenom *string `json:"prenom,omitempty"`
	// Prénom usuel du représentant.
	PrenomUsuel *string `json:"prenom_usuel,omitempty"`
	// Nom complet du représentant.
	NomComplet *string `json:"nom_complet,omitempty"`
	// Date de naissance du représentant.
	DateDeNaissance *string `json:"date_de_naissance,omitempty"`
	// Date de naissance formatée du représentant.
	DateDeNaissanceFormate *string `json:"date_de_naissance_formate,omitempty"`
	// Age du représentant.
	Age *int32 `json:"age,omitempty"`
	// Nationalité du représentant.
	Nationalite *string `json:"nationalite,omitempty"`
	// Code nationalité du représentant
	CodeNationalite *string `json:"code_nationalite,omitempty"`
	// Ville de naissance du représentant.
	VilleDeNaissance *string `json:"ville_de_naissance,omitempty"`
	// Pays de naissance du représentant.
	PaysDeNaissance *string `json:"pays_de_naissance,omitempty"`
	// Code du pays de naissance du représentant.
	CodePaysDeNaissance *string `json:"code_pays_de_naissance,omitempty"`
	// Première ligne de l'adresse du représentant.
	AdresseLigne1 *string `json:"adresse_ligne_1,omitempty"`
	// Deuxième ligne de l'adresse du représentant.
	AdresseLigne2 *string `json:"adresse_ligne_2,omitempty"`
	// Troisième ligne de l'adresse du représentant.
	AdresseLigne3 *string `json:"adresse_ligne_3,omitempty"`
	// Code postal du représentant.
	CodePostal *string `json:"code_postal,omitempty"`
	// Ville du représentant.
	Ville *string `json:"ville,omitempty"`
	// Pays du représentant.
	Pays *string `json:"pays,omitempty"`
	// Code du pays du représentant
	CodePays *string `json:"code_pays,omitempty"`
	PersonnePolitiquementExposee *PersonnePolitiquementExposee `json:"personne_politiquement_exposee,omitempty"`
	// Vaut vrai si le représentant est actuellement sous sanction. Uniquement présent si demandé dans les champs supplémentaires.
	SanctionsEnCours *bool `json:"sanctions_en_cours,omitempty"`
	// Liste des sanctions du représentant. Uniquement présent si demandé dans les champs supplémentaires.
	Sanctions []Sanction `json:"sanctions,omitempty"`
	// Indique si une personne avec le même nom et la même date de naissance est présente dans le fichier des personnes décédées. Uniquement présent si demandé dans les champs supplémentaires.
	Decede *bool `json:"decede,omitempty"`
	// Indique, si le champ decede est vrai, la date de décès précisée dans le fichier des personnes décédées. Uniquement présent si demandé dans les champs supplémentaires.
	DateDeDeces *string `json:"date_de_deces,omitempty"`
}

// NewRepresentantEntreprise instantiates a new RepresentantEntreprise object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepresentantEntreprise() *RepresentantEntreprise {
	this := RepresentantEntreprise{}
	return &this
}

// NewRepresentantEntrepriseWithDefaults instantiates a new RepresentantEntreprise object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepresentantEntrepriseWithDefaults() *RepresentantEntreprise {
	this := RepresentantEntreprise{}
	return &this
}

// GetQualite returns the Qualite field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetQualite() string {
	if o == nil || IsNil(o.Qualite) {
		var ret string
		return ret
	}
	return *o.Qualite
}

// GetQualiteOk returns a tuple with the Qualite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetQualiteOk() (*string, bool) {
	if o == nil || IsNil(o.Qualite) {
		return nil, false
	}
	return o.Qualite, true
}

// HasQualite returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasQualite() bool {
	if o != nil && !IsNil(o.Qualite) {
		return true
	}

	return false
}

// SetQualite gets a reference to the given string and assigns it to the Qualite field.
func (o *RepresentantEntreprise) SetQualite(v string) {
	o.Qualite = &v
}

// GetPersonneMorale returns the PersonneMorale field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetPersonneMorale() bool {
	if o == nil || IsNil(o.PersonneMorale) {
		var ret bool
		return ret
	}
	return *o.PersonneMorale
}

// GetPersonneMoraleOk returns a tuple with the PersonneMorale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetPersonneMoraleOk() (*bool, bool) {
	if o == nil || IsNil(o.PersonneMorale) {
		return nil, false
	}
	return o.PersonneMorale, true
}

// HasPersonneMorale returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasPersonneMorale() bool {
	if o != nil && !IsNil(o.PersonneMorale) {
		return true
	}

	return false
}

// SetPersonneMorale gets a reference to the given bool and assigns it to the PersonneMorale field.
func (o *RepresentantEntreprise) SetPersonneMorale(v bool) {
	o.PersonneMorale = &v
}

// GetDatePriseDePoste returns the DatePriseDePoste field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetDatePriseDePoste() string {
	if o == nil || IsNil(o.DatePriseDePoste) {
		var ret string
		return ret
	}
	return *o.DatePriseDePoste
}

// GetDatePriseDePosteOk returns a tuple with the DatePriseDePoste field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetDatePriseDePosteOk() (*string, bool) {
	if o == nil || IsNil(o.DatePriseDePoste) {
		return nil, false
	}
	return o.DatePriseDePoste, true
}

// HasDatePriseDePoste returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasDatePriseDePoste() bool {
	if o != nil && !IsNil(o.DatePriseDePoste) {
		return true
	}

	return false
}

// SetDatePriseDePoste gets a reference to the given string and assigns it to the DatePriseDePoste field.
func (o *RepresentantEntreprise) SetDatePriseDePoste(v string) {
	o.DatePriseDePoste = &v
}

// GetDenomination returns the Denomination field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetDenomination() string {
	if o == nil || IsNil(o.Denomination) {
		var ret string
		return ret
	}
	return *o.Denomination
}

// GetDenominationOk returns a tuple with the Denomination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetDenominationOk() (*string, bool) {
	if o == nil || IsNil(o.Denomination) {
		return nil, false
	}
	return o.Denomination, true
}

// HasDenomination returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasDenomination() bool {
	if o != nil && !IsNil(o.Denomination) {
		return true
	}

	return false
}

// SetDenomination gets a reference to the given string and assigns it to the Denomination field.
func (o *RepresentantEntreprise) SetDenomination(v string) {
	o.Denomination = &v
}

// GetSiren returns the Siren field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetSiren() string {
	if o == nil || IsNil(o.Siren) {
		var ret string
		return ret
	}
	return *o.Siren
}

// GetSirenOk returns a tuple with the Siren field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetSirenOk() (*string, bool) {
	if o == nil || IsNil(o.Siren) {
		return nil, false
	}
	return o.Siren, true
}

// HasSiren returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasSiren() bool {
	if o != nil && !IsNil(o.Siren) {
		return true
	}

	return false
}

// SetSiren gets a reference to the given string and assigns it to the Siren field.
func (o *RepresentantEntreprise) SetSiren(v string) {
	o.Siren = &v
}

// GetFormeJuridique returns the FormeJuridique field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetFormeJuridique() string {
	if o == nil || IsNil(o.FormeJuridique) {
		var ret string
		return ret
	}
	return *o.FormeJuridique
}

// GetFormeJuridiqueOk returns a tuple with the FormeJuridique field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetFormeJuridiqueOk() (*string, bool) {
	if o == nil || IsNil(o.FormeJuridique) {
		return nil, false
	}
	return o.FormeJuridique, true
}

// HasFormeJuridique returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasFormeJuridique() bool {
	if o != nil && !IsNil(o.FormeJuridique) {
		return true
	}

	return false
}

// SetFormeJuridique gets a reference to the given string and assigns it to the FormeJuridique field.
func (o *RepresentantEntreprise) SetFormeJuridique(v string) {
	o.FormeJuridique = &v
}

// GetSexe returns the Sexe field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetSexe() string {
	if o == nil || IsNil(o.Sexe) {
		var ret string
		return ret
	}
	return *o.Sexe
}

// GetSexeOk returns a tuple with the Sexe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetSexeOk() (*string, bool) {
	if o == nil || IsNil(o.Sexe) {
		return nil, false
	}
	return o.Sexe, true
}

// HasSexe returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasSexe() bool {
	if o != nil && !IsNil(o.Sexe) {
		return true
	}

	return false
}

// SetSexe gets a reference to the given string and assigns it to the Sexe field.
func (o *RepresentantEntreprise) SetSexe(v string) {
	o.Sexe = &v
}

// GetNom returns the Nom field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetNom() string {
	if o == nil || IsNil(o.Nom) {
		var ret string
		return ret
	}
	return *o.Nom
}

// GetNomOk returns a tuple with the Nom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetNomOk() (*string, bool) {
	if o == nil || IsNil(o.Nom) {
		return nil, false
	}
	return o.Nom, true
}

// HasNom returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasNom() bool {
	if o != nil && !IsNil(o.Nom) {
		return true
	}

	return false
}

// SetNom gets a reference to the given string and assigns it to the Nom field.
func (o *RepresentantEntreprise) SetNom(v string) {
	o.Nom = &v
}

// GetPrenom returns the Prenom field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetPrenom() string {
	if o == nil || IsNil(o.Prenom) {
		var ret string
		return ret
	}
	return *o.Prenom
}

// GetPrenomOk returns a tuple with the Prenom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetPrenomOk() (*string, bool) {
	if o == nil || IsNil(o.Prenom) {
		return nil, false
	}
	return o.Prenom, true
}

// HasPrenom returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasPrenom() bool {
	if o != nil && !IsNil(o.Prenom) {
		return true
	}

	return false
}

// SetPrenom gets a reference to the given string and assigns it to the Prenom field.
func (o *RepresentantEntreprise) SetPrenom(v string) {
	o.Prenom = &v
}

// GetPrenomUsuel returns the PrenomUsuel field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetPrenomUsuel() string {
	if o == nil || IsNil(o.PrenomUsuel) {
		var ret string
		return ret
	}
	return *o.PrenomUsuel
}

// GetPrenomUsuelOk returns a tuple with the PrenomUsuel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetPrenomUsuelOk() (*string, bool) {
	if o == nil || IsNil(o.PrenomUsuel) {
		return nil, false
	}
	return o.PrenomUsuel, true
}

// HasPrenomUsuel returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasPrenomUsuel() bool {
	if o != nil && !IsNil(o.PrenomUsuel) {
		return true
	}

	return false
}

// SetPrenomUsuel gets a reference to the given string and assigns it to the PrenomUsuel field.
func (o *RepresentantEntreprise) SetPrenomUsuel(v string) {
	o.PrenomUsuel = &v
}

// GetNomComplet returns the NomComplet field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetNomComplet() string {
	if o == nil || IsNil(o.NomComplet) {
		var ret string
		return ret
	}
	return *o.NomComplet
}

// GetNomCompletOk returns a tuple with the NomComplet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetNomCompletOk() (*string, bool) {
	if o == nil || IsNil(o.NomComplet) {
		return nil, false
	}
	return o.NomComplet, true
}

// HasNomComplet returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasNomComplet() bool {
	if o != nil && !IsNil(o.NomComplet) {
		return true
	}

	return false
}

// SetNomComplet gets a reference to the given string and assigns it to the NomComplet field.
func (o *RepresentantEntreprise) SetNomComplet(v string) {
	o.NomComplet = &v
}

// GetDateDeNaissance returns the DateDeNaissance field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetDateDeNaissance() string {
	if o == nil || IsNil(o.DateDeNaissance) {
		var ret string
		return ret
	}
	return *o.DateDeNaissance
}

// GetDateDeNaissanceOk returns a tuple with the DateDeNaissance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetDateDeNaissanceOk() (*string, bool) {
	if o == nil || IsNil(o.DateDeNaissance) {
		return nil, false
	}
	return o.DateDeNaissance, true
}

// HasDateDeNaissance returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasDateDeNaissance() bool {
	if o != nil && !IsNil(o.DateDeNaissance) {
		return true
	}

	return false
}

// SetDateDeNaissance gets a reference to the given string and assigns it to the DateDeNaissance field.
func (o *RepresentantEntreprise) SetDateDeNaissance(v string) {
	o.DateDeNaissance = &v
}

// GetDateDeNaissanceFormate returns the DateDeNaissanceFormate field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetDateDeNaissanceFormate() string {
	if o == nil || IsNil(o.DateDeNaissanceFormate) {
		var ret string
		return ret
	}
	return *o.DateDeNaissanceFormate
}

// GetDateDeNaissanceFormateOk returns a tuple with the DateDeNaissanceFormate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetDateDeNaissanceFormateOk() (*string, bool) {
	if o == nil || IsNil(o.DateDeNaissanceFormate) {
		return nil, false
	}
	return o.DateDeNaissanceFormate, true
}

// HasDateDeNaissanceFormate returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasDateDeNaissanceFormate() bool {
	if o != nil && !IsNil(o.DateDeNaissanceFormate) {
		return true
	}

	return false
}

// SetDateDeNaissanceFormate gets a reference to the given string and assigns it to the DateDeNaissanceFormate field.
func (o *RepresentantEntreprise) SetDateDeNaissanceFormate(v string) {
	o.DateDeNaissanceFormate = &v
}

// GetAge returns the Age field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetAge() int32 {
	if o == nil || IsNil(o.Age) {
		var ret int32
		return ret
	}
	return *o.Age
}

// GetAgeOk returns a tuple with the Age field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetAgeOk() (*int32, bool) {
	if o == nil || IsNil(o.Age) {
		return nil, false
	}
	return o.Age, true
}

// HasAge returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasAge() bool {
	if o != nil && !IsNil(o.Age) {
		return true
	}

	return false
}

// SetAge gets a reference to the given int32 and assigns it to the Age field.
func (o *RepresentantEntreprise) SetAge(v int32) {
	o.Age = &v
}

// GetNationalite returns the Nationalite field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetNationalite() string {
	if o == nil || IsNil(o.Nationalite) {
		var ret string
		return ret
	}
	return *o.Nationalite
}

// GetNationaliteOk returns a tuple with the Nationalite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetNationaliteOk() (*string, bool) {
	if o == nil || IsNil(o.Nationalite) {
		return nil, false
	}
	return o.Nationalite, true
}

// HasNationalite returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasNationalite() bool {
	if o != nil && !IsNil(o.Nationalite) {
		return true
	}

	return false
}

// SetNationalite gets a reference to the given string and assigns it to the Nationalite field.
func (o *RepresentantEntreprise) SetNationalite(v string) {
	o.Nationalite = &v
}

// GetCodeNationalite returns the CodeNationalite field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetCodeNationalite() string {
	if o == nil || IsNil(o.CodeNationalite) {
		var ret string
		return ret
	}
	return *o.CodeNationalite
}

// GetCodeNationaliteOk returns a tuple with the CodeNationalite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetCodeNationaliteOk() (*string, bool) {
	if o == nil || IsNil(o.CodeNationalite) {
		return nil, false
	}
	return o.CodeNationalite, true
}

// HasCodeNationalite returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasCodeNationalite() bool {
	if o != nil && !IsNil(o.CodeNationalite) {
		return true
	}

	return false
}

// SetCodeNationalite gets a reference to the given string and assigns it to the CodeNationalite field.
func (o *RepresentantEntreprise) SetCodeNationalite(v string) {
	o.CodeNationalite = &v
}

// GetVilleDeNaissance returns the VilleDeNaissance field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetVilleDeNaissance() string {
	if o == nil || IsNil(o.VilleDeNaissance) {
		var ret string
		return ret
	}
	return *o.VilleDeNaissance
}

// GetVilleDeNaissanceOk returns a tuple with the VilleDeNaissance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetVilleDeNaissanceOk() (*string, bool) {
	if o == nil || IsNil(o.VilleDeNaissance) {
		return nil, false
	}
	return o.VilleDeNaissance, true
}

// HasVilleDeNaissance returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasVilleDeNaissance() bool {
	if o != nil && !IsNil(o.VilleDeNaissance) {
		return true
	}

	return false
}

// SetVilleDeNaissance gets a reference to the given string and assigns it to the VilleDeNaissance field.
func (o *RepresentantEntreprise) SetVilleDeNaissance(v string) {
	o.VilleDeNaissance = &v
}

// GetPaysDeNaissance returns the PaysDeNaissance field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetPaysDeNaissance() string {
	if o == nil || IsNil(o.PaysDeNaissance) {
		var ret string
		return ret
	}
	return *o.PaysDeNaissance
}

// GetPaysDeNaissanceOk returns a tuple with the PaysDeNaissance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetPaysDeNaissanceOk() (*string, bool) {
	if o == nil || IsNil(o.PaysDeNaissance) {
		return nil, false
	}
	return o.PaysDeNaissance, true
}

// HasPaysDeNaissance returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasPaysDeNaissance() bool {
	if o != nil && !IsNil(o.PaysDeNaissance) {
		return true
	}

	return false
}

// SetPaysDeNaissance gets a reference to the given string and assigns it to the PaysDeNaissance field.
func (o *RepresentantEntreprise) SetPaysDeNaissance(v string) {
	o.PaysDeNaissance = &v
}

// GetCodePaysDeNaissance returns the CodePaysDeNaissance field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetCodePaysDeNaissance() string {
	if o == nil || IsNil(o.CodePaysDeNaissance) {
		var ret string
		return ret
	}
	return *o.CodePaysDeNaissance
}

// GetCodePaysDeNaissanceOk returns a tuple with the CodePaysDeNaissance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetCodePaysDeNaissanceOk() (*string, bool) {
	if o == nil || IsNil(o.CodePaysDeNaissance) {
		return nil, false
	}
	return o.CodePaysDeNaissance, true
}

// HasCodePaysDeNaissance returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasCodePaysDeNaissance() bool {
	if o != nil && !IsNil(o.CodePaysDeNaissance) {
		return true
	}

	return false
}

// SetCodePaysDeNaissance gets a reference to the given string and assigns it to the CodePaysDeNaissance field.
func (o *RepresentantEntreprise) SetCodePaysDeNaissance(v string) {
	o.CodePaysDeNaissance = &v
}

// GetAdresseLigne1 returns the AdresseLigne1 field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetAdresseLigne1() string {
	if o == nil || IsNil(o.AdresseLigne1) {
		var ret string
		return ret
	}
	return *o.AdresseLigne1
}

// GetAdresseLigne1Ok returns a tuple with the AdresseLigne1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetAdresseLigne1Ok() (*string, bool) {
	if o == nil || IsNil(o.AdresseLigne1) {
		return nil, false
	}
	return o.AdresseLigne1, true
}

// HasAdresseLigne1 returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasAdresseLigne1() bool {
	if o != nil && !IsNil(o.AdresseLigne1) {
		return true
	}

	return false
}

// SetAdresseLigne1 gets a reference to the given string and assigns it to the AdresseLigne1 field.
func (o *RepresentantEntreprise) SetAdresseLigne1(v string) {
	o.AdresseLigne1 = &v
}

// GetAdresseLigne2 returns the AdresseLigne2 field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetAdresseLigne2() string {
	if o == nil || IsNil(o.AdresseLigne2) {
		var ret string
		return ret
	}
	return *o.AdresseLigne2
}

// GetAdresseLigne2Ok returns a tuple with the AdresseLigne2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetAdresseLigne2Ok() (*string, bool) {
	if o == nil || IsNil(o.AdresseLigne2) {
		return nil, false
	}
	return o.AdresseLigne2, true
}

// HasAdresseLigne2 returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasAdresseLigne2() bool {
	if o != nil && !IsNil(o.AdresseLigne2) {
		return true
	}

	return false
}

// SetAdresseLigne2 gets a reference to the given string and assigns it to the AdresseLigne2 field.
func (o *RepresentantEntreprise) SetAdresseLigne2(v string) {
	o.AdresseLigne2 = &v
}

// GetAdresseLigne3 returns the AdresseLigne3 field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetAdresseLigne3() string {
	if o == nil || IsNil(o.AdresseLigne3) {
		var ret string
		return ret
	}
	return *o.AdresseLigne3
}

// GetAdresseLigne3Ok returns a tuple with the AdresseLigne3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetAdresseLigne3Ok() (*string, bool) {
	if o == nil || IsNil(o.AdresseLigne3) {
		return nil, false
	}
	return o.AdresseLigne3, true
}

// HasAdresseLigne3 returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasAdresseLigne3() bool {
	if o != nil && !IsNil(o.AdresseLigne3) {
		return true
	}

	return false
}

// SetAdresseLigne3 gets a reference to the given string and assigns it to the AdresseLigne3 field.
func (o *RepresentantEntreprise) SetAdresseLigne3(v string) {
	o.AdresseLigne3 = &v
}

// GetCodePostal returns the CodePostal field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetCodePostal() string {
	if o == nil || IsNil(o.CodePostal) {
		var ret string
		return ret
	}
	return *o.CodePostal
}

// GetCodePostalOk returns a tuple with the CodePostal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetCodePostalOk() (*string, bool) {
	if o == nil || IsNil(o.CodePostal) {
		return nil, false
	}
	return o.CodePostal, true
}

// HasCodePostal returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasCodePostal() bool {
	if o != nil && !IsNil(o.CodePostal) {
		return true
	}

	return false
}

// SetCodePostal gets a reference to the given string and assigns it to the CodePostal field.
func (o *RepresentantEntreprise) SetCodePostal(v string) {
	o.CodePostal = &v
}

// GetVille returns the Ville field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetVille() string {
	if o == nil || IsNil(o.Ville) {
		var ret string
		return ret
	}
	return *o.Ville
}

// GetVilleOk returns a tuple with the Ville field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetVilleOk() (*string, bool) {
	if o == nil || IsNil(o.Ville) {
		return nil, false
	}
	return o.Ville, true
}

// HasVille returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasVille() bool {
	if o != nil && !IsNil(o.Ville) {
		return true
	}

	return false
}

// SetVille gets a reference to the given string and assigns it to the Ville field.
func (o *RepresentantEntreprise) SetVille(v string) {
	o.Ville = &v
}

// GetPays returns the Pays field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetPays() string {
	if o == nil || IsNil(o.Pays) {
		var ret string
		return ret
	}
	return *o.Pays
}

// GetPaysOk returns a tuple with the Pays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetPaysOk() (*string, bool) {
	if o == nil || IsNil(o.Pays) {
		return nil, false
	}
	return o.Pays, true
}

// HasPays returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasPays() bool {
	if o != nil && !IsNil(o.Pays) {
		return true
	}

	return false
}

// SetPays gets a reference to the given string and assigns it to the Pays field.
func (o *RepresentantEntreprise) SetPays(v string) {
	o.Pays = &v
}

// GetCodePays returns the CodePays field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetCodePays() string {
	if o == nil || IsNil(o.CodePays) {
		var ret string
		return ret
	}
	return *o.CodePays
}

// GetCodePaysOk returns a tuple with the CodePays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetCodePaysOk() (*string, bool) {
	if o == nil || IsNil(o.CodePays) {
		return nil, false
	}
	return o.CodePays, true
}

// HasCodePays returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasCodePays() bool {
	if o != nil && !IsNil(o.CodePays) {
		return true
	}

	return false
}

// SetCodePays gets a reference to the given string and assigns it to the CodePays field.
func (o *RepresentantEntreprise) SetCodePays(v string) {
	o.CodePays = &v
}

// GetPersonnePolitiquementExposee returns the PersonnePolitiquementExposee field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetPersonnePolitiquementExposee() PersonnePolitiquementExposee {
	if o == nil || IsNil(o.PersonnePolitiquementExposee) {
		var ret PersonnePolitiquementExposee
		return ret
	}
	return *o.PersonnePolitiquementExposee
}

// GetPersonnePolitiquementExposeeOk returns a tuple with the PersonnePolitiquementExposee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetPersonnePolitiquementExposeeOk() (*PersonnePolitiquementExposee, bool) {
	if o == nil || IsNil(o.PersonnePolitiquementExposee) {
		return nil, false
	}
	return o.PersonnePolitiquementExposee, true
}

// HasPersonnePolitiquementExposee returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasPersonnePolitiquementExposee() bool {
	if o != nil && !IsNil(o.PersonnePolitiquementExposee) {
		return true
	}

	return false
}

// SetPersonnePolitiquementExposee gets a reference to the given PersonnePolitiquementExposee and assigns it to the PersonnePolitiquementExposee field.
func (o *RepresentantEntreprise) SetPersonnePolitiquementExposee(v PersonnePolitiquementExposee) {
	o.PersonnePolitiquementExposee = &v
}

// GetSanctionsEnCours returns the SanctionsEnCours field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetSanctionsEnCours() bool {
	if o == nil || IsNil(o.SanctionsEnCours) {
		var ret bool
		return ret
	}
	return *o.SanctionsEnCours
}

// GetSanctionsEnCoursOk returns a tuple with the SanctionsEnCours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetSanctionsEnCoursOk() (*bool, bool) {
	if o == nil || IsNil(o.SanctionsEnCours) {
		return nil, false
	}
	return o.SanctionsEnCours, true
}

// HasSanctionsEnCours returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasSanctionsEnCours() bool {
	if o != nil && !IsNil(o.SanctionsEnCours) {
		return true
	}

	return false
}

// SetSanctionsEnCours gets a reference to the given bool and assigns it to the SanctionsEnCours field.
func (o *RepresentantEntreprise) SetSanctionsEnCours(v bool) {
	o.SanctionsEnCours = &v
}

// GetSanctions returns the Sanctions field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetSanctions() []Sanction {
	if o == nil || IsNil(o.Sanctions) {
		var ret []Sanction
		return ret
	}
	return o.Sanctions
}

// GetSanctionsOk returns a tuple with the Sanctions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetSanctionsOk() ([]Sanction, bool) {
	if o == nil || IsNil(o.Sanctions) {
		return nil, false
	}
	return o.Sanctions, true
}

// HasSanctions returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasSanctions() bool {
	if o != nil && !IsNil(o.Sanctions) {
		return true
	}

	return false
}

// SetSanctions gets a reference to the given []Sanction and assigns it to the Sanctions field.
func (o *RepresentantEntreprise) SetSanctions(v []Sanction) {
	o.Sanctions = v
}

// GetDecede returns the Decede field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetDecede() bool {
	if o == nil || IsNil(o.Decede) {
		var ret bool
		return ret
	}
	return *o.Decede
}

// GetDecedeOk returns a tuple with the Decede field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetDecedeOk() (*bool, bool) {
	if o == nil || IsNil(o.Decede) {
		return nil, false
	}
	return o.Decede, true
}

// HasDecede returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasDecede() bool {
	if o != nil && !IsNil(o.Decede) {
		return true
	}

	return false
}

// SetDecede gets a reference to the given bool and assigns it to the Decede field.
func (o *RepresentantEntreprise) SetDecede(v bool) {
	o.Decede = &v
}

// GetDateDeDeces returns the DateDeDeces field value if set, zero value otherwise.
func (o *RepresentantEntreprise) GetDateDeDeces() string {
	if o == nil || IsNil(o.DateDeDeces) {
		var ret string
		return ret
	}
	return *o.DateDeDeces
}

// GetDateDeDecesOk returns a tuple with the DateDeDeces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepresentantEntreprise) GetDateDeDecesOk() (*string, bool) {
	if o == nil || IsNil(o.DateDeDeces) {
		return nil, false
	}
	return o.DateDeDeces, true
}

// HasDateDeDeces returns a boolean if a field has been set.
func (o *RepresentantEntreprise) HasDateDeDeces() bool {
	if o != nil && !IsNil(o.DateDeDeces) {
		return true
	}

	return false
}

// SetDateDeDeces gets a reference to the given string and assigns it to the DateDeDeces field.
func (o *RepresentantEntreprise) SetDateDeDeces(v string) {
	o.DateDeDeces = &v
}

func (o RepresentantEntreprise) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RepresentantEntreprise) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Qualite) {
		toSerialize["qualite"] = o.Qualite
	}
	if !IsNil(o.PersonneMorale) {
		toSerialize["personne_morale"] = o.PersonneMorale
	}
	if !IsNil(o.DatePriseDePoste) {
		toSerialize["date_prise_de_poste"] = o.DatePriseDePoste
	}
	if !IsNil(o.Denomination) {
		toSerialize["denomination"] = o.Denomination
	}
	if !IsNil(o.Siren) {
		toSerialize["siren"] = o.Siren
	}
	if !IsNil(o.FormeJuridique) {
		toSerialize["forme_juridique"] = o.FormeJuridique
	}
	if !IsNil(o.Sexe) {
		toSerialize["sexe"] = o.Sexe
	}
	if !IsNil(o.Nom) {
		toSerialize["nom"] = o.Nom
	}
	if !IsNil(o.Prenom) {
		toSerialize["prenom"] = o.Prenom
	}
	if !IsNil(o.PrenomUsuel) {
		toSerialize["prenom_usuel"] = o.PrenomUsuel
	}
	if !IsNil(o.NomComplet) {
		toSerialize["nom_complet"] = o.NomComplet
	}
	if !IsNil(o.DateDeNaissance) {
		toSerialize["date_de_naissance"] = o.DateDeNaissance
	}
	if !IsNil(o.DateDeNaissanceFormate) {
		toSerialize["date_de_naissance_formate"] = o.DateDeNaissanceFormate
	}
	if !IsNil(o.Age) {
		toSerialize["age"] = o.Age
	}
	if !IsNil(o.Nationalite) {
		toSerialize["nationalite"] = o.Nationalite
	}
	if !IsNil(o.CodeNationalite) {
		toSerialize["code_nationalite"] = o.CodeNationalite
	}
	if !IsNil(o.VilleDeNaissance) {
		toSerialize["ville_de_naissance"] = o.VilleDeNaissance
	}
	if !IsNil(o.PaysDeNaissance) {
		toSerialize["pays_de_naissance"] = o.PaysDeNaissance
	}
	if !IsNil(o.CodePaysDeNaissance) {
		toSerialize["code_pays_de_naissance"] = o.CodePaysDeNaissance
	}
	if !IsNil(o.AdresseLigne1) {
		toSerialize["adresse_ligne_1"] = o.AdresseLigne1
	}
	if !IsNil(o.AdresseLigne2) {
		toSerialize["adresse_ligne_2"] = o.AdresseLigne2
	}
	if !IsNil(o.AdresseLigne3) {
		toSerialize["adresse_ligne_3"] = o.AdresseLigne3
	}
	if !IsNil(o.CodePostal) {
		toSerialize["code_postal"] = o.CodePostal
	}
	if !IsNil(o.Ville) {
		toSerialize["ville"] = o.Ville
	}
	if !IsNil(o.Pays) {
		toSerialize["pays"] = o.Pays
	}
	if !IsNil(o.CodePays) {
		toSerialize["code_pays"] = o.CodePays
	}
	if !IsNil(o.PersonnePolitiquementExposee) {
		toSerialize["personne_politiquement_exposee"] = o.PersonnePolitiquementExposee
	}
	if !IsNil(o.SanctionsEnCours) {
		toSerialize["sanctions_en_cours"] = o.SanctionsEnCours
	}
	if !IsNil(o.Sanctions) {
		toSerialize["sanctions"] = o.Sanctions
	}
	if !IsNil(o.Decede) {
		toSerialize["decede"] = o.Decede
	}
	if !IsNil(o.DateDeDeces) {
		toSerialize["date_de_deces"] = o.DateDeDeces
	}
	return toSerialize, nil
}

type NullableRepresentantEntreprise struct {
	value *RepresentantEntreprise
	isSet bool
}

func (v NullableRepresentantEntreprise) Get() *RepresentantEntreprise {
	return v.value
}

func (v *NullableRepresentantEntreprise) Set(val *RepresentantEntreprise) {
	v.value = val
	v.isSet = true
}

func (v NullableRepresentantEntreprise) IsSet() bool {
	return v.isSet
}

func (v *NullableRepresentantEntreprise) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepresentantEntreprise(val *RepresentantEntreprise) *NullableRepresentantEntreprise {
	return &NullableRepresentantEntreprise{value: val, isSet: true}
}

func (v NullableRepresentantEntreprise) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepresentantEntreprise) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


