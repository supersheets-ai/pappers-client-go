/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PersonnePolitiquementExposeeFonctionsInnerSourcesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PersonnePolitiquementExposeeFonctionsInnerSourcesInner{}

// PersonnePolitiquementExposeeFonctionsInnerSourcesInner struct for PersonnePolitiquementExposeeFonctionsInnerSourcesInner
type PersonnePolitiquementExposeeFonctionsInnerSourcesInner struct {
	// Nom de la source.
	Nom *string `json:"nom,omitempty"`
	// Lien vers la source.
	Url *string `json:"url,omitempty"`
}

// NewPersonnePolitiquementExposeeFonctionsInnerSourcesInner instantiates a new PersonnePolitiquementExposeeFonctionsInnerSourcesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersonnePolitiquementExposeeFonctionsInnerSourcesInner() *PersonnePolitiquementExposeeFonctionsInnerSourcesInner {
	this := PersonnePolitiquementExposeeFonctionsInnerSourcesInner{}
	return &this
}

// NewPersonnePolitiquementExposeeFonctionsInnerSourcesInnerWithDefaults instantiates a new PersonnePolitiquementExposeeFonctionsInnerSourcesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersonnePolitiquementExposeeFonctionsInnerSourcesInnerWithDefaults() *PersonnePolitiquementExposeeFonctionsInnerSourcesInner {
	this := PersonnePolitiquementExposeeFonctionsInnerSourcesInner{}
	return &this
}

// GetNom returns the Nom field value if set, zero value otherwise.
func (o *PersonnePolitiquementExposeeFonctionsInnerSourcesInner) GetNom() string {
	if o == nil || IsNil(o.Nom) {
		var ret string
		return ret
	}
	return *o.Nom
}

// GetNomOk returns a tuple with the Nom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonnePolitiquementExposeeFonctionsInnerSourcesInner) GetNomOk() (*string, bool) {
	if o == nil || IsNil(o.Nom) {
		return nil, false
	}
	return o.Nom, true
}

// HasNom returns a boolean if a field has been set.
func (o *PersonnePolitiquementExposeeFonctionsInnerSourcesInner) HasNom() bool {
	if o != nil && !IsNil(o.Nom) {
		return true
	}

	return false
}

// SetNom gets a reference to the given string and assigns it to the Nom field.
func (o *PersonnePolitiquementExposeeFonctionsInnerSourcesInner) SetNom(v string) {
	o.Nom = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PersonnePolitiquementExposeeFonctionsInnerSourcesInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonnePolitiquementExposeeFonctionsInnerSourcesInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PersonnePolitiquementExposeeFonctionsInnerSourcesInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PersonnePolitiquementExposeeFonctionsInnerSourcesInner) SetUrl(v string) {
	o.Url = &v
}

func (o PersonnePolitiquementExposeeFonctionsInnerSourcesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PersonnePolitiquementExposeeFonctionsInnerSourcesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Nom) {
		toSerialize["nom"] = o.Nom
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullablePersonnePolitiquementExposeeFonctionsInnerSourcesInner struct {
	value *PersonnePolitiquementExposeeFonctionsInnerSourcesInner
	isSet bool
}

func (v NullablePersonnePolitiquementExposeeFonctionsInnerSourcesInner) Get() *PersonnePolitiquementExposeeFonctionsInnerSourcesInner {
	return v.value
}

func (v *NullablePersonnePolitiquementExposeeFonctionsInnerSourcesInner) Set(val *PersonnePolitiquementExposeeFonctionsInnerSourcesInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePersonnePolitiquementExposeeFonctionsInnerSourcesInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePersonnePolitiquementExposeeFonctionsInnerSourcesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersonnePolitiquementExposeeFonctionsInnerSourcesInner(val *PersonnePolitiquementExposeeFonctionsInnerSourcesInner) *NullablePersonnePolitiquementExposeeFonctionsInnerSourcesInner {
	return &NullablePersonnePolitiquementExposeeFonctionsInnerSourcesInner{value: val, isSet: true}
}

func (v NullablePersonnePolitiquementExposeeFonctionsInnerSourcesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersonnePolitiquementExposeeFonctionsInnerSourcesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


