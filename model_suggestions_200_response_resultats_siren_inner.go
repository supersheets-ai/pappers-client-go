/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Suggestions200ResponseResultatsSirenInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Suggestions200ResponseResultatsSirenInner{}

// Suggestions200ResponseResultatsSirenInner struct for Suggestions200ResponseResultatsSirenInner
type Suggestions200ResponseResultatsSirenInner struct {
	// Le numéro SIREN de l'entreprise au format xxxxxxxxx.
	Siren *string `json:"siren,omitempty"`
	// Le numéro SIREN de l'entreprise au format xxx xxx xxx.
	SirenFormate *string `json:"siren_formate,omitempty"`
	// Indique si l'entreprise s'oppose à l'utilisation commerciale de ses données.
	OppositionUtilisationCommerciale *bool `json:"opposition_utilisation_commerciale,omitempty"`
	// Le nom de l'entreprise. Il est égal à sigle + dénomination en cas de personne morale, ou à nom + prénom en cas de personne physique. Nullable si le paramètre `integrer_diffusions_partielles` est à vrai.
	NomEntreprise *string `json:"nom_entreprise,omitempty"`
	// Vrai en cas de personne morale, faux en cas de personne physique.
	PersonneMorale *bool `json:"personne_morale,omitempty"`
	// Dénomination de l'entreprise si personne morale.
	Denomination *string `json:"denomination,omitempty"`
	// Nom si personne physique.
	Nom *string `json:"nom,omitempty"`
	// Prénom si personne physique.
	Prenom *string `json:"prenom,omitempty"`
	// Sexe si personne physique. F pour féminin, M pour masculin.
	Sexe *string `json:"sexe,omitempty"`
	// Code NAF de l'entreprise.
	CodeNaf *string `json:"code_naf,omitempty"`
	// Libellé du code NAF de l'entreprise.
	LibelleCodeNaf *string `json:"libelle_code_naf,omitempty"`
	// Domaine d'activité de l'entreprise.
	DomaineActivite *string `json:"domaine_activite,omitempty"`
	// Liste des conventions collectives de l'entreprise.
	ConventionsCollectives []EntrepriseBaseConventionsCollectivesInner `json:"conventions_collectives,omitempty"`
	// Date de création de l'entreprise au format AAAA-MM-JJ.
	DateCreation *string `json:"date_creation,omitempty"`
	// Date de création de l'entreprise au format JJ/MM/AAAA.
	DateCreationFormate *string `json:"date_creation_formate,omitempty"`
	// Si vrai, l'entreprise n'est plus en activité. Sinon, elle est toujours en activité.
	EntrepriseCessee *bool `json:"entreprise_cessee,omitempty"`
	// Date de cessation de l'entreprise au format AAAA-MM-JJ.
	DateCessation *string `json:"date_cessation,omitempty"`
	// Si vrai, l'entreprise a au moins un employé.
	EntrepriseEmployeuse *bool `json:"entreprise_employeuse,omitempty"`
	// Si vrai, l'entreprise est société à mission.
	SocieteAMission *bool `json:"societe_a_mission,omitempty"`
	// Catégorie juridique de l'entreprise, selon la [nomenclature Insee](https://www.insee.fr/fr/information/2028129).   **Note** : Le code correspond à celui de l'INSEE, à l'exception des SASU qui auront comme code 5720 et les EURL qui auront comme code 5498.
	CategorieJuridique *string `json:"categorie_juridique,omitempty"`
	// Forme juridique de l'entreprise.
	FormeJuridique *string `json:"forme_juridique,omitempty"`
	// Si vrai, l'entreprise est une micro-entreprise. Uniquement présent si demandé dans les champs supplémentaires.
	MicroEntreprise *bool `json:"micro_entreprise,omitempty"`
	// Forme d'exercice de l'activité principale.
	FormeExercice *string `json:"forme_exercice,omitempty"`
	// Tranche d'effectif de l'entreprise.
	Effectif *string `json:"effectif,omitempty"`
	// Effectif minimal de l'entreprise.
	EffectifMin *int32 `json:"effectif_min,omitempty"`
	// Effectif maximal de l'entreprise.
	EffectifMax *int32 `json:"effectif_max,omitempty"`
	// Tranche d'effectif de l'entreprise, selon la [nomenclature Sirene](https://www.sirene.fr/static-resources/documentation/v_sommaire_311.htm#73).
	TrancheEffectif *string `json:"tranche_effectif,omitempty"`
	// Année de validité des variables effectif, effectif_min et effectif_max.
	AnneeEffectif *int32 `json:"annee_effectif,omitempty"`
	// Capital de l'entreprise.
	Capital *float32 `json:"capital,omitempty"`
	// Statut de l'entreprise au RCS
	StatutRcs *string `json:"statut_rcs,omitempty"`
	Siege *EtablissementRecherche `json:"siege,omitempty"`
	// Liste des villes où l'entreprise a au moins un établissement.
	Villes []string `json:"villes,omitempty"`
	// Chiffre d'affaires de l'entreprise.
	ChiffreAffaires *int32 `json:"chiffre_affaires,omitempty"`
	// Résultat de l'entreprise.
	Resultat *int32 `json:"resultat,omitempty"`
	// Effectif de l'entreprise.
	EffectifsFinances *int32 `json:"effectifs_finances,omitempty"`
	// Année de correspondance des variables financières (chiffre_affaires, resultat, effectifs_finances).
	AnneeFinances *string `json:"annee_finances,omitempty"`
	// SIREN de l'entreprise, avec le texte recherché encerclé d'une balise HTML `<em>`.
	Mention *string `json:"mention,omitempty"`
}

// NewSuggestions200ResponseResultatsSirenInner instantiates a new Suggestions200ResponseResultatsSirenInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuggestions200ResponseResultatsSirenInner() *Suggestions200ResponseResultatsSirenInner {
	this := Suggestions200ResponseResultatsSirenInner{}
	return &this
}

// NewSuggestions200ResponseResultatsSirenInnerWithDefaults instantiates a new Suggestions200ResponseResultatsSirenInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuggestions200ResponseResultatsSirenInnerWithDefaults() *Suggestions200ResponseResultatsSirenInner {
	this := Suggestions200ResponseResultatsSirenInner{}
	return &this
}

// GetSiren returns the Siren field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetSiren() string {
	if o == nil || IsNil(o.Siren) {
		var ret string
		return ret
	}
	return *o.Siren
}

// GetSirenOk returns a tuple with the Siren field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetSirenOk() (*string, bool) {
	if o == nil || IsNil(o.Siren) {
		return nil, false
	}
	return o.Siren, true
}

// HasSiren returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasSiren() bool {
	if o != nil && !IsNil(o.Siren) {
		return true
	}

	return false
}

// SetSiren gets a reference to the given string and assigns it to the Siren field.
func (o *Suggestions200ResponseResultatsSirenInner) SetSiren(v string) {
	o.Siren = &v
}

// GetSirenFormate returns the SirenFormate field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetSirenFormate() string {
	if o == nil || IsNil(o.SirenFormate) {
		var ret string
		return ret
	}
	return *o.SirenFormate
}

// GetSirenFormateOk returns a tuple with the SirenFormate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetSirenFormateOk() (*string, bool) {
	if o == nil || IsNil(o.SirenFormate) {
		return nil, false
	}
	return o.SirenFormate, true
}

// HasSirenFormate returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasSirenFormate() bool {
	if o != nil && !IsNil(o.SirenFormate) {
		return true
	}

	return false
}

// SetSirenFormate gets a reference to the given string and assigns it to the SirenFormate field.
func (o *Suggestions200ResponseResultatsSirenInner) SetSirenFormate(v string) {
	o.SirenFormate = &v
}

// GetOppositionUtilisationCommerciale returns the OppositionUtilisationCommerciale field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetOppositionUtilisationCommerciale() bool {
	if o == nil || IsNil(o.OppositionUtilisationCommerciale) {
		var ret bool
		return ret
	}
	return *o.OppositionUtilisationCommerciale
}

// GetOppositionUtilisationCommercialeOk returns a tuple with the OppositionUtilisationCommerciale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetOppositionUtilisationCommercialeOk() (*bool, bool) {
	if o == nil || IsNil(o.OppositionUtilisationCommerciale) {
		return nil, false
	}
	return o.OppositionUtilisationCommerciale, true
}

// HasOppositionUtilisationCommerciale returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasOppositionUtilisationCommerciale() bool {
	if o != nil && !IsNil(o.OppositionUtilisationCommerciale) {
		return true
	}

	return false
}

// SetOppositionUtilisationCommerciale gets a reference to the given bool and assigns it to the OppositionUtilisationCommerciale field.
func (o *Suggestions200ResponseResultatsSirenInner) SetOppositionUtilisationCommerciale(v bool) {
	o.OppositionUtilisationCommerciale = &v
}

// GetNomEntreprise returns the NomEntreprise field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetNomEntreprise() string {
	if o == nil || IsNil(o.NomEntreprise) {
		var ret string
		return ret
	}
	return *o.NomEntreprise
}

// GetNomEntrepriseOk returns a tuple with the NomEntreprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetNomEntrepriseOk() (*string, bool) {
	if o == nil || IsNil(o.NomEntreprise) {
		return nil, false
	}
	return o.NomEntreprise, true
}

// HasNomEntreprise returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasNomEntreprise() bool {
	if o != nil && !IsNil(o.NomEntreprise) {
		return true
	}

	return false
}

// SetNomEntreprise gets a reference to the given string and assigns it to the NomEntreprise field.
func (o *Suggestions200ResponseResultatsSirenInner) SetNomEntreprise(v string) {
	o.NomEntreprise = &v
}

// GetPersonneMorale returns the PersonneMorale field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetPersonneMorale() bool {
	if o == nil || IsNil(o.PersonneMorale) {
		var ret bool
		return ret
	}
	return *o.PersonneMorale
}

// GetPersonneMoraleOk returns a tuple with the PersonneMorale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetPersonneMoraleOk() (*bool, bool) {
	if o == nil || IsNil(o.PersonneMorale) {
		return nil, false
	}
	return o.PersonneMorale, true
}

// HasPersonneMorale returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasPersonneMorale() bool {
	if o != nil && !IsNil(o.PersonneMorale) {
		return true
	}

	return false
}

// SetPersonneMorale gets a reference to the given bool and assigns it to the PersonneMorale field.
func (o *Suggestions200ResponseResultatsSirenInner) SetPersonneMorale(v bool) {
	o.PersonneMorale = &v
}

// GetDenomination returns the Denomination field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetDenomination() string {
	if o == nil || IsNil(o.Denomination) {
		var ret string
		return ret
	}
	return *o.Denomination
}

// GetDenominationOk returns a tuple with the Denomination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetDenominationOk() (*string, bool) {
	if o == nil || IsNil(o.Denomination) {
		return nil, false
	}
	return o.Denomination, true
}

// HasDenomination returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasDenomination() bool {
	if o != nil && !IsNil(o.Denomination) {
		return true
	}

	return false
}

// SetDenomination gets a reference to the given string and assigns it to the Denomination field.
func (o *Suggestions200ResponseResultatsSirenInner) SetDenomination(v string) {
	o.Denomination = &v
}

// GetNom returns the Nom field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetNom() string {
	if o == nil || IsNil(o.Nom) {
		var ret string
		return ret
	}
	return *o.Nom
}

// GetNomOk returns a tuple with the Nom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetNomOk() (*string, bool) {
	if o == nil || IsNil(o.Nom) {
		return nil, false
	}
	return o.Nom, true
}

// HasNom returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasNom() bool {
	if o != nil && !IsNil(o.Nom) {
		return true
	}

	return false
}

// SetNom gets a reference to the given string and assigns it to the Nom field.
func (o *Suggestions200ResponseResultatsSirenInner) SetNom(v string) {
	o.Nom = &v
}

// GetPrenom returns the Prenom field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetPrenom() string {
	if o == nil || IsNil(o.Prenom) {
		var ret string
		return ret
	}
	return *o.Prenom
}

// GetPrenomOk returns a tuple with the Prenom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetPrenomOk() (*string, bool) {
	if o == nil || IsNil(o.Prenom) {
		return nil, false
	}
	return o.Prenom, true
}

// HasPrenom returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasPrenom() bool {
	if o != nil && !IsNil(o.Prenom) {
		return true
	}

	return false
}

// SetPrenom gets a reference to the given string and assigns it to the Prenom field.
func (o *Suggestions200ResponseResultatsSirenInner) SetPrenom(v string) {
	o.Prenom = &v
}

// GetSexe returns the Sexe field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetSexe() string {
	if o == nil || IsNil(o.Sexe) {
		var ret string
		return ret
	}
	return *o.Sexe
}

// GetSexeOk returns a tuple with the Sexe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetSexeOk() (*string, bool) {
	if o == nil || IsNil(o.Sexe) {
		return nil, false
	}
	return o.Sexe, true
}

// HasSexe returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasSexe() bool {
	if o != nil && !IsNil(o.Sexe) {
		return true
	}

	return false
}

// SetSexe gets a reference to the given string and assigns it to the Sexe field.
func (o *Suggestions200ResponseResultatsSirenInner) SetSexe(v string) {
	o.Sexe = &v
}

// GetCodeNaf returns the CodeNaf field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetCodeNaf() string {
	if o == nil || IsNil(o.CodeNaf) {
		var ret string
		return ret
	}
	return *o.CodeNaf
}

// GetCodeNafOk returns a tuple with the CodeNaf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetCodeNafOk() (*string, bool) {
	if o == nil || IsNil(o.CodeNaf) {
		return nil, false
	}
	return o.CodeNaf, true
}

// HasCodeNaf returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasCodeNaf() bool {
	if o != nil && !IsNil(o.CodeNaf) {
		return true
	}

	return false
}

// SetCodeNaf gets a reference to the given string and assigns it to the CodeNaf field.
func (o *Suggestions200ResponseResultatsSirenInner) SetCodeNaf(v string) {
	o.CodeNaf = &v
}

// GetLibelleCodeNaf returns the LibelleCodeNaf field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetLibelleCodeNaf() string {
	if o == nil || IsNil(o.LibelleCodeNaf) {
		var ret string
		return ret
	}
	return *o.LibelleCodeNaf
}

// GetLibelleCodeNafOk returns a tuple with the LibelleCodeNaf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetLibelleCodeNafOk() (*string, bool) {
	if o == nil || IsNil(o.LibelleCodeNaf) {
		return nil, false
	}
	return o.LibelleCodeNaf, true
}

// HasLibelleCodeNaf returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasLibelleCodeNaf() bool {
	if o != nil && !IsNil(o.LibelleCodeNaf) {
		return true
	}

	return false
}

// SetLibelleCodeNaf gets a reference to the given string and assigns it to the LibelleCodeNaf field.
func (o *Suggestions200ResponseResultatsSirenInner) SetLibelleCodeNaf(v string) {
	o.LibelleCodeNaf = &v
}

// GetDomaineActivite returns the DomaineActivite field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetDomaineActivite() string {
	if o == nil || IsNil(o.DomaineActivite) {
		var ret string
		return ret
	}
	return *o.DomaineActivite
}

// GetDomaineActiviteOk returns a tuple with the DomaineActivite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetDomaineActiviteOk() (*string, bool) {
	if o == nil || IsNil(o.DomaineActivite) {
		return nil, false
	}
	return o.DomaineActivite, true
}

// HasDomaineActivite returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasDomaineActivite() bool {
	if o != nil && !IsNil(o.DomaineActivite) {
		return true
	}

	return false
}

// SetDomaineActivite gets a reference to the given string and assigns it to the DomaineActivite field.
func (o *Suggestions200ResponseResultatsSirenInner) SetDomaineActivite(v string) {
	o.DomaineActivite = &v
}

// GetConventionsCollectives returns the ConventionsCollectives field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetConventionsCollectives() []EntrepriseBaseConventionsCollectivesInner {
	if o == nil || IsNil(o.ConventionsCollectives) {
		var ret []EntrepriseBaseConventionsCollectivesInner
		return ret
	}
	return o.ConventionsCollectives
}

// GetConventionsCollectivesOk returns a tuple with the ConventionsCollectives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetConventionsCollectivesOk() ([]EntrepriseBaseConventionsCollectivesInner, bool) {
	if o == nil || IsNil(o.ConventionsCollectives) {
		return nil, false
	}
	return o.ConventionsCollectives, true
}

// HasConventionsCollectives returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasConventionsCollectives() bool {
	if o != nil && !IsNil(o.ConventionsCollectives) {
		return true
	}

	return false
}

// SetConventionsCollectives gets a reference to the given []EntrepriseBaseConventionsCollectivesInner and assigns it to the ConventionsCollectives field.
func (o *Suggestions200ResponseResultatsSirenInner) SetConventionsCollectives(v []EntrepriseBaseConventionsCollectivesInner) {
	o.ConventionsCollectives = v
}

// GetDateCreation returns the DateCreation field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetDateCreation() string {
	if o == nil || IsNil(o.DateCreation) {
		var ret string
		return ret
	}
	return *o.DateCreation
}

// GetDateCreationOk returns a tuple with the DateCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetDateCreationOk() (*string, bool) {
	if o == nil || IsNil(o.DateCreation) {
		return nil, false
	}
	return o.DateCreation, true
}

// HasDateCreation returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasDateCreation() bool {
	if o != nil && !IsNil(o.DateCreation) {
		return true
	}

	return false
}

// SetDateCreation gets a reference to the given string and assigns it to the DateCreation field.
func (o *Suggestions200ResponseResultatsSirenInner) SetDateCreation(v string) {
	o.DateCreation = &v
}

// GetDateCreationFormate returns the DateCreationFormate field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetDateCreationFormate() string {
	if o == nil || IsNil(o.DateCreationFormate) {
		var ret string
		return ret
	}
	return *o.DateCreationFormate
}

// GetDateCreationFormateOk returns a tuple with the DateCreationFormate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetDateCreationFormateOk() (*string, bool) {
	if o == nil || IsNil(o.DateCreationFormate) {
		return nil, false
	}
	return o.DateCreationFormate, true
}

// HasDateCreationFormate returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasDateCreationFormate() bool {
	if o != nil && !IsNil(o.DateCreationFormate) {
		return true
	}

	return false
}

// SetDateCreationFormate gets a reference to the given string and assigns it to the DateCreationFormate field.
func (o *Suggestions200ResponseResultatsSirenInner) SetDateCreationFormate(v string) {
	o.DateCreationFormate = &v
}

// GetEntrepriseCessee returns the EntrepriseCessee field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetEntrepriseCessee() bool {
	if o == nil || IsNil(o.EntrepriseCessee) {
		var ret bool
		return ret
	}
	return *o.EntrepriseCessee
}

// GetEntrepriseCesseeOk returns a tuple with the EntrepriseCessee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetEntrepriseCesseeOk() (*bool, bool) {
	if o == nil || IsNil(o.EntrepriseCessee) {
		return nil, false
	}
	return o.EntrepriseCessee, true
}

// HasEntrepriseCessee returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasEntrepriseCessee() bool {
	if o != nil && !IsNil(o.EntrepriseCessee) {
		return true
	}

	return false
}

// SetEntrepriseCessee gets a reference to the given bool and assigns it to the EntrepriseCessee field.
func (o *Suggestions200ResponseResultatsSirenInner) SetEntrepriseCessee(v bool) {
	o.EntrepriseCessee = &v
}

// GetDateCessation returns the DateCessation field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetDateCessation() string {
	if o == nil || IsNil(o.DateCessation) {
		var ret string
		return ret
	}
	return *o.DateCessation
}

// GetDateCessationOk returns a tuple with the DateCessation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetDateCessationOk() (*string, bool) {
	if o == nil || IsNil(o.DateCessation) {
		return nil, false
	}
	return o.DateCessation, true
}

// HasDateCessation returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasDateCessation() bool {
	if o != nil && !IsNil(o.DateCessation) {
		return true
	}

	return false
}

// SetDateCessation gets a reference to the given string and assigns it to the DateCessation field.
func (o *Suggestions200ResponseResultatsSirenInner) SetDateCessation(v string) {
	o.DateCessation = &v
}

// GetEntrepriseEmployeuse returns the EntrepriseEmployeuse field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetEntrepriseEmployeuse() bool {
	if o == nil || IsNil(o.EntrepriseEmployeuse) {
		var ret bool
		return ret
	}
	return *o.EntrepriseEmployeuse
}

// GetEntrepriseEmployeuseOk returns a tuple with the EntrepriseEmployeuse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetEntrepriseEmployeuseOk() (*bool, bool) {
	if o == nil || IsNil(o.EntrepriseEmployeuse) {
		return nil, false
	}
	return o.EntrepriseEmployeuse, true
}

// HasEntrepriseEmployeuse returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasEntrepriseEmployeuse() bool {
	if o != nil && !IsNil(o.EntrepriseEmployeuse) {
		return true
	}

	return false
}

// SetEntrepriseEmployeuse gets a reference to the given bool and assigns it to the EntrepriseEmployeuse field.
func (o *Suggestions200ResponseResultatsSirenInner) SetEntrepriseEmployeuse(v bool) {
	o.EntrepriseEmployeuse = &v
}

// GetSocieteAMission returns the SocieteAMission field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetSocieteAMission() bool {
	if o == nil || IsNil(o.SocieteAMission) {
		var ret bool
		return ret
	}
	return *o.SocieteAMission
}

// GetSocieteAMissionOk returns a tuple with the SocieteAMission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetSocieteAMissionOk() (*bool, bool) {
	if o == nil || IsNil(o.SocieteAMission) {
		return nil, false
	}
	return o.SocieteAMission, true
}

// HasSocieteAMission returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasSocieteAMission() bool {
	if o != nil && !IsNil(o.SocieteAMission) {
		return true
	}

	return false
}

// SetSocieteAMission gets a reference to the given bool and assigns it to the SocieteAMission field.
func (o *Suggestions200ResponseResultatsSirenInner) SetSocieteAMission(v bool) {
	o.SocieteAMission = &v
}

// GetCategorieJuridique returns the CategorieJuridique field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetCategorieJuridique() string {
	if o == nil || IsNil(o.CategorieJuridique) {
		var ret string
		return ret
	}
	return *o.CategorieJuridique
}

// GetCategorieJuridiqueOk returns a tuple with the CategorieJuridique field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetCategorieJuridiqueOk() (*string, bool) {
	if o == nil || IsNil(o.CategorieJuridique) {
		return nil, false
	}
	return o.CategorieJuridique, true
}

// HasCategorieJuridique returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasCategorieJuridique() bool {
	if o != nil && !IsNil(o.CategorieJuridique) {
		return true
	}

	return false
}

// SetCategorieJuridique gets a reference to the given string and assigns it to the CategorieJuridique field.
func (o *Suggestions200ResponseResultatsSirenInner) SetCategorieJuridique(v string) {
	o.CategorieJuridique = &v
}

// GetFormeJuridique returns the FormeJuridique field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetFormeJuridique() string {
	if o == nil || IsNil(o.FormeJuridique) {
		var ret string
		return ret
	}
	return *o.FormeJuridique
}

// GetFormeJuridiqueOk returns a tuple with the FormeJuridique field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetFormeJuridiqueOk() (*string, bool) {
	if o == nil || IsNil(o.FormeJuridique) {
		return nil, false
	}
	return o.FormeJuridique, true
}

// HasFormeJuridique returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasFormeJuridique() bool {
	if o != nil && !IsNil(o.FormeJuridique) {
		return true
	}

	return false
}

// SetFormeJuridique gets a reference to the given string and assigns it to the FormeJuridique field.
func (o *Suggestions200ResponseResultatsSirenInner) SetFormeJuridique(v string) {
	o.FormeJuridique = &v
}

// GetMicroEntreprise returns the MicroEntreprise field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetMicroEntreprise() bool {
	if o == nil || IsNil(o.MicroEntreprise) {
		var ret bool
		return ret
	}
	return *o.MicroEntreprise
}

// GetMicroEntrepriseOk returns a tuple with the MicroEntreprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetMicroEntrepriseOk() (*bool, bool) {
	if o == nil || IsNil(o.MicroEntreprise) {
		return nil, false
	}
	return o.MicroEntreprise, true
}

// HasMicroEntreprise returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasMicroEntreprise() bool {
	if o != nil && !IsNil(o.MicroEntreprise) {
		return true
	}

	return false
}

// SetMicroEntreprise gets a reference to the given bool and assigns it to the MicroEntreprise field.
func (o *Suggestions200ResponseResultatsSirenInner) SetMicroEntreprise(v bool) {
	o.MicroEntreprise = &v
}

// GetFormeExercice returns the FormeExercice field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetFormeExercice() string {
	if o == nil || IsNil(o.FormeExercice) {
		var ret string
		return ret
	}
	return *o.FormeExercice
}

// GetFormeExerciceOk returns a tuple with the FormeExercice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetFormeExerciceOk() (*string, bool) {
	if o == nil || IsNil(o.FormeExercice) {
		return nil, false
	}
	return o.FormeExercice, true
}

// HasFormeExercice returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasFormeExercice() bool {
	if o != nil && !IsNil(o.FormeExercice) {
		return true
	}

	return false
}

// SetFormeExercice gets a reference to the given string and assigns it to the FormeExercice field.
func (o *Suggestions200ResponseResultatsSirenInner) SetFormeExercice(v string) {
	o.FormeExercice = &v
}

// GetEffectif returns the Effectif field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetEffectif() string {
	if o == nil || IsNil(o.Effectif) {
		var ret string
		return ret
	}
	return *o.Effectif
}

// GetEffectifOk returns a tuple with the Effectif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetEffectifOk() (*string, bool) {
	if o == nil || IsNil(o.Effectif) {
		return nil, false
	}
	return o.Effectif, true
}

// HasEffectif returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasEffectif() bool {
	if o != nil && !IsNil(o.Effectif) {
		return true
	}

	return false
}

// SetEffectif gets a reference to the given string and assigns it to the Effectif field.
func (o *Suggestions200ResponseResultatsSirenInner) SetEffectif(v string) {
	o.Effectif = &v
}

// GetEffectifMin returns the EffectifMin field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetEffectifMin() int32 {
	if o == nil || IsNil(o.EffectifMin) {
		var ret int32
		return ret
	}
	return *o.EffectifMin
}

// GetEffectifMinOk returns a tuple with the EffectifMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetEffectifMinOk() (*int32, bool) {
	if o == nil || IsNil(o.EffectifMin) {
		return nil, false
	}
	return o.EffectifMin, true
}

// HasEffectifMin returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasEffectifMin() bool {
	if o != nil && !IsNil(o.EffectifMin) {
		return true
	}

	return false
}

// SetEffectifMin gets a reference to the given int32 and assigns it to the EffectifMin field.
func (o *Suggestions200ResponseResultatsSirenInner) SetEffectifMin(v int32) {
	o.EffectifMin = &v
}

// GetEffectifMax returns the EffectifMax field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetEffectifMax() int32 {
	if o == nil || IsNil(o.EffectifMax) {
		var ret int32
		return ret
	}
	return *o.EffectifMax
}

// GetEffectifMaxOk returns a tuple with the EffectifMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetEffectifMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.EffectifMax) {
		return nil, false
	}
	return o.EffectifMax, true
}

// HasEffectifMax returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasEffectifMax() bool {
	if o != nil && !IsNil(o.EffectifMax) {
		return true
	}

	return false
}

// SetEffectifMax gets a reference to the given int32 and assigns it to the EffectifMax field.
func (o *Suggestions200ResponseResultatsSirenInner) SetEffectifMax(v int32) {
	o.EffectifMax = &v
}

// GetTrancheEffectif returns the TrancheEffectif field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetTrancheEffectif() string {
	if o == nil || IsNil(o.TrancheEffectif) {
		var ret string
		return ret
	}
	return *o.TrancheEffectif
}

// GetTrancheEffectifOk returns a tuple with the TrancheEffectif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetTrancheEffectifOk() (*string, bool) {
	if o == nil || IsNil(o.TrancheEffectif) {
		return nil, false
	}
	return o.TrancheEffectif, true
}

// HasTrancheEffectif returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasTrancheEffectif() bool {
	if o != nil && !IsNil(o.TrancheEffectif) {
		return true
	}

	return false
}

// SetTrancheEffectif gets a reference to the given string and assigns it to the TrancheEffectif field.
func (o *Suggestions200ResponseResultatsSirenInner) SetTrancheEffectif(v string) {
	o.TrancheEffectif = &v
}

// GetAnneeEffectif returns the AnneeEffectif field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetAnneeEffectif() int32 {
	if o == nil || IsNil(o.AnneeEffectif) {
		var ret int32
		return ret
	}
	return *o.AnneeEffectif
}

// GetAnneeEffectifOk returns a tuple with the AnneeEffectif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetAnneeEffectifOk() (*int32, bool) {
	if o == nil || IsNil(o.AnneeEffectif) {
		return nil, false
	}
	return o.AnneeEffectif, true
}

// HasAnneeEffectif returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasAnneeEffectif() bool {
	if o != nil && !IsNil(o.AnneeEffectif) {
		return true
	}

	return false
}

// SetAnneeEffectif gets a reference to the given int32 and assigns it to the AnneeEffectif field.
func (o *Suggestions200ResponseResultatsSirenInner) SetAnneeEffectif(v int32) {
	o.AnneeEffectif = &v
}

// GetCapital returns the Capital field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetCapital() float32 {
	if o == nil || IsNil(o.Capital) {
		var ret float32
		return ret
	}
	return *o.Capital
}

// GetCapitalOk returns a tuple with the Capital field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetCapitalOk() (*float32, bool) {
	if o == nil || IsNil(o.Capital) {
		return nil, false
	}
	return o.Capital, true
}

// HasCapital returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasCapital() bool {
	if o != nil && !IsNil(o.Capital) {
		return true
	}

	return false
}

// SetCapital gets a reference to the given float32 and assigns it to the Capital field.
func (o *Suggestions200ResponseResultatsSirenInner) SetCapital(v float32) {
	o.Capital = &v
}

// GetStatutRcs returns the StatutRcs field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetStatutRcs() string {
	if o == nil || IsNil(o.StatutRcs) {
		var ret string
		return ret
	}
	return *o.StatutRcs
}

// GetStatutRcsOk returns a tuple with the StatutRcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetStatutRcsOk() (*string, bool) {
	if o == nil || IsNil(o.StatutRcs) {
		return nil, false
	}
	return o.StatutRcs, true
}

// HasStatutRcs returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasStatutRcs() bool {
	if o != nil && !IsNil(o.StatutRcs) {
		return true
	}

	return false
}

// SetStatutRcs gets a reference to the given string and assigns it to the StatutRcs field.
func (o *Suggestions200ResponseResultatsSirenInner) SetStatutRcs(v string) {
	o.StatutRcs = &v
}

// GetSiege returns the Siege field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetSiege() EtablissementRecherche {
	if o == nil || IsNil(o.Siege) {
		var ret EtablissementRecherche
		return ret
	}
	return *o.Siege
}

// GetSiegeOk returns a tuple with the Siege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetSiegeOk() (*EtablissementRecherche, bool) {
	if o == nil || IsNil(o.Siege) {
		return nil, false
	}
	return o.Siege, true
}

// HasSiege returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasSiege() bool {
	if o != nil && !IsNil(o.Siege) {
		return true
	}

	return false
}

// SetSiege gets a reference to the given EtablissementRecherche and assigns it to the Siege field.
func (o *Suggestions200ResponseResultatsSirenInner) SetSiege(v EtablissementRecherche) {
	o.Siege = &v
}

// GetVilles returns the Villes field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetVilles() []string {
	if o == nil || IsNil(o.Villes) {
		var ret []string
		return ret
	}
	return o.Villes
}

// GetVillesOk returns a tuple with the Villes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetVillesOk() ([]string, bool) {
	if o == nil || IsNil(o.Villes) {
		return nil, false
	}
	return o.Villes, true
}

// HasVilles returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasVilles() bool {
	if o != nil && !IsNil(o.Villes) {
		return true
	}

	return false
}

// SetVilles gets a reference to the given []string and assigns it to the Villes field.
func (o *Suggestions200ResponseResultatsSirenInner) SetVilles(v []string) {
	o.Villes = v
}

// GetChiffreAffaires returns the ChiffreAffaires field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetChiffreAffaires() int32 {
	if o == nil || IsNil(o.ChiffreAffaires) {
		var ret int32
		return ret
	}
	return *o.ChiffreAffaires
}

// GetChiffreAffairesOk returns a tuple with the ChiffreAffaires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetChiffreAffairesOk() (*int32, bool) {
	if o == nil || IsNil(o.ChiffreAffaires) {
		return nil, false
	}
	return o.ChiffreAffaires, true
}

// HasChiffreAffaires returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasChiffreAffaires() bool {
	if o != nil && !IsNil(o.ChiffreAffaires) {
		return true
	}

	return false
}

// SetChiffreAffaires gets a reference to the given int32 and assigns it to the ChiffreAffaires field.
func (o *Suggestions200ResponseResultatsSirenInner) SetChiffreAffaires(v int32) {
	o.ChiffreAffaires = &v
}

// GetResultat returns the Resultat field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetResultat() int32 {
	if o == nil || IsNil(o.Resultat) {
		var ret int32
		return ret
	}
	return *o.Resultat
}

// GetResultatOk returns a tuple with the Resultat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetResultatOk() (*int32, bool) {
	if o == nil || IsNil(o.Resultat) {
		return nil, false
	}
	return o.Resultat, true
}

// HasResultat returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasResultat() bool {
	if o != nil && !IsNil(o.Resultat) {
		return true
	}

	return false
}

// SetResultat gets a reference to the given int32 and assigns it to the Resultat field.
func (o *Suggestions200ResponseResultatsSirenInner) SetResultat(v int32) {
	o.Resultat = &v
}

// GetEffectifsFinances returns the EffectifsFinances field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetEffectifsFinances() int32 {
	if o == nil || IsNil(o.EffectifsFinances) {
		var ret int32
		return ret
	}
	return *o.EffectifsFinances
}

// GetEffectifsFinancesOk returns a tuple with the EffectifsFinances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetEffectifsFinancesOk() (*int32, bool) {
	if o == nil || IsNil(o.EffectifsFinances) {
		return nil, false
	}
	return o.EffectifsFinances, true
}

// HasEffectifsFinances returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasEffectifsFinances() bool {
	if o != nil && !IsNil(o.EffectifsFinances) {
		return true
	}

	return false
}

// SetEffectifsFinances gets a reference to the given int32 and assigns it to the EffectifsFinances field.
func (o *Suggestions200ResponseResultatsSirenInner) SetEffectifsFinances(v int32) {
	o.EffectifsFinances = &v
}

// GetAnneeFinances returns the AnneeFinances field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetAnneeFinances() string {
	if o == nil || IsNil(o.AnneeFinances) {
		var ret string
		return ret
	}
	return *o.AnneeFinances
}

// GetAnneeFinancesOk returns a tuple with the AnneeFinances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetAnneeFinancesOk() (*string, bool) {
	if o == nil || IsNil(o.AnneeFinances) {
		return nil, false
	}
	return o.AnneeFinances, true
}

// HasAnneeFinances returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasAnneeFinances() bool {
	if o != nil && !IsNil(o.AnneeFinances) {
		return true
	}

	return false
}

// SetAnneeFinances gets a reference to the given string and assigns it to the AnneeFinances field.
func (o *Suggestions200ResponseResultatsSirenInner) SetAnneeFinances(v string) {
	o.AnneeFinances = &v
}

// GetMention returns the Mention field value if set, zero value otherwise.
func (o *Suggestions200ResponseResultatsSirenInner) GetMention() string {
	if o == nil || IsNil(o.Mention) {
		var ret string
		return ret
	}
	return *o.Mention
}

// GetMentionOk returns a tuple with the Mention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Suggestions200ResponseResultatsSirenInner) GetMentionOk() (*string, bool) {
	if o == nil || IsNil(o.Mention) {
		return nil, false
	}
	return o.Mention, true
}

// HasMention returns a boolean if a field has been set.
func (o *Suggestions200ResponseResultatsSirenInner) HasMention() bool {
	if o != nil && !IsNil(o.Mention) {
		return true
	}

	return false
}

// SetMention gets a reference to the given string and assigns it to the Mention field.
func (o *Suggestions200ResponseResultatsSirenInner) SetMention(v string) {
	o.Mention = &v
}

func (o Suggestions200ResponseResultatsSirenInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Suggestions200ResponseResultatsSirenInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Siren) {
		toSerialize["siren"] = o.Siren
	}
	if !IsNil(o.SirenFormate) {
		toSerialize["siren_formate"] = o.SirenFormate
	}
	if !IsNil(o.OppositionUtilisationCommerciale) {
		toSerialize["opposition_utilisation_commerciale"] = o.OppositionUtilisationCommerciale
	}
	if !IsNil(o.NomEntreprise) {
		toSerialize["nom_entreprise"] = o.NomEntreprise
	}
	if !IsNil(o.PersonneMorale) {
		toSerialize["personne_morale"] = o.PersonneMorale
	}
	if !IsNil(o.Denomination) {
		toSerialize["denomination"] = o.Denomination
	}
	if !IsNil(o.Nom) {
		toSerialize["nom"] = o.Nom
	}
	if !IsNil(o.Prenom) {
		toSerialize["prenom"] = o.Prenom
	}
	if !IsNil(o.Sexe) {
		toSerialize["sexe"] = o.Sexe
	}
	if !IsNil(o.CodeNaf) {
		toSerialize["code_naf"] = o.CodeNaf
	}
	if !IsNil(o.LibelleCodeNaf) {
		toSerialize["libelle_code_naf"] = o.LibelleCodeNaf
	}
	if !IsNil(o.DomaineActivite) {
		toSerialize["domaine_activite"] = o.DomaineActivite
	}
	if !IsNil(o.ConventionsCollectives) {
		toSerialize["conventions_collectives"] = o.ConventionsCollectives
	}
	if !IsNil(o.DateCreation) {
		toSerialize["date_creation"] = o.DateCreation
	}
	if !IsNil(o.DateCreationFormate) {
		toSerialize["date_creation_formate"] = o.DateCreationFormate
	}
	if !IsNil(o.EntrepriseCessee) {
		toSerialize["entreprise_cessee"] = o.EntrepriseCessee
	}
	if !IsNil(o.DateCessation) {
		toSerialize["date_cessation"] = o.DateCessation
	}
	if !IsNil(o.EntrepriseEmployeuse) {
		toSerialize["entreprise_employeuse"] = o.EntrepriseEmployeuse
	}
	if !IsNil(o.SocieteAMission) {
		toSerialize["societe_a_mission"] = o.SocieteAMission
	}
	if !IsNil(o.CategorieJuridique) {
		toSerialize["categorie_juridique"] = o.CategorieJuridique
	}
	if !IsNil(o.FormeJuridique) {
		toSerialize["forme_juridique"] = o.FormeJuridique
	}
	if !IsNil(o.MicroEntreprise) {
		toSerialize["micro_entreprise"] = o.MicroEntreprise
	}
	if !IsNil(o.FormeExercice) {
		toSerialize["forme_exercice"] = o.FormeExercice
	}
	if !IsNil(o.Effectif) {
		toSerialize["effectif"] = o.Effectif
	}
	if !IsNil(o.EffectifMin) {
		toSerialize["effectif_min"] = o.EffectifMin
	}
	if !IsNil(o.EffectifMax) {
		toSerialize["effectif_max"] = o.EffectifMax
	}
	if !IsNil(o.TrancheEffectif) {
		toSerialize["tranche_effectif"] = o.TrancheEffectif
	}
	if !IsNil(o.AnneeEffectif) {
		toSerialize["annee_effectif"] = o.AnneeEffectif
	}
	if !IsNil(o.Capital) {
		toSerialize["capital"] = o.Capital
	}
	if !IsNil(o.StatutRcs) {
		toSerialize["statut_rcs"] = o.StatutRcs
	}
	if !IsNil(o.Siege) {
		toSerialize["siege"] = o.Siege
	}
	if !IsNil(o.Villes) {
		toSerialize["villes"] = o.Villes
	}
	if !IsNil(o.ChiffreAffaires) {
		toSerialize["chiffre_affaires"] = o.ChiffreAffaires
	}
	if !IsNil(o.Resultat) {
		toSerialize["resultat"] = o.Resultat
	}
	if !IsNil(o.EffectifsFinances) {
		toSerialize["effectifs_finances"] = o.EffectifsFinances
	}
	if !IsNil(o.AnneeFinances) {
		toSerialize["annee_finances"] = o.AnneeFinances
	}
	if !IsNil(o.Mention) {
		toSerialize["mention"] = o.Mention
	}
	return toSerialize, nil
}

type NullableSuggestions200ResponseResultatsSirenInner struct {
	value *Suggestions200ResponseResultatsSirenInner
	isSet bool
}

func (v NullableSuggestions200ResponseResultatsSirenInner) Get() *Suggestions200ResponseResultatsSirenInner {
	return v.value
}

func (v *NullableSuggestions200ResponseResultatsSirenInner) Set(val *Suggestions200ResponseResultatsSirenInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSuggestions200ResponseResultatsSirenInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSuggestions200ResponseResultatsSirenInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuggestions200ResponseResultatsSirenInner(val *Suggestions200ResponseResultatsSirenInner) *NullableSuggestions200ResponseResultatsSirenInner {
	return &NullableSuggestions200ResponseResultatsSirenInner{value: val, isSet: true}
}

func (v NullableSuggestions200ResponseResultatsSirenInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuggestions200ResponseResultatsSirenInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


