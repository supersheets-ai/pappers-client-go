/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AssociationPublicationsJoafeInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssociationPublicationsJoafeInner{}

// AssociationPublicationsJoafeInner struct for AssociationPublicationsJoafeInner
type AssociationPublicationsJoafeInner struct {
	// Numéro de parution JOAFE
	NumeroParution *string `json:"numero_parution,omitempty"`
	// Date de parution JOAFE au format AAAA-MM-JJ
	DateParution *string `json:"date_parution,omitempty"`
	// Date de déclaration au format AAAA-MM-JJ
	DateDeclaration *string `json:"date_declaration,omitempty"`
	// Numéro de l'annonce JOAFE
	NumeroAnnonce *int32 `json:"numero_annonce,omitempty"`
	// Nom de l'association
	Titre *string `json:"titre,omitempty"`
	// Type d'annonce (Création, Modification, Dissolution)
	Type *string `json:"type,omitempty"`
	// Lieu de la déclaration
	Prefecture *string `json:"prefecture,omitempty"`
	// Description de l'association
	Objet *string `json:"objet,omitempty"`
	// Lien du site web
	SiteWeb *string `json:"site_web,omitempty"`
	// Adresse de l'association
	Adresse *string `json:"adresse,omitempty"`
}

// NewAssociationPublicationsJoafeInner instantiates a new AssociationPublicationsJoafeInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssociationPublicationsJoafeInner() *AssociationPublicationsJoafeInner {
	this := AssociationPublicationsJoafeInner{}
	return &this
}

// NewAssociationPublicationsJoafeInnerWithDefaults instantiates a new AssociationPublicationsJoafeInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssociationPublicationsJoafeInnerWithDefaults() *AssociationPublicationsJoafeInner {
	this := AssociationPublicationsJoafeInner{}
	return &this
}

// GetNumeroParution returns the NumeroParution field value if set, zero value otherwise.
func (o *AssociationPublicationsJoafeInner) GetNumeroParution() string {
	if o == nil || IsNil(o.NumeroParution) {
		var ret string
		return ret
	}
	return *o.NumeroParution
}

// GetNumeroParutionOk returns a tuple with the NumeroParution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationPublicationsJoafeInner) GetNumeroParutionOk() (*string, bool) {
	if o == nil || IsNil(o.NumeroParution) {
		return nil, false
	}
	return o.NumeroParution, true
}

// HasNumeroParution returns a boolean if a field has been set.
func (o *AssociationPublicationsJoafeInner) HasNumeroParution() bool {
	if o != nil && !IsNil(o.NumeroParution) {
		return true
	}

	return false
}

// SetNumeroParution gets a reference to the given string and assigns it to the NumeroParution field.
func (o *AssociationPublicationsJoafeInner) SetNumeroParution(v string) {
	o.NumeroParution = &v
}

// GetDateParution returns the DateParution field value if set, zero value otherwise.
func (o *AssociationPublicationsJoafeInner) GetDateParution() string {
	if o == nil || IsNil(o.DateParution) {
		var ret string
		return ret
	}
	return *o.DateParution
}

// GetDateParutionOk returns a tuple with the DateParution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationPublicationsJoafeInner) GetDateParutionOk() (*string, bool) {
	if o == nil || IsNil(o.DateParution) {
		return nil, false
	}
	return o.DateParution, true
}

// HasDateParution returns a boolean if a field has been set.
func (o *AssociationPublicationsJoafeInner) HasDateParution() bool {
	if o != nil && !IsNil(o.DateParution) {
		return true
	}

	return false
}

// SetDateParution gets a reference to the given string and assigns it to the DateParution field.
func (o *AssociationPublicationsJoafeInner) SetDateParution(v string) {
	o.DateParution = &v
}

// GetDateDeclaration returns the DateDeclaration field value if set, zero value otherwise.
func (o *AssociationPublicationsJoafeInner) GetDateDeclaration() string {
	if o == nil || IsNil(o.DateDeclaration) {
		var ret string
		return ret
	}
	return *o.DateDeclaration
}

// GetDateDeclarationOk returns a tuple with the DateDeclaration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationPublicationsJoafeInner) GetDateDeclarationOk() (*string, bool) {
	if o == nil || IsNil(o.DateDeclaration) {
		return nil, false
	}
	return o.DateDeclaration, true
}

// HasDateDeclaration returns a boolean if a field has been set.
func (o *AssociationPublicationsJoafeInner) HasDateDeclaration() bool {
	if o != nil && !IsNil(o.DateDeclaration) {
		return true
	}

	return false
}

// SetDateDeclaration gets a reference to the given string and assigns it to the DateDeclaration field.
func (o *AssociationPublicationsJoafeInner) SetDateDeclaration(v string) {
	o.DateDeclaration = &v
}

// GetNumeroAnnonce returns the NumeroAnnonce field value if set, zero value otherwise.
func (o *AssociationPublicationsJoafeInner) GetNumeroAnnonce() int32 {
	if o == nil || IsNil(o.NumeroAnnonce) {
		var ret int32
		return ret
	}
	return *o.NumeroAnnonce
}

// GetNumeroAnnonceOk returns a tuple with the NumeroAnnonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationPublicationsJoafeInner) GetNumeroAnnonceOk() (*int32, bool) {
	if o == nil || IsNil(o.NumeroAnnonce) {
		return nil, false
	}
	return o.NumeroAnnonce, true
}

// HasNumeroAnnonce returns a boolean if a field has been set.
func (o *AssociationPublicationsJoafeInner) HasNumeroAnnonce() bool {
	if o != nil && !IsNil(o.NumeroAnnonce) {
		return true
	}

	return false
}

// SetNumeroAnnonce gets a reference to the given int32 and assigns it to the NumeroAnnonce field.
func (o *AssociationPublicationsJoafeInner) SetNumeroAnnonce(v int32) {
	o.NumeroAnnonce = &v
}

// GetTitre returns the Titre field value if set, zero value otherwise.
func (o *AssociationPublicationsJoafeInner) GetTitre() string {
	if o == nil || IsNil(o.Titre) {
		var ret string
		return ret
	}
	return *o.Titre
}

// GetTitreOk returns a tuple with the Titre field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationPublicationsJoafeInner) GetTitreOk() (*string, bool) {
	if o == nil || IsNil(o.Titre) {
		return nil, false
	}
	return o.Titre, true
}

// HasTitre returns a boolean if a field has been set.
func (o *AssociationPublicationsJoafeInner) HasTitre() bool {
	if o != nil && !IsNil(o.Titre) {
		return true
	}

	return false
}

// SetTitre gets a reference to the given string and assigns it to the Titre field.
func (o *AssociationPublicationsJoafeInner) SetTitre(v string) {
	o.Titre = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AssociationPublicationsJoafeInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationPublicationsJoafeInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AssociationPublicationsJoafeInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AssociationPublicationsJoafeInner) SetType(v string) {
	o.Type = &v
}

// GetPrefecture returns the Prefecture field value if set, zero value otherwise.
func (o *AssociationPublicationsJoafeInner) GetPrefecture() string {
	if o == nil || IsNil(o.Prefecture) {
		var ret string
		return ret
	}
	return *o.Prefecture
}

// GetPrefectureOk returns a tuple with the Prefecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationPublicationsJoafeInner) GetPrefectureOk() (*string, bool) {
	if o == nil || IsNil(o.Prefecture) {
		return nil, false
	}
	return o.Prefecture, true
}

// HasPrefecture returns a boolean if a field has been set.
func (o *AssociationPublicationsJoafeInner) HasPrefecture() bool {
	if o != nil && !IsNil(o.Prefecture) {
		return true
	}

	return false
}

// SetPrefecture gets a reference to the given string and assigns it to the Prefecture field.
func (o *AssociationPublicationsJoafeInner) SetPrefecture(v string) {
	o.Prefecture = &v
}

// GetObjet returns the Objet field value if set, zero value otherwise.
func (o *AssociationPublicationsJoafeInner) GetObjet() string {
	if o == nil || IsNil(o.Objet) {
		var ret string
		return ret
	}
	return *o.Objet
}

// GetObjetOk returns a tuple with the Objet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationPublicationsJoafeInner) GetObjetOk() (*string, bool) {
	if o == nil || IsNil(o.Objet) {
		return nil, false
	}
	return o.Objet, true
}

// HasObjet returns a boolean if a field has been set.
func (o *AssociationPublicationsJoafeInner) HasObjet() bool {
	if o != nil && !IsNil(o.Objet) {
		return true
	}

	return false
}

// SetObjet gets a reference to the given string and assigns it to the Objet field.
func (o *AssociationPublicationsJoafeInner) SetObjet(v string) {
	o.Objet = &v
}

// GetSiteWeb returns the SiteWeb field value if set, zero value otherwise.
func (o *AssociationPublicationsJoafeInner) GetSiteWeb() string {
	if o == nil || IsNil(o.SiteWeb) {
		var ret string
		return ret
	}
	return *o.SiteWeb
}

// GetSiteWebOk returns a tuple with the SiteWeb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationPublicationsJoafeInner) GetSiteWebOk() (*string, bool) {
	if o == nil || IsNil(o.SiteWeb) {
		return nil, false
	}
	return o.SiteWeb, true
}

// HasSiteWeb returns a boolean if a field has been set.
func (o *AssociationPublicationsJoafeInner) HasSiteWeb() bool {
	if o != nil && !IsNil(o.SiteWeb) {
		return true
	}

	return false
}

// SetSiteWeb gets a reference to the given string and assigns it to the SiteWeb field.
func (o *AssociationPublicationsJoafeInner) SetSiteWeb(v string) {
	o.SiteWeb = &v
}

// GetAdresse returns the Adresse field value if set, zero value otherwise.
func (o *AssociationPublicationsJoafeInner) GetAdresse() string {
	if o == nil || IsNil(o.Adresse) {
		var ret string
		return ret
	}
	return *o.Adresse
}

// GetAdresseOk returns a tuple with the Adresse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociationPublicationsJoafeInner) GetAdresseOk() (*string, bool) {
	if o == nil || IsNil(o.Adresse) {
		return nil, false
	}
	return o.Adresse, true
}

// HasAdresse returns a boolean if a field has been set.
func (o *AssociationPublicationsJoafeInner) HasAdresse() bool {
	if o != nil && !IsNil(o.Adresse) {
		return true
	}

	return false
}

// SetAdresse gets a reference to the given string and assigns it to the Adresse field.
func (o *AssociationPublicationsJoafeInner) SetAdresse(v string) {
	o.Adresse = &v
}

func (o AssociationPublicationsJoafeInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssociationPublicationsJoafeInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NumeroParution) {
		toSerialize["numero_parution"] = o.NumeroParution
	}
	if !IsNil(o.DateParution) {
		toSerialize["date_parution"] = o.DateParution
	}
	if !IsNil(o.DateDeclaration) {
		toSerialize["date_declaration"] = o.DateDeclaration
	}
	if !IsNil(o.NumeroAnnonce) {
		toSerialize["numero_annonce"] = o.NumeroAnnonce
	}
	if !IsNil(o.Titre) {
		toSerialize["titre"] = o.Titre
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Prefecture) {
		toSerialize["prefecture"] = o.Prefecture
	}
	if !IsNil(o.Objet) {
		toSerialize["objet"] = o.Objet
	}
	if !IsNil(o.SiteWeb) {
		toSerialize["site_web"] = o.SiteWeb
	}
	if !IsNil(o.Adresse) {
		toSerialize["adresse"] = o.Adresse
	}
	return toSerialize, nil
}

type NullableAssociationPublicationsJoafeInner struct {
	value *AssociationPublicationsJoafeInner
	isSet bool
}

func (v NullableAssociationPublicationsJoafeInner) Get() *AssociationPublicationsJoafeInner {
	return v.value
}

func (v *NullableAssociationPublicationsJoafeInner) Set(val *AssociationPublicationsJoafeInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAssociationPublicationsJoafeInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAssociationPublicationsJoafeInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssociationPublicationsJoafeInner(val *AssociationPublicationsJoafeInner) *NullableAssociationPublicationsJoafeInner {
	return &NullableAssociationPublicationsJoafeInner{value: val, isSet: true}
}

func (v NullableAssociationPublicationsJoafeInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssociationPublicationsJoafeInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


