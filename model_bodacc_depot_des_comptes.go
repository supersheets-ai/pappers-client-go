/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BodaccDepotDesComptes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BodaccDepotDesComptes{}

// BodaccDepotDesComptes struct for BodaccDepotDesComptes
type BodaccDepotDesComptes struct {
	Bodacc
	// Date de clôture des comptes, au format AAAA-MM-JJ.
	DateCloture *string `json:"date_cloture,omitempty"`
	// Type de dépôt de comptes.
	TypeDepot *string `json:"type_depot,omitempty"`
	// Descriptif du dépôt de comptes.
	Descriptif *string `json:"descriptif,omitempty"`
}

// NewBodaccDepotDesComptes instantiates a new BodaccDepotDesComptes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBodaccDepotDesComptes() *BodaccDepotDesComptes {
	this := BodaccDepotDesComptes{}
	return &this
}

// NewBodaccDepotDesComptesWithDefaults instantiates a new BodaccDepotDesComptes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBodaccDepotDesComptesWithDefaults() *BodaccDepotDesComptes {
	this := BodaccDepotDesComptes{}
	return &this
}

// GetDateCloture returns the DateCloture field value if set, zero value otherwise.
func (o *BodaccDepotDesComptes) GetDateCloture() string {
	if o == nil || IsNil(o.DateCloture) {
		var ret string
		return ret
	}
	return *o.DateCloture
}

// GetDateClotureOk returns a tuple with the DateCloture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BodaccDepotDesComptes) GetDateClotureOk() (*string, bool) {
	if o == nil || IsNil(o.DateCloture) {
		return nil, false
	}
	return o.DateCloture, true
}

// HasDateCloture returns a boolean if a field has been set.
func (o *BodaccDepotDesComptes) HasDateCloture() bool {
	if o != nil && !IsNil(o.DateCloture) {
		return true
	}

	return false
}

// SetDateCloture gets a reference to the given string and assigns it to the DateCloture field.
func (o *BodaccDepotDesComptes) SetDateCloture(v string) {
	o.DateCloture = &v
}

// GetTypeDepot returns the TypeDepot field value if set, zero value otherwise.
func (o *BodaccDepotDesComptes) GetTypeDepot() string {
	if o == nil || IsNil(o.TypeDepot) {
		var ret string
		return ret
	}
	return *o.TypeDepot
}

// GetTypeDepotOk returns a tuple with the TypeDepot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BodaccDepotDesComptes) GetTypeDepotOk() (*string, bool) {
	if o == nil || IsNil(o.TypeDepot) {
		return nil, false
	}
	return o.TypeDepot, true
}

// HasTypeDepot returns a boolean if a field has been set.
func (o *BodaccDepotDesComptes) HasTypeDepot() bool {
	if o != nil && !IsNil(o.TypeDepot) {
		return true
	}

	return false
}

// SetTypeDepot gets a reference to the given string and assigns it to the TypeDepot field.
func (o *BodaccDepotDesComptes) SetTypeDepot(v string) {
	o.TypeDepot = &v
}

// GetDescriptif returns the Descriptif field value if set, zero value otherwise.
func (o *BodaccDepotDesComptes) GetDescriptif() string {
	if o == nil || IsNil(o.Descriptif) {
		var ret string
		return ret
	}
	return *o.Descriptif
}

// GetDescriptifOk returns a tuple with the Descriptif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BodaccDepotDesComptes) GetDescriptifOk() (*string, bool) {
	if o == nil || IsNil(o.Descriptif) {
		return nil, false
	}
	return o.Descriptif, true
}

// HasDescriptif returns a boolean if a field has been set.
func (o *BodaccDepotDesComptes) HasDescriptif() bool {
	if o != nil && !IsNil(o.Descriptif) {
		return true
	}

	return false
}

// SetDescriptif gets a reference to the given string and assigns it to the Descriptif field.
func (o *BodaccDepotDesComptes) SetDescriptif(v string) {
	o.Descriptif = &v
}

func (o BodaccDepotDesComptes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BodaccDepotDesComptes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedBodacc, errBodacc := json.Marshal(o.Bodacc)
	if errBodacc != nil {
		return map[string]interface{}{}, errBodacc
	}
	errBodacc = json.Unmarshal([]byte(serializedBodacc), &toSerialize)
	if errBodacc != nil {
		return map[string]interface{}{}, errBodacc
	}
	if !IsNil(o.DateCloture) {
		toSerialize["date_cloture"] = o.DateCloture
	}
	if !IsNil(o.TypeDepot) {
		toSerialize["type_depot"] = o.TypeDepot
	}
	if !IsNil(o.Descriptif) {
		toSerialize["descriptif"] = o.Descriptif
	}
	return toSerialize, nil
}

type NullableBodaccDepotDesComptes struct {
	value *BodaccDepotDesComptes
	isSet bool
}

func (v NullableBodaccDepotDesComptes) Get() *BodaccDepotDesComptes {
	return v.value
}

func (v *NullableBodaccDepotDesComptes) Set(val *BodaccDepotDesComptes) {
	v.value = val
	v.isSet = true
}

func (v NullableBodaccDepotDesComptes) IsSet() bool {
	return v.isSet
}

func (v *NullableBodaccDepotDesComptes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBodaccDepotDesComptes(val *BodaccDepotDesComptes) *NullableBodaccDepotDesComptes {
	return &NullableBodaccDepotDesComptes{value: val, isSet: true}
}

func (v NullableBodaccDepotDesComptes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBodaccDepotDesComptes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


