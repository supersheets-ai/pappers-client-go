/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EntrepriseBaseConventionsCollectivesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntrepriseBaseConventionsCollectivesInner{}

// EntrepriseBaseConventionsCollectivesInner struct for EntrepriseBaseConventionsCollectivesInner
type EntrepriseBaseConventionsCollectivesInner struct {
	// Nom de la convention collective.
	Nom *string `json:"nom,omitempty"`
	// Code IDCC de l'entreprise.
	Idcc *int32 `json:"idcc,omitempty"`
	// Si confirmée, l'information est issue de la DSN de l'entreprise et fournie par le ministère du Travail. Si non confirmée, ce n'est qu'une estimation à partir du code NAF de l'entreprise.
	Confirmee *bool `json:"confirmee,omitempty"`
	// Pourcentage de fiabilité de l'estimation. Si la convention est confirmée, vaut null.
	Pourcentage *float32 `json:"pourcentage,omitempty"`
}

// NewEntrepriseBaseConventionsCollectivesInner instantiates a new EntrepriseBaseConventionsCollectivesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntrepriseBaseConventionsCollectivesInner() *EntrepriseBaseConventionsCollectivesInner {
	this := EntrepriseBaseConventionsCollectivesInner{}
	return &this
}

// NewEntrepriseBaseConventionsCollectivesInnerWithDefaults instantiates a new EntrepriseBaseConventionsCollectivesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntrepriseBaseConventionsCollectivesInnerWithDefaults() *EntrepriseBaseConventionsCollectivesInner {
	this := EntrepriseBaseConventionsCollectivesInner{}
	return &this
}

// GetNom returns the Nom field value if set, zero value otherwise.
func (o *EntrepriseBaseConventionsCollectivesInner) GetNom() string {
	if o == nil || IsNil(o.Nom) {
		var ret string
		return ret
	}
	return *o.Nom
}

// GetNomOk returns a tuple with the Nom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseBaseConventionsCollectivesInner) GetNomOk() (*string, bool) {
	if o == nil || IsNil(o.Nom) {
		return nil, false
	}
	return o.Nom, true
}

// HasNom returns a boolean if a field has been set.
func (o *EntrepriseBaseConventionsCollectivesInner) HasNom() bool {
	if o != nil && !IsNil(o.Nom) {
		return true
	}

	return false
}

// SetNom gets a reference to the given string and assigns it to the Nom field.
func (o *EntrepriseBaseConventionsCollectivesInner) SetNom(v string) {
	o.Nom = &v
}

// GetIdcc returns the Idcc field value if set, zero value otherwise.
func (o *EntrepriseBaseConventionsCollectivesInner) GetIdcc() int32 {
	if o == nil || IsNil(o.Idcc) {
		var ret int32
		return ret
	}
	return *o.Idcc
}

// GetIdccOk returns a tuple with the Idcc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseBaseConventionsCollectivesInner) GetIdccOk() (*int32, bool) {
	if o == nil || IsNil(o.Idcc) {
		return nil, false
	}
	return o.Idcc, true
}

// HasIdcc returns a boolean if a field has been set.
func (o *EntrepriseBaseConventionsCollectivesInner) HasIdcc() bool {
	if o != nil && !IsNil(o.Idcc) {
		return true
	}

	return false
}

// SetIdcc gets a reference to the given int32 and assigns it to the Idcc field.
func (o *EntrepriseBaseConventionsCollectivesInner) SetIdcc(v int32) {
	o.Idcc = &v
}

// GetConfirmee returns the Confirmee field value if set, zero value otherwise.
func (o *EntrepriseBaseConventionsCollectivesInner) GetConfirmee() bool {
	if o == nil || IsNil(o.Confirmee) {
		var ret bool
		return ret
	}
	return *o.Confirmee
}

// GetConfirmeeOk returns a tuple with the Confirmee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseBaseConventionsCollectivesInner) GetConfirmeeOk() (*bool, bool) {
	if o == nil || IsNil(o.Confirmee) {
		return nil, false
	}
	return o.Confirmee, true
}

// HasConfirmee returns a boolean if a field has been set.
func (o *EntrepriseBaseConventionsCollectivesInner) HasConfirmee() bool {
	if o != nil && !IsNil(o.Confirmee) {
		return true
	}

	return false
}

// SetConfirmee gets a reference to the given bool and assigns it to the Confirmee field.
func (o *EntrepriseBaseConventionsCollectivesInner) SetConfirmee(v bool) {
	o.Confirmee = &v
}

// GetPourcentage returns the Pourcentage field value if set, zero value otherwise.
func (o *EntrepriseBaseConventionsCollectivesInner) GetPourcentage() float32 {
	if o == nil || IsNil(o.Pourcentage) {
		var ret float32
		return ret
	}
	return *o.Pourcentage
}

// GetPourcentageOk returns a tuple with the Pourcentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseBaseConventionsCollectivesInner) GetPourcentageOk() (*float32, bool) {
	if o == nil || IsNil(o.Pourcentage) {
		return nil, false
	}
	return o.Pourcentage, true
}

// HasPourcentage returns a boolean if a field has been set.
func (o *EntrepriseBaseConventionsCollectivesInner) HasPourcentage() bool {
	if o != nil && !IsNil(o.Pourcentage) {
		return true
	}

	return false
}

// SetPourcentage gets a reference to the given float32 and assigns it to the Pourcentage field.
func (o *EntrepriseBaseConventionsCollectivesInner) SetPourcentage(v float32) {
	o.Pourcentage = &v
}

func (o EntrepriseBaseConventionsCollectivesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntrepriseBaseConventionsCollectivesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Nom) {
		toSerialize["nom"] = o.Nom
	}
	if !IsNil(o.Idcc) {
		toSerialize["idcc"] = o.Idcc
	}
	if !IsNil(o.Confirmee) {
		toSerialize["confirmee"] = o.Confirmee
	}
	if !IsNil(o.Pourcentage) {
		toSerialize["pourcentage"] = o.Pourcentage
	}
	return toSerialize, nil
}

type NullableEntrepriseBaseConventionsCollectivesInner struct {
	value *EntrepriseBaseConventionsCollectivesInner
	isSet bool
}

func (v NullableEntrepriseBaseConventionsCollectivesInner) Get() *EntrepriseBaseConventionsCollectivesInner {
	return v.value
}

func (v *NullableEntrepriseBaseConventionsCollectivesInner) Set(val *EntrepriseBaseConventionsCollectivesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableEntrepriseBaseConventionsCollectivesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableEntrepriseBaseConventionsCollectivesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntrepriseBaseConventionsCollectivesInner(val *EntrepriseBaseConventionsCollectivesInner) *NullableEntrepriseBaseConventionsCollectivesInner {
	return &NullableEntrepriseBaseConventionsCollectivesInner{value: val, isSet: true}
}

func (v NullableEntrepriseBaseConventionsCollectivesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntrepriseBaseConventionsCollectivesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


