/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RechercheDocuments200ResponseResultatsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RechercheDocuments200ResponseResultatsInner{}

// RechercheDocuments200ResponseResultatsInner struct for RechercheDocuments200ResponseResultatsInner
type RechercheDocuments200ResponseResultatsInner struct {
	Document
	Entreprise *EntrepriseRecherche `json:"entreprise,omitempty"`
}

// NewRechercheDocuments200ResponseResultatsInner instantiates a new RechercheDocuments200ResponseResultatsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRechercheDocuments200ResponseResultatsInner() *RechercheDocuments200ResponseResultatsInner {
	this := RechercheDocuments200ResponseResultatsInner{}
	return &this
}

// NewRechercheDocuments200ResponseResultatsInnerWithDefaults instantiates a new RechercheDocuments200ResponseResultatsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRechercheDocuments200ResponseResultatsInnerWithDefaults() *RechercheDocuments200ResponseResultatsInner {
	this := RechercheDocuments200ResponseResultatsInner{}
	return &this
}

// GetEntreprise returns the Entreprise field value if set, zero value otherwise.
func (o *RechercheDocuments200ResponseResultatsInner) GetEntreprise() EntrepriseRecherche {
	if o == nil || IsNil(o.Entreprise) {
		var ret EntrepriseRecherche
		return ret
	}
	return *o.Entreprise
}

// GetEntrepriseOk returns a tuple with the Entreprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RechercheDocuments200ResponseResultatsInner) GetEntrepriseOk() (*EntrepriseRecherche, bool) {
	if o == nil || IsNil(o.Entreprise) {
		return nil, false
	}
	return o.Entreprise, true
}

// HasEntreprise returns a boolean if a field has been set.
func (o *RechercheDocuments200ResponseResultatsInner) HasEntreprise() bool {
	if o != nil && !IsNil(o.Entreprise) {
		return true
	}

	return false
}

// SetEntreprise gets a reference to the given EntrepriseRecherche and assigns it to the Entreprise field.
func (o *RechercheDocuments200ResponseResultatsInner) SetEntreprise(v EntrepriseRecherche) {
	o.Entreprise = &v
}

func (o RechercheDocuments200ResponseResultatsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RechercheDocuments200ResponseResultatsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedDocument, errDocument := json.Marshal(o.Document)
	if errDocument != nil {
		return map[string]interface{}{}, errDocument
	}
	errDocument = json.Unmarshal([]byte(serializedDocument), &toSerialize)
	if errDocument != nil {
		return map[string]interface{}{}, errDocument
	}
	if !IsNil(o.Entreprise) {
		toSerialize["entreprise"] = o.Entreprise
	}
	return toSerialize, nil
}

type NullableRechercheDocuments200ResponseResultatsInner struct {
	value *RechercheDocuments200ResponseResultatsInner
	isSet bool
}

func (v NullableRechercheDocuments200ResponseResultatsInner) Get() *RechercheDocuments200ResponseResultatsInner {
	return v.value
}

func (v *NullableRechercheDocuments200ResponseResultatsInner) Set(val *RechercheDocuments200ResponseResultatsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRechercheDocuments200ResponseResultatsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRechercheDocuments200ResponseResultatsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRechercheDocuments200ResponseResultatsInner(val *RechercheDocuments200ResponseResultatsInner) *NullableRechercheDocuments200ResponseResultatsInner {
	return &NullableRechercheDocuments200ResponseResultatsInner{value: val, isSet: true}
}

func (v NullableRechercheDocuments200ResponseResultatsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRechercheDocuments200ResponseResultatsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


