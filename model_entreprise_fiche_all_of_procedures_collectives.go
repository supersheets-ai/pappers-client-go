/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EntrepriseFicheAllOfProceduresCollectives type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntrepriseFicheAllOfProceduresCollectives{}

// EntrepriseFicheAllOfProceduresCollectives struct for EntrepriseFicheAllOfProceduresCollectives
type EntrepriseFicheAllOfProceduresCollectives struct {
	// Type de la procédure collective.
	Type *string `json:"type,omitempty"`
	// Date de début de la procédure collective, au format AAAA-MM-JJ.
	DateDebut *string `json:"date_debut,omitempty"`
	// Date de fin de la procédure collective, au format AAAA-MM-JJ.
	DateFin *string `json:"date_fin,omitempty"`
	// Liste des publications relatives à la procédure collective.
	PublicationsBodacc []Bodacc `json:"publications_bodacc,omitempty"`
}

// NewEntrepriseFicheAllOfProceduresCollectives instantiates a new EntrepriseFicheAllOfProceduresCollectives object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntrepriseFicheAllOfProceduresCollectives() *EntrepriseFicheAllOfProceduresCollectives {
	this := EntrepriseFicheAllOfProceduresCollectives{}
	return &this
}

// NewEntrepriseFicheAllOfProceduresCollectivesWithDefaults instantiates a new EntrepriseFicheAllOfProceduresCollectives object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntrepriseFicheAllOfProceduresCollectivesWithDefaults() *EntrepriseFicheAllOfProceduresCollectives {
	this := EntrepriseFicheAllOfProceduresCollectives{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfProceduresCollectives) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfProceduresCollectives) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfProceduresCollectives) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *EntrepriseFicheAllOfProceduresCollectives) SetType(v string) {
	o.Type = &v
}

// GetDateDebut returns the DateDebut field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfProceduresCollectives) GetDateDebut() string {
	if o == nil || IsNil(o.DateDebut) {
		var ret string
		return ret
	}
	return *o.DateDebut
}

// GetDateDebutOk returns a tuple with the DateDebut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfProceduresCollectives) GetDateDebutOk() (*string, bool) {
	if o == nil || IsNil(o.DateDebut) {
		return nil, false
	}
	return o.DateDebut, true
}

// HasDateDebut returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfProceduresCollectives) HasDateDebut() bool {
	if o != nil && !IsNil(o.DateDebut) {
		return true
	}

	return false
}

// SetDateDebut gets a reference to the given string and assigns it to the DateDebut field.
func (o *EntrepriseFicheAllOfProceduresCollectives) SetDateDebut(v string) {
	o.DateDebut = &v
}

// GetDateFin returns the DateFin field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfProceduresCollectives) GetDateFin() string {
	if o == nil || IsNil(o.DateFin) {
		var ret string
		return ret
	}
	return *o.DateFin
}

// GetDateFinOk returns a tuple with the DateFin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfProceduresCollectives) GetDateFinOk() (*string, bool) {
	if o == nil || IsNil(o.DateFin) {
		return nil, false
	}
	return o.DateFin, true
}

// HasDateFin returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfProceduresCollectives) HasDateFin() bool {
	if o != nil && !IsNil(o.DateFin) {
		return true
	}

	return false
}

// SetDateFin gets a reference to the given string and assigns it to the DateFin field.
func (o *EntrepriseFicheAllOfProceduresCollectives) SetDateFin(v string) {
	o.DateFin = &v
}

// GetPublicationsBodacc returns the PublicationsBodacc field value if set, zero value otherwise.
func (o *EntrepriseFicheAllOfProceduresCollectives) GetPublicationsBodacc() []Bodacc {
	if o == nil || IsNil(o.PublicationsBodacc) {
		var ret []Bodacc
		return ret
	}
	return o.PublicationsBodacc
}

// GetPublicationsBodaccOk returns a tuple with the PublicationsBodacc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntrepriseFicheAllOfProceduresCollectives) GetPublicationsBodaccOk() ([]Bodacc, bool) {
	if o == nil || IsNil(o.PublicationsBodacc) {
		return nil, false
	}
	return o.PublicationsBodacc, true
}

// HasPublicationsBodacc returns a boolean if a field has been set.
func (o *EntrepriseFicheAllOfProceduresCollectives) HasPublicationsBodacc() bool {
	if o != nil && !IsNil(o.PublicationsBodacc) {
		return true
	}

	return false
}

// SetPublicationsBodacc gets a reference to the given []Bodacc and assigns it to the PublicationsBodacc field.
func (o *EntrepriseFicheAllOfProceduresCollectives) SetPublicationsBodacc(v []Bodacc) {
	o.PublicationsBodacc = v
}

func (o EntrepriseFicheAllOfProceduresCollectives) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntrepriseFicheAllOfProceduresCollectives) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.DateDebut) {
		toSerialize["date_debut"] = o.DateDebut
	}
	if !IsNil(o.DateFin) {
		toSerialize["date_fin"] = o.DateFin
	}
	if !IsNil(o.PublicationsBodacc) {
		toSerialize["publications_bodacc"] = o.PublicationsBodacc
	}
	return toSerialize, nil
}

type NullableEntrepriseFicheAllOfProceduresCollectives struct {
	value *EntrepriseFicheAllOfProceduresCollectives
	isSet bool
}

func (v NullableEntrepriseFicheAllOfProceduresCollectives) Get() *EntrepriseFicheAllOfProceduresCollectives {
	return v.value
}

func (v *NullableEntrepriseFicheAllOfProceduresCollectives) Set(val *EntrepriseFicheAllOfProceduresCollectives) {
	v.value = val
	v.isSet = true
}

func (v NullableEntrepriseFicheAllOfProceduresCollectives) IsSet() bool {
	return v.isSet
}

func (v *NullableEntrepriseFicheAllOfProceduresCollectives) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntrepriseFicheAllOfProceduresCollectives(val *EntrepriseFicheAllOfProceduresCollectives) *NullableEntrepriseFicheAllOfProceduresCollectives {
	return &NullableEntrepriseFicheAllOfProceduresCollectives{value: val, isSet: true}
}

func (v NullableEntrepriseFicheAllOfProceduresCollectives) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntrepriseFicheAllOfProceduresCollectives) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


