/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SurveillanceDirigeant201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SurveillanceDirigeant201Response{}

// SurveillanceDirigeant201Response Nombre de notifications ajoutées.
type SurveillanceDirigeant201Response struct {
	// Le nombre de dirigeants ajoutées à votre liste de surveillance de dirigeants.
	NotificationsAjoutees *float32 `json:"notifications_ajoutees,omitempty"`
}

// NewSurveillanceDirigeant201Response instantiates a new SurveillanceDirigeant201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSurveillanceDirigeant201Response() *SurveillanceDirigeant201Response {
	this := SurveillanceDirigeant201Response{}
	return &this
}

// NewSurveillanceDirigeant201ResponseWithDefaults instantiates a new SurveillanceDirigeant201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSurveillanceDirigeant201ResponseWithDefaults() *SurveillanceDirigeant201Response {
	this := SurveillanceDirigeant201Response{}
	return &this
}

// GetNotificationsAjoutees returns the NotificationsAjoutees field value if set, zero value otherwise.
func (o *SurveillanceDirigeant201Response) GetNotificationsAjoutees() float32 {
	if o == nil || IsNil(o.NotificationsAjoutees) {
		var ret float32
		return ret
	}
	return *o.NotificationsAjoutees
}

// GetNotificationsAjouteesOk returns a tuple with the NotificationsAjoutees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SurveillanceDirigeant201Response) GetNotificationsAjouteesOk() (*float32, bool) {
	if o == nil || IsNil(o.NotificationsAjoutees) {
		return nil, false
	}
	return o.NotificationsAjoutees, true
}

// HasNotificationsAjoutees returns a boolean if a field has been set.
func (o *SurveillanceDirigeant201Response) HasNotificationsAjoutees() bool {
	if o != nil && !IsNil(o.NotificationsAjoutees) {
		return true
	}

	return false
}

// SetNotificationsAjoutees gets a reference to the given float32 and assigns it to the NotificationsAjoutees field.
func (o *SurveillanceDirigeant201Response) SetNotificationsAjoutees(v float32) {
	o.NotificationsAjoutees = &v
}

func (o SurveillanceDirigeant201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SurveillanceDirigeant201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NotificationsAjoutees) {
		toSerialize["notifications_ajoutees"] = o.NotificationsAjoutees
	}
	return toSerialize, nil
}

type NullableSurveillanceDirigeant201Response struct {
	value *SurveillanceDirigeant201Response
	isSet bool
}

func (v NullableSurveillanceDirigeant201Response) Get() *SurveillanceDirigeant201Response {
	return v.value
}

func (v *NullableSurveillanceDirigeant201Response) Set(val *SurveillanceDirigeant201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSurveillanceDirigeant201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSurveillanceDirigeant201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSurveillanceDirigeant201Response(val *SurveillanceDirigeant201Response) *NullableSurveillanceDirigeant201Response {
	return &NullableSurveillanceDirigeant201Response{value: val, isSet: true}
}

func (v NullableSurveillanceDirigeant201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSurveillanceDirigeant201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


