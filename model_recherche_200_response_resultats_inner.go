/*
Pappers API

L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, soit via le header `api-key`, soit (déconseillé) en utilisant le paramètre query `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V3 : https://www.pappers.fr/api/documentation/v3  Lien vers la documentation de l'API internationale : https://www.pappers.in/api/documentation  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

API version: 2.16.0
Contact: support@pappers.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Recherche200ResponseResultatsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Recherche200ResponseResultatsInner{}

// Recherche200ResponseResultatsInner struct for Recherche200ResponseResultatsInner
type Recherche200ResponseResultatsInner struct {
	// Le numéro SIREN de l'entreprise au format xxxxxxxxx.
	Siren *string `json:"siren,omitempty"`
	// Le numéro SIREN de l'entreprise au format xxx xxx xxx.
	SirenFormate *string `json:"siren_formate,omitempty"`
	// Indique si l'entreprise s'oppose à l'utilisation commerciale de ses données.
	OppositionUtilisationCommerciale *bool `json:"opposition_utilisation_commerciale,omitempty"`
	// Le nom de l'entreprise. Il est égal à sigle + dénomination en cas de personne morale, ou à nom + prénom en cas de personne physique. Nullable si le paramètre `integrer_diffusions_partielles` est à vrai.
	NomEntreprise *string `json:"nom_entreprise,omitempty"`
	// Vrai en cas de personne morale, faux en cas de personne physique.
	PersonneMorale *bool `json:"personne_morale,omitempty"`
	// Dénomination de l'entreprise si personne morale.
	Denomination *string `json:"denomination,omitempty"`
	// Nom si personne physique.
	Nom *string `json:"nom,omitempty"`
	// Prénom si personne physique.
	Prenom *string `json:"prenom,omitempty"`
	// Sexe si personne physique. F pour féminin, M pour masculin.
	Sexe *string `json:"sexe,omitempty"`
	// Code NAF de l'entreprise.
	CodeNaf *string `json:"code_naf,omitempty"`
	// Libellé du code NAF de l'entreprise.
	LibelleCodeNaf *string `json:"libelle_code_naf,omitempty"`
	// Domaine d'activité de l'entreprise.
	DomaineActivite *string `json:"domaine_activite,omitempty"`
	// Liste des conventions collectives de l'entreprise.
	ConventionsCollectives []EntrepriseBaseConventionsCollectivesInner `json:"conventions_collectives,omitempty"`
	// Date de création de l'entreprise au format AAAA-MM-JJ.
	DateCreation *string `json:"date_creation,omitempty"`
	// Date de création de l'entreprise au format JJ/MM/AAAA.
	DateCreationFormate *string `json:"date_creation_formate,omitempty"`
	// Si vrai, l'entreprise n'est plus en activité. Sinon, elle est toujours en activité.
	EntrepriseCessee *bool `json:"entreprise_cessee,omitempty"`
	// Date de cessation de l'entreprise au format AAAA-MM-JJ.
	DateCessation *string `json:"date_cessation,omitempty"`
	// Si vrai, l'entreprise a au moins un employé.
	EntrepriseEmployeuse *bool `json:"entreprise_employeuse,omitempty"`
	// Si vrai, l'entreprise est société à mission.
	SocieteAMission *bool `json:"societe_a_mission,omitempty"`
	// Catégorie juridique de l'entreprise, selon la [nomenclature Insee](https://www.insee.fr/fr/information/2028129).   **Note** : Le code correspond à celui de l'INSEE, à l'exception des SASU qui auront comme code 5720 et les EURL qui auront comme code 5498.
	CategorieJuridique *string `json:"categorie_juridique,omitempty"`
	// Forme juridique de l'entreprise.
	FormeJuridique *string `json:"forme_juridique,omitempty"`
	// Si vrai, l'entreprise est une micro-entreprise. Uniquement présent si demandé dans les champs supplémentaires.
	MicroEntreprise *bool `json:"micro_entreprise,omitempty"`
	// Forme d'exercice de l'activité principale.
	FormeExercice *string `json:"forme_exercice,omitempty"`
	// Tranche d'effectif de l'entreprise.
	Effectif *string `json:"effectif,omitempty"`
	// Effectif minimal de l'entreprise.
	EffectifMin *int32 `json:"effectif_min,omitempty"`
	// Effectif maximal de l'entreprise.
	EffectifMax *int32 `json:"effectif_max,omitempty"`
	// Tranche d'effectif de l'entreprise, selon la [nomenclature Sirene](https://www.sirene.fr/static-resources/documentation/v_sommaire_311.htm#73).
	TrancheEffectif *string `json:"tranche_effectif,omitempty"`
	// Année de validité des variables effectif, effectif_min et effectif_max.
	AnneeEffectif *int32 `json:"annee_effectif,omitempty"`
	// Capital de l'entreprise.
	Capital *float32 `json:"capital,omitempty"`
	// Statut de l'entreprise au RCS
	StatutRcs *string `json:"statut_rcs,omitempty"`
	Siege *EtablissementRecherche `json:"siege,omitempty"`
	// Liste des villes où l'entreprise a au moins un établissement.
	Villes []string `json:"villes,omitempty"`
	// Chiffre d'affaires de l'entreprise.
	ChiffreAffaires *int32 `json:"chiffre_affaires,omitempty"`
	// Résultat de l'entreprise.
	Resultat *int32 `json:"resultat,omitempty"`
	// Effectif de l'entreprise.
	EffectifsFinances *int32 `json:"effectifs_finances,omitempty"`
	// Année de correspondance des variables financières (chiffre_affaires, resultat, effectifs_finances).
	AnneeFinances *string `json:"annee_finances,omitempty"`
	// Dirigeants de l'entreprise qui correspondent à la recherche (si vous recherchez dans la base dirigeants).
	Dirigeants []RepresentantRecherche `json:"dirigeants,omitempty"`
	// Bénéficiaires effectifs de l'entreprise qui correspondent à la recherche (si vous recherchez dans la base bénéficiaires effectifs).
	Beneficiaires []Beneficiaire `json:"beneficiaires,omitempty"`
	// Documents de l'entreprise qui correspondent à la recherche (si vous recherchez dans la base documents).
	Documents []Document `json:"documents,omitempty"`
	// Publications de l'entreprise qui correspondent à la recherche (si vous recherchez dans la base publications).
	Publications []Recherche200ResponseResultatsInnerAllOfPublicationsInner `json:"publications,omitempty"`
	// Nombre de dirigeants total de l'entreprise.
	NbDirigeantsTotal *int32 `json:"nb_dirigeants_total,omitempty"`
	// Nombre de bénéficiaires effectifs total de l'entreprise.
	NbBeneficiairesTotal *int32 `json:"nb_beneficiaires_total,omitempty"`
	// Nombre de documents de l'entreprise qui correspondent à la recherche.
	NbDocumentsAvecMentions *int32 `json:"nb_documents_avec_mentions,omitempty"`
	// Nombre de documents total de l'entreprise.
	NbDocumentsTotal *int32 `json:"nb_documents_total,omitempty"`
	// Nombre de publications de l'entreprise qui correspondent à la recherche.
	NbPublicationsAvecMentions *int32 `json:"nb_publications_avec_mentions,omitempty"`
	// Nombre de publications total de l'entreprise.
	NbPublicationsTotal *int32 `json:"nb_publications_total,omitempty"`
}

// NewRecherche200ResponseResultatsInner instantiates a new Recherche200ResponseResultatsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecherche200ResponseResultatsInner() *Recherche200ResponseResultatsInner {
	this := Recherche200ResponseResultatsInner{}
	return &this
}

// NewRecherche200ResponseResultatsInnerWithDefaults instantiates a new Recherche200ResponseResultatsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecherche200ResponseResultatsInnerWithDefaults() *Recherche200ResponseResultatsInner {
	this := Recherche200ResponseResultatsInner{}
	return &this
}

// GetSiren returns the Siren field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetSiren() string {
	if o == nil || IsNil(o.Siren) {
		var ret string
		return ret
	}
	return *o.Siren
}

// GetSirenOk returns a tuple with the Siren field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetSirenOk() (*string, bool) {
	if o == nil || IsNil(o.Siren) {
		return nil, false
	}
	return o.Siren, true
}

// HasSiren returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasSiren() bool {
	if o != nil && !IsNil(o.Siren) {
		return true
	}

	return false
}

// SetSiren gets a reference to the given string and assigns it to the Siren field.
func (o *Recherche200ResponseResultatsInner) SetSiren(v string) {
	o.Siren = &v
}

// GetSirenFormate returns the SirenFormate field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetSirenFormate() string {
	if o == nil || IsNil(o.SirenFormate) {
		var ret string
		return ret
	}
	return *o.SirenFormate
}

// GetSirenFormateOk returns a tuple with the SirenFormate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetSirenFormateOk() (*string, bool) {
	if o == nil || IsNil(o.SirenFormate) {
		return nil, false
	}
	return o.SirenFormate, true
}

// HasSirenFormate returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasSirenFormate() bool {
	if o != nil && !IsNil(o.SirenFormate) {
		return true
	}

	return false
}

// SetSirenFormate gets a reference to the given string and assigns it to the SirenFormate field.
func (o *Recherche200ResponseResultatsInner) SetSirenFormate(v string) {
	o.SirenFormate = &v
}

// GetOppositionUtilisationCommerciale returns the OppositionUtilisationCommerciale field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetOppositionUtilisationCommerciale() bool {
	if o == nil || IsNil(o.OppositionUtilisationCommerciale) {
		var ret bool
		return ret
	}
	return *o.OppositionUtilisationCommerciale
}

// GetOppositionUtilisationCommercialeOk returns a tuple with the OppositionUtilisationCommerciale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetOppositionUtilisationCommercialeOk() (*bool, bool) {
	if o == nil || IsNil(o.OppositionUtilisationCommerciale) {
		return nil, false
	}
	return o.OppositionUtilisationCommerciale, true
}

// HasOppositionUtilisationCommerciale returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasOppositionUtilisationCommerciale() bool {
	if o != nil && !IsNil(o.OppositionUtilisationCommerciale) {
		return true
	}

	return false
}

// SetOppositionUtilisationCommerciale gets a reference to the given bool and assigns it to the OppositionUtilisationCommerciale field.
func (o *Recherche200ResponseResultatsInner) SetOppositionUtilisationCommerciale(v bool) {
	o.OppositionUtilisationCommerciale = &v
}

// GetNomEntreprise returns the NomEntreprise field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetNomEntreprise() string {
	if o == nil || IsNil(o.NomEntreprise) {
		var ret string
		return ret
	}
	return *o.NomEntreprise
}

// GetNomEntrepriseOk returns a tuple with the NomEntreprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetNomEntrepriseOk() (*string, bool) {
	if o == nil || IsNil(o.NomEntreprise) {
		return nil, false
	}
	return o.NomEntreprise, true
}

// HasNomEntreprise returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasNomEntreprise() bool {
	if o != nil && !IsNil(o.NomEntreprise) {
		return true
	}

	return false
}

// SetNomEntreprise gets a reference to the given string and assigns it to the NomEntreprise field.
func (o *Recherche200ResponseResultatsInner) SetNomEntreprise(v string) {
	o.NomEntreprise = &v
}

// GetPersonneMorale returns the PersonneMorale field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetPersonneMorale() bool {
	if o == nil || IsNil(o.PersonneMorale) {
		var ret bool
		return ret
	}
	return *o.PersonneMorale
}

// GetPersonneMoraleOk returns a tuple with the PersonneMorale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetPersonneMoraleOk() (*bool, bool) {
	if o == nil || IsNil(o.PersonneMorale) {
		return nil, false
	}
	return o.PersonneMorale, true
}

// HasPersonneMorale returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasPersonneMorale() bool {
	if o != nil && !IsNil(o.PersonneMorale) {
		return true
	}

	return false
}

// SetPersonneMorale gets a reference to the given bool and assigns it to the PersonneMorale field.
func (o *Recherche200ResponseResultatsInner) SetPersonneMorale(v bool) {
	o.PersonneMorale = &v
}

// GetDenomination returns the Denomination field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetDenomination() string {
	if o == nil || IsNil(o.Denomination) {
		var ret string
		return ret
	}
	return *o.Denomination
}

// GetDenominationOk returns a tuple with the Denomination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetDenominationOk() (*string, bool) {
	if o == nil || IsNil(o.Denomination) {
		return nil, false
	}
	return o.Denomination, true
}

// HasDenomination returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasDenomination() bool {
	if o != nil && !IsNil(o.Denomination) {
		return true
	}

	return false
}

// SetDenomination gets a reference to the given string and assigns it to the Denomination field.
func (o *Recherche200ResponseResultatsInner) SetDenomination(v string) {
	o.Denomination = &v
}

// GetNom returns the Nom field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetNom() string {
	if o == nil || IsNil(o.Nom) {
		var ret string
		return ret
	}
	return *o.Nom
}

// GetNomOk returns a tuple with the Nom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetNomOk() (*string, bool) {
	if o == nil || IsNil(o.Nom) {
		return nil, false
	}
	return o.Nom, true
}

// HasNom returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasNom() bool {
	if o != nil && !IsNil(o.Nom) {
		return true
	}

	return false
}

// SetNom gets a reference to the given string and assigns it to the Nom field.
func (o *Recherche200ResponseResultatsInner) SetNom(v string) {
	o.Nom = &v
}

// GetPrenom returns the Prenom field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetPrenom() string {
	if o == nil || IsNil(o.Prenom) {
		var ret string
		return ret
	}
	return *o.Prenom
}

// GetPrenomOk returns a tuple with the Prenom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetPrenomOk() (*string, bool) {
	if o == nil || IsNil(o.Prenom) {
		return nil, false
	}
	return o.Prenom, true
}

// HasPrenom returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasPrenom() bool {
	if o != nil && !IsNil(o.Prenom) {
		return true
	}

	return false
}

// SetPrenom gets a reference to the given string and assigns it to the Prenom field.
func (o *Recherche200ResponseResultatsInner) SetPrenom(v string) {
	o.Prenom = &v
}

// GetSexe returns the Sexe field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetSexe() string {
	if o == nil || IsNil(o.Sexe) {
		var ret string
		return ret
	}
	return *o.Sexe
}

// GetSexeOk returns a tuple with the Sexe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetSexeOk() (*string, bool) {
	if o == nil || IsNil(o.Sexe) {
		return nil, false
	}
	return o.Sexe, true
}

// HasSexe returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasSexe() bool {
	if o != nil && !IsNil(o.Sexe) {
		return true
	}

	return false
}

// SetSexe gets a reference to the given string and assigns it to the Sexe field.
func (o *Recherche200ResponseResultatsInner) SetSexe(v string) {
	o.Sexe = &v
}

// GetCodeNaf returns the CodeNaf field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetCodeNaf() string {
	if o == nil || IsNil(o.CodeNaf) {
		var ret string
		return ret
	}
	return *o.CodeNaf
}

// GetCodeNafOk returns a tuple with the CodeNaf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetCodeNafOk() (*string, bool) {
	if o == nil || IsNil(o.CodeNaf) {
		return nil, false
	}
	return o.CodeNaf, true
}

// HasCodeNaf returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasCodeNaf() bool {
	if o != nil && !IsNil(o.CodeNaf) {
		return true
	}

	return false
}

// SetCodeNaf gets a reference to the given string and assigns it to the CodeNaf field.
func (o *Recherche200ResponseResultatsInner) SetCodeNaf(v string) {
	o.CodeNaf = &v
}

// GetLibelleCodeNaf returns the LibelleCodeNaf field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetLibelleCodeNaf() string {
	if o == nil || IsNil(o.LibelleCodeNaf) {
		var ret string
		return ret
	}
	return *o.LibelleCodeNaf
}

// GetLibelleCodeNafOk returns a tuple with the LibelleCodeNaf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetLibelleCodeNafOk() (*string, bool) {
	if o == nil || IsNil(o.LibelleCodeNaf) {
		return nil, false
	}
	return o.LibelleCodeNaf, true
}

// HasLibelleCodeNaf returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasLibelleCodeNaf() bool {
	if o != nil && !IsNil(o.LibelleCodeNaf) {
		return true
	}

	return false
}

// SetLibelleCodeNaf gets a reference to the given string and assigns it to the LibelleCodeNaf field.
func (o *Recherche200ResponseResultatsInner) SetLibelleCodeNaf(v string) {
	o.LibelleCodeNaf = &v
}

// GetDomaineActivite returns the DomaineActivite field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetDomaineActivite() string {
	if o == nil || IsNil(o.DomaineActivite) {
		var ret string
		return ret
	}
	return *o.DomaineActivite
}

// GetDomaineActiviteOk returns a tuple with the DomaineActivite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetDomaineActiviteOk() (*string, bool) {
	if o == nil || IsNil(o.DomaineActivite) {
		return nil, false
	}
	return o.DomaineActivite, true
}

// HasDomaineActivite returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasDomaineActivite() bool {
	if o != nil && !IsNil(o.DomaineActivite) {
		return true
	}

	return false
}

// SetDomaineActivite gets a reference to the given string and assigns it to the DomaineActivite field.
func (o *Recherche200ResponseResultatsInner) SetDomaineActivite(v string) {
	o.DomaineActivite = &v
}

// GetConventionsCollectives returns the ConventionsCollectives field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetConventionsCollectives() []EntrepriseBaseConventionsCollectivesInner {
	if o == nil || IsNil(o.ConventionsCollectives) {
		var ret []EntrepriseBaseConventionsCollectivesInner
		return ret
	}
	return o.ConventionsCollectives
}

// GetConventionsCollectivesOk returns a tuple with the ConventionsCollectives field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetConventionsCollectivesOk() ([]EntrepriseBaseConventionsCollectivesInner, bool) {
	if o == nil || IsNil(o.ConventionsCollectives) {
		return nil, false
	}
	return o.ConventionsCollectives, true
}

// HasConventionsCollectives returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasConventionsCollectives() bool {
	if o != nil && !IsNil(o.ConventionsCollectives) {
		return true
	}

	return false
}

// SetConventionsCollectives gets a reference to the given []EntrepriseBaseConventionsCollectivesInner and assigns it to the ConventionsCollectives field.
func (o *Recherche200ResponseResultatsInner) SetConventionsCollectives(v []EntrepriseBaseConventionsCollectivesInner) {
	o.ConventionsCollectives = v
}

// GetDateCreation returns the DateCreation field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetDateCreation() string {
	if o == nil || IsNil(o.DateCreation) {
		var ret string
		return ret
	}
	return *o.DateCreation
}

// GetDateCreationOk returns a tuple with the DateCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetDateCreationOk() (*string, bool) {
	if o == nil || IsNil(o.DateCreation) {
		return nil, false
	}
	return o.DateCreation, true
}

// HasDateCreation returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasDateCreation() bool {
	if o != nil && !IsNil(o.DateCreation) {
		return true
	}

	return false
}

// SetDateCreation gets a reference to the given string and assigns it to the DateCreation field.
func (o *Recherche200ResponseResultatsInner) SetDateCreation(v string) {
	o.DateCreation = &v
}

// GetDateCreationFormate returns the DateCreationFormate field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetDateCreationFormate() string {
	if o == nil || IsNil(o.DateCreationFormate) {
		var ret string
		return ret
	}
	return *o.DateCreationFormate
}

// GetDateCreationFormateOk returns a tuple with the DateCreationFormate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetDateCreationFormateOk() (*string, bool) {
	if o == nil || IsNil(o.DateCreationFormate) {
		return nil, false
	}
	return o.DateCreationFormate, true
}

// HasDateCreationFormate returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasDateCreationFormate() bool {
	if o != nil && !IsNil(o.DateCreationFormate) {
		return true
	}

	return false
}

// SetDateCreationFormate gets a reference to the given string and assigns it to the DateCreationFormate field.
func (o *Recherche200ResponseResultatsInner) SetDateCreationFormate(v string) {
	o.DateCreationFormate = &v
}

// GetEntrepriseCessee returns the EntrepriseCessee field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetEntrepriseCessee() bool {
	if o == nil || IsNil(o.EntrepriseCessee) {
		var ret bool
		return ret
	}
	return *o.EntrepriseCessee
}

// GetEntrepriseCesseeOk returns a tuple with the EntrepriseCessee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetEntrepriseCesseeOk() (*bool, bool) {
	if o == nil || IsNil(o.EntrepriseCessee) {
		return nil, false
	}
	return o.EntrepriseCessee, true
}

// HasEntrepriseCessee returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasEntrepriseCessee() bool {
	if o != nil && !IsNil(o.EntrepriseCessee) {
		return true
	}

	return false
}

// SetEntrepriseCessee gets a reference to the given bool and assigns it to the EntrepriseCessee field.
func (o *Recherche200ResponseResultatsInner) SetEntrepriseCessee(v bool) {
	o.EntrepriseCessee = &v
}

// GetDateCessation returns the DateCessation field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetDateCessation() string {
	if o == nil || IsNil(o.DateCessation) {
		var ret string
		return ret
	}
	return *o.DateCessation
}

// GetDateCessationOk returns a tuple with the DateCessation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetDateCessationOk() (*string, bool) {
	if o == nil || IsNil(o.DateCessation) {
		return nil, false
	}
	return o.DateCessation, true
}

// HasDateCessation returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasDateCessation() bool {
	if o != nil && !IsNil(o.DateCessation) {
		return true
	}

	return false
}

// SetDateCessation gets a reference to the given string and assigns it to the DateCessation field.
func (o *Recherche200ResponseResultatsInner) SetDateCessation(v string) {
	o.DateCessation = &v
}

// GetEntrepriseEmployeuse returns the EntrepriseEmployeuse field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetEntrepriseEmployeuse() bool {
	if o == nil || IsNil(o.EntrepriseEmployeuse) {
		var ret bool
		return ret
	}
	return *o.EntrepriseEmployeuse
}

// GetEntrepriseEmployeuseOk returns a tuple with the EntrepriseEmployeuse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetEntrepriseEmployeuseOk() (*bool, bool) {
	if o == nil || IsNil(o.EntrepriseEmployeuse) {
		return nil, false
	}
	return o.EntrepriseEmployeuse, true
}

// HasEntrepriseEmployeuse returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasEntrepriseEmployeuse() bool {
	if o != nil && !IsNil(o.EntrepriseEmployeuse) {
		return true
	}

	return false
}

// SetEntrepriseEmployeuse gets a reference to the given bool and assigns it to the EntrepriseEmployeuse field.
func (o *Recherche200ResponseResultatsInner) SetEntrepriseEmployeuse(v bool) {
	o.EntrepriseEmployeuse = &v
}

// GetSocieteAMission returns the SocieteAMission field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetSocieteAMission() bool {
	if o == nil || IsNil(o.SocieteAMission) {
		var ret bool
		return ret
	}
	return *o.SocieteAMission
}

// GetSocieteAMissionOk returns a tuple with the SocieteAMission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetSocieteAMissionOk() (*bool, bool) {
	if o == nil || IsNil(o.SocieteAMission) {
		return nil, false
	}
	return o.SocieteAMission, true
}

// HasSocieteAMission returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasSocieteAMission() bool {
	if o != nil && !IsNil(o.SocieteAMission) {
		return true
	}

	return false
}

// SetSocieteAMission gets a reference to the given bool and assigns it to the SocieteAMission field.
func (o *Recherche200ResponseResultatsInner) SetSocieteAMission(v bool) {
	o.SocieteAMission = &v
}

// GetCategorieJuridique returns the CategorieJuridique field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetCategorieJuridique() string {
	if o == nil || IsNil(o.CategorieJuridique) {
		var ret string
		return ret
	}
	return *o.CategorieJuridique
}

// GetCategorieJuridiqueOk returns a tuple with the CategorieJuridique field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetCategorieJuridiqueOk() (*string, bool) {
	if o == nil || IsNil(o.CategorieJuridique) {
		return nil, false
	}
	return o.CategorieJuridique, true
}

// HasCategorieJuridique returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasCategorieJuridique() bool {
	if o != nil && !IsNil(o.CategorieJuridique) {
		return true
	}

	return false
}

// SetCategorieJuridique gets a reference to the given string and assigns it to the CategorieJuridique field.
func (o *Recherche200ResponseResultatsInner) SetCategorieJuridique(v string) {
	o.CategorieJuridique = &v
}

// GetFormeJuridique returns the FormeJuridique field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetFormeJuridique() string {
	if o == nil || IsNil(o.FormeJuridique) {
		var ret string
		return ret
	}
	return *o.FormeJuridique
}

// GetFormeJuridiqueOk returns a tuple with the FormeJuridique field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetFormeJuridiqueOk() (*string, bool) {
	if o == nil || IsNil(o.FormeJuridique) {
		return nil, false
	}
	return o.FormeJuridique, true
}

// HasFormeJuridique returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasFormeJuridique() bool {
	if o != nil && !IsNil(o.FormeJuridique) {
		return true
	}

	return false
}

// SetFormeJuridique gets a reference to the given string and assigns it to the FormeJuridique field.
func (o *Recherche200ResponseResultatsInner) SetFormeJuridique(v string) {
	o.FormeJuridique = &v
}

// GetMicroEntreprise returns the MicroEntreprise field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetMicroEntreprise() bool {
	if o == nil || IsNil(o.MicroEntreprise) {
		var ret bool
		return ret
	}
	return *o.MicroEntreprise
}

// GetMicroEntrepriseOk returns a tuple with the MicroEntreprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetMicroEntrepriseOk() (*bool, bool) {
	if o == nil || IsNil(o.MicroEntreprise) {
		return nil, false
	}
	return o.MicroEntreprise, true
}

// HasMicroEntreprise returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasMicroEntreprise() bool {
	if o != nil && !IsNil(o.MicroEntreprise) {
		return true
	}

	return false
}

// SetMicroEntreprise gets a reference to the given bool and assigns it to the MicroEntreprise field.
func (o *Recherche200ResponseResultatsInner) SetMicroEntreprise(v bool) {
	o.MicroEntreprise = &v
}

// GetFormeExercice returns the FormeExercice field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetFormeExercice() string {
	if o == nil || IsNil(o.FormeExercice) {
		var ret string
		return ret
	}
	return *o.FormeExercice
}

// GetFormeExerciceOk returns a tuple with the FormeExercice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetFormeExerciceOk() (*string, bool) {
	if o == nil || IsNil(o.FormeExercice) {
		return nil, false
	}
	return o.FormeExercice, true
}

// HasFormeExercice returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasFormeExercice() bool {
	if o != nil && !IsNil(o.FormeExercice) {
		return true
	}

	return false
}

// SetFormeExercice gets a reference to the given string and assigns it to the FormeExercice field.
func (o *Recherche200ResponseResultatsInner) SetFormeExercice(v string) {
	o.FormeExercice = &v
}

// GetEffectif returns the Effectif field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetEffectif() string {
	if o == nil || IsNil(o.Effectif) {
		var ret string
		return ret
	}
	return *o.Effectif
}

// GetEffectifOk returns a tuple with the Effectif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetEffectifOk() (*string, bool) {
	if o == nil || IsNil(o.Effectif) {
		return nil, false
	}
	return o.Effectif, true
}

// HasEffectif returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasEffectif() bool {
	if o != nil && !IsNil(o.Effectif) {
		return true
	}

	return false
}

// SetEffectif gets a reference to the given string and assigns it to the Effectif field.
func (o *Recherche200ResponseResultatsInner) SetEffectif(v string) {
	o.Effectif = &v
}

// GetEffectifMin returns the EffectifMin field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetEffectifMin() int32 {
	if o == nil || IsNil(o.EffectifMin) {
		var ret int32
		return ret
	}
	return *o.EffectifMin
}

// GetEffectifMinOk returns a tuple with the EffectifMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetEffectifMinOk() (*int32, bool) {
	if o == nil || IsNil(o.EffectifMin) {
		return nil, false
	}
	return o.EffectifMin, true
}

// HasEffectifMin returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasEffectifMin() bool {
	if o != nil && !IsNil(o.EffectifMin) {
		return true
	}

	return false
}

// SetEffectifMin gets a reference to the given int32 and assigns it to the EffectifMin field.
func (o *Recherche200ResponseResultatsInner) SetEffectifMin(v int32) {
	o.EffectifMin = &v
}

// GetEffectifMax returns the EffectifMax field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetEffectifMax() int32 {
	if o == nil || IsNil(o.EffectifMax) {
		var ret int32
		return ret
	}
	return *o.EffectifMax
}

// GetEffectifMaxOk returns a tuple with the EffectifMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetEffectifMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.EffectifMax) {
		return nil, false
	}
	return o.EffectifMax, true
}

// HasEffectifMax returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasEffectifMax() bool {
	if o != nil && !IsNil(o.EffectifMax) {
		return true
	}

	return false
}

// SetEffectifMax gets a reference to the given int32 and assigns it to the EffectifMax field.
func (o *Recherche200ResponseResultatsInner) SetEffectifMax(v int32) {
	o.EffectifMax = &v
}

// GetTrancheEffectif returns the TrancheEffectif field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetTrancheEffectif() string {
	if o == nil || IsNil(o.TrancheEffectif) {
		var ret string
		return ret
	}
	return *o.TrancheEffectif
}

// GetTrancheEffectifOk returns a tuple with the TrancheEffectif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetTrancheEffectifOk() (*string, bool) {
	if o == nil || IsNil(o.TrancheEffectif) {
		return nil, false
	}
	return o.TrancheEffectif, true
}

// HasTrancheEffectif returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasTrancheEffectif() bool {
	if o != nil && !IsNil(o.TrancheEffectif) {
		return true
	}

	return false
}

// SetTrancheEffectif gets a reference to the given string and assigns it to the TrancheEffectif field.
func (o *Recherche200ResponseResultatsInner) SetTrancheEffectif(v string) {
	o.TrancheEffectif = &v
}

// GetAnneeEffectif returns the AnneeEffectif field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetAnneeEffectif() int32 {
	if o == nil || IsNil(o.AnneeEffectif) {
		var ret int32
		return ret
	}
	return *o.AnneeEffectif
}

// GetAnneeEffectifOk returns a tuple with the AnneeEffectif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetAnneeEffectifOk() (*int32, bool) {
	if o == nil || IsNil(o.AnneeEffectif) {
		return nil, false
	}
	return o.AnneeEffectif, true
}

// HasAnneeEffectif returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasAnneeEffectif() bool {
	if o != nil && !IsNil(o.AnneeEffectif) {
		return true
	}

	return false
}

// SetAnneeEffectif gets a reference to the given int32 and assigns it to the AnneeEffectif field.
func (o *Recherche200ResponseResultatsInner) SetAnneeEffectif(v int32) {
	o.AnneeEffectif = &v
}

// GetCapital returns the Capital field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetCapital() float32 {
	if o == nil || IsNil(o.Capital) {
		var ret float32
		return ret
	}
	return *o.Capital
}

// GetCapitalOk returns a tuple with the Capital field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetCapitalOk() (*float32, bool) {
	if o == nil || IsNil(o.Capital) {
		return nil, false
	}
	return o.Capital, true
}

// HasCapital returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasCapital() bool {
	if o != nil && !IsNil(o.Capital) {
		return true
	}

	return false
}

// SetCapital gets a reference to the given float32 and assigns it to the Capital field.
func (o *Recherche200ResponseResultatsInner) SetCapital(v float32) {
	o.Capital = &v
}

// GetStatutRcs returns the StatutRcs field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetStatutRcs() string {
	if o == nil || IsNil(o.StatutRcs) {
		var ret string
		return ret
	}
	return *o.StatutRcs
}

// GetStatutRcsOk returns a tuple with the StatutRcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetStatutRcsOk() (*string, bool) {
	if o == nil || IsNil(o.StatutRcs) {
		return nil, false
	}
	return o.StatutRcs, true
}

// HasStatutRcs returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasStatutRcs() bool {
	if o != nil && !IsNil(o.StatutRcs) {
		return true
	}

	return false
}

// SetStatutRcs gets a reference to the given string and assigns it to the StatutRcs field.
func (o *Recherche200ResponseResultatsInner) SetStatutRcs(v string) {
	o.StatutRcs = &v
}

// GetSiege returns the Siege field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetSiege() EtablissementRecherche {
	if o == nil || IsNil(o.Siege) {
		var ret EtablissementRecherche
		return ret
	}
	return *o.Siege
}

// GetSiegeOk returns a tuple with the Siege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetSiegeOk() (*EtablissementRecherche, bool) {
	if o == nil || IsNil(o.Siege) {
		return nil, false
	}
	return o.Siege, true
}

// HasSiege returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasSiege() bool {
	if o != nil && !IsNil(o.Siege) {
		return true
	}

	return false
}

// SetSiege gets a reference to the given EtablissementRecherche and assigns it to the Siege field.
func (o *Recherche200ResponseResultatsInner) SetSiege(v EtablissementRecherche) {
	o.Siege = &v
}

// GetVilles returns the Villes field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetVilles() []string {
	if o == nil || IsNil(o.Villes) {
		var ret []string
		return ret
	}
	return o.Villes
}

// GetVillesOk returns a tuple with the Villes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetVillesOk() ([]string, bool) {
	if o == nil || IsNil(o.Villes) {
		return nil, false
	}
	return o.Villes, true
}

// HasVilles returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasVilles() bool {
	if o != nil && !IsNil(o.Villes) {
		return true
	}

	return false
}

// SetVilles gets a reference to the given []string and assigns it to the Villes field.
func (o *Recherche200ResponseResultatsInner) SetVilles(v []string) {
	o.Villes = v
}

// GetChiffreAffaires returns the ChiffreAffaires field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetChiffreAffaires() int32 {
	if o == nil || IsNil(o.ChiffreAffaires) {
		var ret int32
		return ret
	}
	return *o.ChiffreAffaires
}

// GetChiffreAffairesOk returns a tuple with the ChiffreAffaires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetChiffreAffairesOk() (*int32, bool) {
	if o == nil || IsNil(o.ChiffreAffaires) {
		return nil, false
	}
	return o.ChiffreAffaires, true
}

// HasChiffreAffaires returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasChiffreAffaires() bool {
	if o != nil && !IsNil(o.ChiffreAffaires) {
		return true
	}

	return false
}

// SetChiffreAffaires gets a reference to the given int32 and assigns it to the ChiffreAffaires field.
func (o *Recherche200ResponseResultatsInner) SetChiffreAffaires(v int32) {
	o.ChiffreAffaires = &v
}

// GetResultat returns the Resultat field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetResultat() int32 {
	if o == nil || IsNil(o.Resultat) {
		var ret int32
		return ret
	}
	return *o.Resultat
}

// GetResultatOk returns a tuple with the Resultat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetResultatOk() (*int32, bool) {
	if o == nil || IsNil(o.Resultat) {
		return nil, false
	}
	return o.Resultat, true
}

// HasResultat returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasResultat() bool {
	if o != nil && !IsNil(o.Resultat) {
		return true
	}

	return false
}

// SetResultat gets a reference to the given int32 and assigns it to the Resultat field.
func (o *Recherche200ResponseResultatsInner) SetResultat(v int32) {
	o.Resultat = &v
}

// GetEffectifsFinances returns the EffectifsFinances field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetEffectifsFinances() int32 {
	if o == nil || IsNil(o.EffectifsFinances) {
		var ret int32
		return ret
	}
	return *o.EffectifsFinances
}

// GetEffectifsFinancesOk returns a tuple with the EffectifsFinances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetEffectifsFinancesOk() (*int32, bool) {
	if o == nil || IsNil(o.EffectifsFinances) {
		return nil, false
	}
	return o.EffectifsFinances, true
}

// HasEffectifsFinances returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasEffectifsFinances() bool {
	if o != nil && !IsNil(o.EffectifsFinances) {
		return true
	}

	return false
}

// SetEffectifsFinances gets a reference to the given int32 and assigns it to the EffectifsFinances field.
func (o *Recherche200ResponseResultatsInner) SetEffectifsFinances(v int32) {
	o.EffectifsFinances = &v
}

// GetAnneeFinances returns the AnneeFinances field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetAnneeFinances() string {
	if o == nil || IsNil(o.AnneeFinances) {
		var ret string
		return ret
	}
	return *o.AnneeFinances
}

// GetAnneeFinancesOk returns a tuple with the AnneeFinances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetAnneeFinancesOk() (*string, bool) {
	if o == nil || IsNil(o.AnneeFinances) {
		return nil, false
	}
	return o.AnneeFinances, true
}

// HasAnneeFinances returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasAnneeFinances() bool {
	if o != nil && !IsNil(o.AnneeFinances) {
		return true
	}

	return false
}

// SetAnneeFinances gets a reference to the given string and assigns it to the AnneeFinances field.
func (o *Recherche200ResponseResultatsInner) SetAnneeFinances(v string) {
	o.AnneeFinances = &v
}

// GetDirigeants returns the Dirigeants field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetDirigeants() []RepresentantRecherche {
	if o == nil || IsNil(o.Dirigeants) {
		var ret []RepresentantRecherche
		return ret
	}
	return o.Dirigeants
}

// GetDirigeantsOk returns a tuple with the Dirigeants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetDirigeantsOk() ([]RepresentantRecherche, bool) {
	if o == nil || IsNil(o.Dirigeants) {
		return nil, false
	}
	return o.Dirigeants, true
}

// HasDirigeants returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasDirigeants() bool {
	if o != nil && !IsNil(o.Dirigeants) {
		return true
	}

	return false
}

// SetDirigeants gets a reference to the given []RepresentantRecherche and assigns it to the Dirigeants field.
func (o *Recherche200ResponseResultatsInner) SetDirigeants(v []RepresentantRecherche) {
	o.Dirigeants = v
}

// GetBeneficiaires returns the Beneficiaires field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetBeneficiaires() []Beneficiaire {
	if o == nil || IsNil(o.Beneficiaires) {
		var ret []Beneficiaire
		return ret
	}
	return o.Beneficiaires
}

// GetBeneficiairesOk returns a tuple with the Beneficiaires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetBeneficiairesOk() ([]Beneficiaire, bool) {
	if o == nil || IsNil(o.Beneficiaires) {
		return nil, false
	}
	return o.Beneficiaires, true
}

// HasBeneficiaires returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasBeneficiaires() bool {
	if o != nil && !IsNil(o.Beneficiaires) {
		return true
	}

	return false
}

// SetBeneficiaires gets a reference to the given []Beneficiaire and assigns it to the Beneficiaires field.
func (o *Recherche200ResponseResultatsInner) SetBeneficiaires(v []Beneficiaire) {
	o.Beneficiaires = v
}

// GetDocuments returns the Documents field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetDocuments() []Document {
	if o == nil || IsNil(o.Documents) {
		var ret []Document
		return ret
	}
	return o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetDocumentsOk() ([]Document, bool) {
	if o == nil || IsNil(o.Documents) {
		return nil, false
	}
	return o.Documents, true
}

// HasDocuments returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasDocuments() bool {
	if o != nil && !IsNil(o.Documents) {
		return true
	}

	return false
}

// SetDocuments gets a reference to the given []Document and assigns it to the Documents field.
func (o *Recherche200ResponseResultatsInner) SetDocuments(v []Document) {
	o.Documents = v
}

// GetPublications returns the Publications field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetPublications() []Recherche200ResponseResultatsInnerAllOfPublicationsInner {
	if o == nil || IsNil(o.Publications) {
		var ret []Recherche200ResponseResultatsInnerAllOfPublicationsInner
		return ret
	}
	return o.Publications
}

// GetPublicationsOk returns a tuple with the Publications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetPublicationsOk() ([]Recherche200ResponseResultatsInnerAllOfPublicationsInner, bool) {
	if o == nil || IsNil(o.Publications) {
		return nil, false
	}
	return o.Publications, true
}

// HasPublications returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasPublications() bool {
	if o != nil && !IsNil(o.Publications) {
		return true
	}

	return false
}

// SetPublications gets a reference to the given []Recherche200ResponseResultatsInnerAllOfPublicationsInner and assigns it to the Publications field.
func (o *Recherche200ResponseResultatsInner) SetPublications(v []Recherche200ResponseResultatsInnerAllOfPublicationsInner) {
	o.Publications = v
}

// GetNbDirigeantsTotal returns the NbDirigeantsTotal field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetNbDirigeantsTotal() int32 {
	if o == nil || IsNil(o.NbDirigeantsTotal) {
		var ret int32
		return ret
	}
	return *o.NbDirigeantsTotal
}

// GetNbDirigeantsTotalOk returns a tuple with the NbDirigeantsTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetNbDirigeantsTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.NbDirigeantsTotal) {
		return nil, false
	}
	return o.NbDirigeantsTotal, true
}

// HasNbDirigeantsTotal returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasNbDirigeantsTotal() bool {
	if o != nil && !IsNil(o.NbDirigeantsTotal) {
		return true
	}

	return false
}

// SetNbDirigeantsTotal gets a reference to the given int32 and assigns it to the NbDirigeantsTotal field.
func (o *Recherche200ResponseResultatsInner) SetNbDirigeantsTotal(v int32) {
	o.NbDirigeantsTotal = &v
}

// GetNbBeneficiairesTotal returns the NbBeneficiairesTotal field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetNbBeneficiairesTotal() int32 {
	if o == nil || IsNil(o.NbBeneficiairesTotal) {
		var ret int32
		return ret
	}
	return *o.NbBeneficiairesTotal
}

// GetNbBeneficiairesTotalOk returns a tuple with the NbBeneficiairesTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetNbBeneficiairesTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.NbBeneficiairesTotal) {
		return nil, false
	}
	return o.NbBeneficiairesTotal, true
}

// HasNbBeneficiairesTotal returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasNbBeneficiairesTotal() bool {
	if o != nil && !IsNil(o.NbBeneficiairesTotal) {
		return true
	}

	return false
}

// SetNbBeneficiairesTotal gets a reference to the given int32 and assigns it to the NbBeneficiairesTotal field.
func (o *Recherche200ResponseResultatsInner) SetNbBeneficiairesTotal(v int32) {
	o.NbBeneficiairesTotal = &v
}

// GetNbDocumentsAvecMentions returns the NbDocumentsAvecMentions field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetNbDocumentsAvecMentions() int32 {
	if o == nil || IsNil(o.NbDocumentsAvecMentions) {
		var ret int32
		return ret
	}
	return *o.NbDocumentsAvecMentions
}

// GetNbDocumentsAvecMentionsOk returns a tuple with the NbDocumentsAvecMentions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetNbDocumentsAvecMentionsOk() (*int32, bool) {
	if o == nil || IsNil(o.NbDocumentsAvecMentions) {
		return nil, false
	}
	return o.NbDocumentsAvecMentions, true
}

// HasNbDocumentsAvecMentions returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasNbDocumentsAvecMentions() bool {
	if o != nil && !IsNil(o.NbDocumentsAvecMentions) {
		return true
	}

	return false
}

// SetNbDocumentsAvecMentions gets a reference to the given int32 and assigns it to the NbDocumentsAvecMentions field.
func (o *Recherche200ResponseResultatsInner) SetNbDocumentsAvecMentions(v int32) {
	o.NbDocumentsAvecMentions = &v
}

// GetNbDocumentsTotal returns the NbDocumentsTotal field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetNbDocumentsTotal() int32 {
	if o == nil || IsNil(o.NbDocumentsTotal) {
		var ret int32
		return ret
	}
	return *o.NbDocumentsTotal
}

// GetNbDocumentsTotalOk returns a tuple with the NbDocumentsTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetNbDocumentsTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.NbDocumentsTotal) {
		return nil, false
	}
	return o.NbDocumentsTotal, true
}

// HasNbDocumentsTotal returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasNbDocumentsTotal() bool {
	if o != nil && !IsNil(o.NbDocumentsTotal) {
		return true
	}

	return false
}

// SetNbDocumentsTotal gets a reference to the given int32 and assigns it to the NbDocumentsTotal field.
func (o *Recherche200ResponseResultatsInner) SetNbDocumentsTotal(v int32) {
	o.NbDocumentsTotal = &v
}

// GetNbPublicationsAvecMentions returns the NbPublicationsAvecMentions field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetNbPublicationsAvecMentions() int32 {
	if o == nil || IsNil(o.NbPublicationsAvecMentions) {
		var ret int32
		return ret
	}
	return *o.NbPublicationsAvecMentions
}

// GetNbPublicationsAvecMentionsOk returns a tuple with the NbPublicationsAvecMentions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetNbPublicationsAvecMentionsOk() (*int32, bool) {
	if o == nil || IsNil(o.NbPublicationsAvecMentions) {
		return nil, false
	}
	return o.NbPublicationsAvecMentions, true
}

// HasNbPublicationsAvecMentions returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasNbPublicationsAvecMentions() bool {
	if o != nil && !IsNil(o.NbPublicationsAvecMentions) {
		return true
	}

	return false
}

// SetNbPublicationsAvecMentions gets a reference to the given int32 and assigns it to the NbPublicationsAvecMentions field.
func (o *Recherche200ResponseResultatsInner) SetNbPublicationsAvecMentions(v int32) {
	o.NbPublicationsAvecMentions = &v
}

// GetNbPublicationsTotal returns the NbPublicationsTotal field value if set, zero value otherwise.
func (o *Recherche200ResponseResultatsInner) GetNbPublicationsTotal() int32 {
	if o == nil || IsNil(o.NbPublicationsTotal) {
		var ret int32
		return ret
	}
	return *o.NbPublicationsTotal
}

// GetNbPublicationsTotalOk returns a tuple with the NbPublicationsTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recherche200ResponseResultatsInner) GetNbPublicationsTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.NbPublicationsTotal) {
		return nil, false
	}
	return o.NbPublicationsTotal, true
}

// HasNbPublicationsTotal returns a boolean if a field has been set.
func (o *Recherche200ResponseResultatsInner) HasNbPublicationsTotal() bool {
	if o != nil && !IsNil(o.NbPublicationsTotal) {
		return true
	}

	return false
}

// SetNbPublicationsTotal gets a reference to the given int32 and assigns it to the NbPublicationsTotal field.
func (o *Recherche200ResponseResultatsInner) SetNbPublicationsTotal(v int32) {
	o.NbPublicationsTotal = &v
}

func (o Recherche200ResponseResultatsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Recherche200ResponseResultatsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Siren) {
		toSerialize["siren"] = o.Siren
	}
	if !IsNil(o.SirenFormate) {
		toSerialize["siren_formate"] = o.SirenFormate
	}
	if !IsNil(o.OppositionUtilisationCommerciale) {
		toSerialize["opposition_utilisation_commerciale"] = o.OppositionUtilisationCommerciale
	}
	if !IsNil(o.NomEntreprise) {
		toSerialize["nom_entreprise"] = o.NomEntreprise
	}
	if !IsNil(o.PersonneMorale) {
		toSerialize["personne_morale"] = o.PersonneMorale
	}
	if !IsNil(o.Denomination) {
		toSerialize["denomination"] = o.Denomination
	}
	if !IsNil(o.Nom) {
		toSerialize["nom"] = o.Nom
	}
	if !IsNil(o.Prenom) {
		toSerialize["prenom"] = o.Prenom
	}
	if !IsNil(o.Sexe) {
		toSerialize["sexe"] = o.Sexe
	}
	if !IsNil(o.CodeNaf) {
		toSerialize["code_naf"] = o.CodeNaf
	}
	if !IsNil(o.LibelleCodeNaf) {
		toSerialize["libelle_code_naf"] = o.LibelleCodeNaf
	}
	if !IsNil(o.DomaineActivite) {
		toSerialize["domaine_activite"] = o.DomaineActivite
	}
	if !IsNil(o.ConventionsCollectives) {
		toSerialize["conventions_collectives"] = o.ConventionsCollectives
	}
	if !IsNil(o.DateCreation) {
		toSerialize["date_creation"] = o.DateCreation
	}
	if !IsNil(o.DateCreationFormate) {
		toSerialize["date_creation_formate"] = o.DateCreationFormate
	}
	if !IsNil(o.EntrepriseCessee) {
		toSerialize["entreprise_cessee"] = o.EntrepriseCessee
	}
	if !IsNil(o.DateCessation) {
		toSerialize["date_cessation"] = o.DateCessation
	}
	if !IsNil(o.EntrepriseEmployeuse) {
		toSerialize["entreprise_employeuse"] = o.EntrepriseEmployeuse
	}
	if !IsNil(o.SocieteAMission) {
		toSerialize["societe_a_mission"] = o.SocieteAMission
	}
	if !IsNil(o.CategorieJuridique) {
		toSerialize["categorie_juridique"] = o.CategorieJuridique
	}
	if !IsNil(o.FormeJuridique) {
		toSerialize["forme_juridique"] = o.FormeJuridique
	}
	if !IsNil(o.MicroEntreprise) {
		toSerialize["micro_entreprise"] = o.MicroEntreprise
	}
	if !IsNil(o.FormeExercice) {
		toSerialize["forme_exercice"] = o.FormeExercice
	}
	if !IsNil(o.Effectif) {
		toSerialize["effectif"] = o.Effectif
	}
	if !IsNil(o.EffectifMin) {
		toSerialize["effectif_min"] = o.EffectifMin
	}
	if !IsNil(o.EffectifMax) {
		toSerialize["effectif_max"] = o.EffectifMax
	}
	if !IsNil(o.TrancheEffectif) {
		toSerialize["tranche_effectif"] = o.TrancheEffectif
	}
	if !IsNil(o.AnneeEffectif) {
		toSerialize["annee_effectif"] = o.AnneeEffectif
	}
	if !IsNil(o.Capital) {
		toSerialize["capital"] = o.Capital
	}
	if !IsNil(o.StatutRcs) {
		toSerialize["statut_rcs"] = o.StatutRcs
	}
	if !IsNil(o.Siege) {
		toSerialize["siege"] = o.Siege
	}
	if !IsNil(o.Villes) {
		toSerialize["villes"] = o.Villes
	}
	if !IsNil(o.ChiffreAffaires) {
		toSerialize["chiffre_affaires"] = o.ChiffreAffaires
	}
	if !IsNil(o.Resultat) {
		toSerialize["resultat"] = o.Resultat
	}
	if !IsNil(o.EffectifsFinances) {
		toSerialize["effectifs_finances"] = o.EffectifsFinances
	}
	if !IsNil(o.AnneeFinances) {
		toSerialize["annee_finances"] = o.AnneeFinances
	}
	if !IsNil(o.Dirigeants) {
		toSerialize["dirigeants"] = o.Dirigeants
	}
	if !IsNil(o.Beneficiaires) {
		toSerialize["beneficiaires"] = o.Beneficiaires
	}
	if !IsNil(o.Documents) {
		toSerialize["documents"] = o.Documents
	}
	if !IsNil(o.Publications) {
		toSerialize["publications"] = o.Publications
	}
	if !IsNil(o.NbDirigeantsTotal) {
		toSerialize["nb_dirigeants_total"] = o.NbDirigeantsTotal
	}
	if !IsNil(o.NbBeneficiairesTotal) {
		toSerialize["nb_beneficiaires_total"] = o.NbBeneficiairesTotal
	}
	if !IsNil(o.NbDocumentsAvecMentions) {
		toSerialize["nb_documents_avec_mentions"] = o.NbDocumentsAvecMentions
	}
	if !IsNil(o.NbDocumentsTotal) {
		toSerialize["nb_documents_total"] = o.NbDocumentsTotal
	}
	if !IsNil(o.NbPublicationsAvecMentions) {
		toSerialize["nb_publications_avec_mentions"] = o.NbPublicationsAvecMentions
	}
	if !IsNil(o.NbPublicationsTotal) {
		toSerialize["nb_publications_total"] = o.NbPublicationsTotal
	}
	return toSerialize, nil
}

type NullableRecherche200ResponseResultatsInner struct {
	value *Recherche200ResponseResultatsInner
	isSet bool
}

func (v NullableRecherche200ResponseResultatsInner) Get() *Recherche200ResponseResultatsInner {
	return v.value
}

func (v *NullableRecherche200ResponseResultatsInner) Set(val *Recherche200ResponseResultatsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRecherche200ResponseResultatsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRecherche200ResponseResultatsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecherche200ResponseResultatsInner(val *Recherche200ResponseResultatsInner) *NullableRecherche200ResponseResultatsInner {
	return &NullableRecherche200ResponseResultatsInner{value: val, isSet: true}
}

func (v NullableRecherche200ResponseResultatsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecherche200ResponseResultatsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


